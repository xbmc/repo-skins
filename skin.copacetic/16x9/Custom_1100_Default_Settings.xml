<?xml version="1.0" encoding="UTF-8"?>
<!-- defaultsettings -->
<window type="dialog" id="1100">
	<onload condition="!Skin.HasSetting(filelists.showparentdiritems)">Skin.ToggleSetting(filelists.showparentdiritems)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.showallitems)">Skin.ToggleSetting(videolibrary.showallitems)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.groupmoviesets)">Skin.ToggleSetting(videolibrary.groupmoviesets)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.flattentvshows)">Skin.ToggleSetting(videolibrary.flattentvshows)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.showemptytvshows)">Skin.ToggleSetting(videolibrary.showemptytvshows)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.tvshowsselectfirstunwatcheditem)">Skin.ToggleSetting(videolibrary.tvshowsselectfirstunwatcheditem)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.tvshowsincludeallseasonsandspecials)">Skin.ToggleSetting(videolibrary.tvshowsincludeallseasonsandspecials)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.artworklevel)">Skin.ToggleSetting(videolibrary.artworklevel)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.movieartwhitelist)">Skin.ToggleSetting(videolibrary.movieartwhitelist)</onload>
	<onload condition="!Skin.HasSetting(videolibrary.tvshowartwhitelist)">Skin.ToggleSetting(videolibrary.tvshowartwhitelist)</onload>
	<onload condition="!Skin.HasSetting(musiclibrary.showallitems)">Skin.ToggleSetting(musiclibrary.showallitems)</onload>
	<onload condition="!Skin.HasSetting(musiclibrary.showcompilationartists)">Skin.ToggleSetting(musiclibrary.showcompilationartists)</onload>
	<onload condition="!Skin.HasSetting(pictures.generatethumbs)">Skin.ToggleSetting(pictures.generatethumbs)</onload>
	<onload condition="!Skin.HasSetting(musicplayer.visualisation)">Skin.ToggleSetting(musicplayer.visualisation)</onload>
	<defaultcontrol always="true">4000</defaultcontrol>
	<include content="WindowOpenClose_Fade_Delayed_Animation" />
	<controls>
		<include content="Default_Dialog_Panel_Layout">
			<param name="visible" value="true" />
			<param name="panel_edge_top" value="180" />
			<param name="panel_edge_bottom" value="180" />
			<include content="Breadcrumb_Label">
				<param name="title_label" value="Recommended settings" />
			</include>
			<control type="textbox">
				<left>120</left>
				<right>480</right>
				<bottom>40</bottom>
				<height>100</height>
				<font>Description</font>
				<align>left</align>
				<aligny>center</aligny>
				<textcolor>$VAR[Settings_Label_Color]</textcolor>
				<label>$LOCALIZE[31413] [B]$LOCALIZE[31414][/B]</label>
			</control>
			<include content="Settings_Grouplist_Template">
				<param name="id" value="3000" />
				<param name="left" value="330" />
				<param name="width" value="1260" />
				<param name="align" value="center" />
				<param name="onleft" value="28" />
				<param name="onright" value="30" />
				<param name="divider_visible" value="false" />
				<param name="scrollbar_visible" value="Integer.IsGreater(Window(home).Property(Settings_To_Change),7)" />
				<include content="defaultsettings_List_Content" />
			</include>
			<control type="image">
				<animation effect="zoom" end="330,270,1,540" time="0" condition="Integer.IsEqual(Window(home).Property(Settings_To_Change),6)">Conditional</animation>
				<animation effect="zoom" end="330,315,1,450" time="0" condition="Integer.IsEqual(Window(home).Property(Settings_To_Change),5)">Conditional</animation>
				<animation effect="zoom" end="330,360,1,360" time="0" condition="Integer.IsEqual(Window(home).Property(Settings_To_Change),4)">Conditional</animation>
				<animation effect="zoom" end="330,405,1,270" time="0" condition="Integer.IsEqual(Window(home).Property(Settings_To_Change),3)">Conditional</animation>
				<animation effect="zoom" end="330,450,1,180" time="0" condition="Integer.IsEqual(Window(home).Property(Settings_To_Change),2)">Conditional</animation>
				<left>330</left>
				<top>225</top>
				<height>630</height>
				<width>1</width>
				<texture colordiffuse="$VAR[Unfocused_Color]">views/white_100.png</texture>
			</control>
			<include content="Button_Group_Template">
				<param name="onup" value="3000" />
				<param name="onleft" value="3000" />
				<param name="onright" value="3000" />
				<param name="ondown" value="3000" />
				<param name="button1" value="true" />
				<param name="button1_id" value="30" />
				<param name="button1_texture" value="Refresh" />
				<param name="button1_onclick" value="SetFocus(9050)" />
				<param name="button2" value="true" />
				<param name="button2_id" value="29" />
				<param name="button2_texture" value="Cross" />
				<param name="button2_onclick" value="Close" />
				<param name="button3" value="true" />
				<param name="button3_id" value="28" />
				<param name="button3_texture" value="Check" />
				<param name="button3_onclick" value="SetFocus(9051)" />
			</include>
		</include>

		<control type="button" id="9051">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus condition="!Skin.HasSetting(videolibrary.artworklevel) + Skin.HasSetting(videolibrary.movieartwhitelist)">Skin.ToggleSetting(videolibrary.movieartwhitelist)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.artworklevel) + Skin.HasSetting(videolibrary.tvshowartwhitelist)">Skin.ToggleSetting(videolibrary.tvshowartwhitelist)</onfocus>
			<onfocus>Skin.ToggleSetting(run_set_default)</onfocus>
			<onfocus>Close</onfocus>
		</control>

		<control type="button" id="9050">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>SetFocus(30)</onfocus>
			<onfocus condition="!Skin.HasSetting(filelists.showparentdiritems)">Skin.ToggleSetting(filelists.showparentdiritems)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.showallitems)">Skin.ToggleSetting(videolibrary.showallitems)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.groupmoviesets)">Skin.ToggleSetting(videolibrary.groupmoviesets)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.flattentvshows)">Skin.ToggleSetting(videolibrary.flattentvshows)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.showemptytvshows)">Skin.ToggleSetting(videolibrary.showemptytvshows)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.tvshowsselectfirstunwatcheditem)">Skin.ToggleSetting(videolibrary.tvshowsselectfirstunwatcheditem)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.tvshowsincludeallseasonsandspecials)">Skin.ToggleSetting(videolibrary.tvshowsincludeallseasonsandspecials)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.artworklevel)">Skin.ToggleSetting(videolibrary.artworklevel)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.movieartwhitelist)">Skin.ToggleSetting(videolibrary.movieartwhitelist)</onfocus>
			<onfocus condition="!Skin.HasSetting(videolibrary.tvshowartwhitelist)">Skin.ToggleSetting(videolibrary.tvshowartwhitelist)</onfocus>
			<onfocus condition="!Skin.HasSetting(musiclibrary.showallitems)">Skin.ToggleSetting(musiclibrary.showallitems)</onfocus>
			<onfocus condition="!Skin.HasSetting(musiclibrary.showcompilationartists)">Skin.ToggleSetting(musiclibrary.showcompilationartists)</onfocus>
			<onfocus condition="!Skin.HasSetting(pictures.generatethumbs)">Skin.ToggleSetting(pictures.generatethumbs)</onfocus>
			<onfocus condition="!Skin.HasSetting(musicplayer.visualisation)">Skin.ToggleSetting(musicplayer.visualisation)</onfocus>
		</control>

	</controls>
</window>