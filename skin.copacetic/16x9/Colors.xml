<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!-- Hexes - RGB -->
	<variable name="Dark_Hex">
		<value>000000</value>
	</variable>
	<variable name="White_Hex">
		<value>ffffff</value>
	</variable>
	<variable name="Light_Hex">
		<value>ebedee</value>
	</variable>
	<variable name="Light_Background_Hex">
		<value>d8d8d8</value>
	</variable>
	<variable name="Accent_Hex">
		<value>ff5174</value>
	</variable>
	<variable name="Dark_Grey_Hex">
		<value>0f1415</value>
	</variable>
	<variable name="Light_Grey_Hex">
		<value>299498</value>
	</variable>
	<variable name="Unfocused_Grey_Hex">
		<value>68746D</value>
	</variable>
	<variable name="User_Rating_Hex">
		<value>ffed78</value>
	</variable>

	<!-- Hexes - Alpha -->
	<variable name="Alpha_100">
		<value>ff</value>
	</variable>
	<variable name="Alpha_90">
		<value>e5</value>
	</variable>
	<variable name="Alpha_85">
		<value>d9</value>
	</variable>
	<variable name="Alpha_75">
		<value>bf</value>
	</variable>
	<variable name="Alpha_66">
		<value>aa</value>
	</variable>
	<variable name="Alpha_60">
		<value>99</value>
	</variable>
	<variable name="Alpha_50">
		<value>80</value>
	</variable>
	<variable name="Alpha_43">
		<value>6e</value>
	</variable>
	<variable name="Alpha_40">
		<value>66</value>
	</variable>
	<variable name="Alpha_33">
		<value>54</value>
	</variable>
	<variable name="Alpha_32">
		<value>52</value>
	</variable>
	<variable name="Alpha_25">
		<value>40</value>
	</variable>
	<variable name="Alpha_20">
		<value>33</value>
	</variable>
	<variable name="Alpha_15">
		<value>26</value>
	</variable>
	<variable name="Alpha_0">
		<value>01</value>
	</variable>

	<!-- Color diffuse brightness -->
	<variable name="Brightness_0">
		<value>$VAR[Alpha_100]000000</value>
	</variable>
	<variable name="Brightness_15">
		<value>$VAR[Alpha_100]262626</value>
	</variable>
	<variable name="Brightness_25">
		<value>$VAR[Alpha_100]404040</value>
	</variable>
	<variable name="Brightness_33">
		<value>$VAR[Alpha_100]555555</value>
	</variable>
	<variable name="Brightness_40">
		<value>$VAR[Alpha_100]666666</value>
	</variable>
	<variable name="Brightness_50">
		<value>$VAR[Alpha_100]808080</value>
	</variable>
	<variable name="Brightness_66">
		<value>$VAR[Alpha_100]aaaaaa</value>
	</variable>
	<variable name="Brightness_75">
		<value>$VAR[Alpha_100]c0c0c0</value>
	</variable>
	<variable name="Brightness_100">
		<value>$VAR[Alpha_100]ffffff</value>
	</variable>

	<!-- Opacity -->
	<variable name="Opacity_50">
		<value>$VAR[Alpha_50]$VAR[White_Hex]</value>
	</variable>
	<variable name="Opacity_60">
		<value>$VAR[Alpha_60]$VAR[White_Hex]</value>
	</variable>

	<!-- Color palette -->
	<variable name="Blank_Color">
		<value>$VAR[Alpha_0]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Dark_Color">
		<value>$VAR[Alpha_100]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Light_Color">
		<value>$VAR[Alpha_100]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Light_Background_Color">
		<value>$VAR[Alpha_100]$VAR[Light_Background_Hex]</value>
	</variable>
	<variable name="Accent_Color">
		<value condition="Skin.String(User_Defined_Accent_Color)">$INFO[Skin.String(User_Defined_Accent_Color)]</value>
		<value>$VAR[Alpha_100]$VAR[Accent_Hex]</value>
	</variable>
	<variable name="Dark_Grey_Color">
		<value>$VAR[Alpha_100]$VAR[Dark_Grey_Hex]</value>
	</variable>
	<variable name="Light_Grey_Color">
		<value>$VAR[Alpha_100]$VAR[Light_Grey_Hex]</value>
	</variable>
	<variable name="Unfocused_Grey_Color">
		<value>$VAR[Alpha_100]$VAR[Unfocused_Grey_Hex]</value>
	</variable>
	<variable name="Unfocused_Grey_Color">
		<value>$VAR[Alpha_100]$VAR[Unfocused_Grey_Hex]</value>
	</variable>
	<variable name="User_Rating_Color">
		<value>$VAR[Alpha_100]$VAR[User_Rating_Hex]</value>
	</variable>
	<variable name="Test_Color">
		<value>$VAR[Alpha_50]$VAR[Accent_Hex]</value>
	</variable>

	<!-- Theme -->
	<variable name="Primary_Color">
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Secondary_Color">
		<value condition="Skin.String(Theme,Light)">$VAR[Light_Background_Color]</value>
		<value>$VAR[Dark_Color]</value>
	</variable>
	<variable name="Unfocused_Color">
		<value>$VAR[Unfocused_Grey_Color]</value>
	</variable>
	<variable name="Invalid_Color">
		<value>$VAR[Alpha_50]$VAR[Unfocused_Grey_Hex]</value>
	</variable>
	<variable name="Disabled_Color">
		<value>$VAR[Alpha_40]$VAR[Unfocused_Grey_Hex]</value>
	</variable>

	<!-- Diffuses  -->
	<!-- Use solid alpha for dimmed artwork to improve performance -->
	<variable name="Home_Artwork_Diffuse">
		<value condition="Skin.String(Home_Background_Brightness,50)">$VAR[Brightness_50]</value>
		<value condition="Skin.String(Home_Background_Brightness,25)">$VAR[Brightness_25]</value>
		<value>$VAR[Brightness_33]</value>
	</variable>
	<variable name="Windows_Artwork_Diffuse">
		<value>$VAR[Brightness_50]</value>
	</variable>
	<variable name="Dialogs_Artwork_Diffuse">
		<value condition="Window.Is(addonsettings)">$VAR[Brightness_15]</value>
		<value>$VAR[Brightness_50]</value>
	</variable>
	<variable name="Dropshadow_Diffuse">
		<value>$VAR[Brightness_0]</value>
	</variable>
	<!-- Alpha overlay masks -->
	<variable name="Panel_Mask">
		<value condition="Window.IsVisible(songinformation) | [Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album)] | Window.IsVisible(addoninformation)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.IsVisible(pictureinfo)">$VAR[Alpha_90]$VAR[Dark_Grey_Hex]</value>
		<value condition="Window.Is(addonbrowser) + Window.Is(filebrowser)">$VAR[Alpha_75]$VAR[Dark_Grey_Hex]</value>
		<value condition="Window.Is(addonbrowser) + !Container.Content(addons)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.Is(addonbrowser)">$VAR[Dark_Grey_Color]</value>
		<value condition="Integer.IsEqual(Skin.String(Background_Opacity),100)">$VAR[Dark_Grey_Color]</value>
		<value condition="Integer.IsEqual(Skin.String(Background_Opacity),85)">$VAR[Alpha_85]$VAR[Dark_Grey_Hex]</value>
		<value condition="Integer.IsEqual(Skin.String(Background_Opacity),66)">$VAR[Alpha_66]$VAR[Dark_Grey_Hex]</value>
		<value condition="Integer.IsEqual(Skin.String(Background_Opacity),50)">$VAR[Alpha_50]$VAR[Dark_Grey_Hex]</value>
		<value>$VAR[Alpha_75]$VAR[Dark_Grey_Hex]</value>
	</variable>
	<variable name="Transparent_Dialog_Mask">
		<value condition="VideoPlayer.IsFullscreen">$VAR[Alpha_75]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_50]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="visualisation_Mask">
		<value condition="!Skin.HasSetting(visualisation_Disable_Background)">$VAR[Dark_Color]</value>
		<value>$VAR[Secondary_Color]</value>
	</variable>

	<!-- Labels -->
	<variable name="Breadcrumb_Label_Color">
		<value condition="$EXP[Infoscreen_IsVisible] + [String.IsEqual(System.CurrentControlID,50) | String.IsEqual(System.CurrentControlID,3201) | String.IsEqual(System.CurrentControlID,3202) | String.IsEqual(System.CurrentControlID,3203) | String.IsEqual(System.CurrentControlID,3206) | String.IsEqual(System.CurrentControlID,3207)]">$VAR[Primary_Color]</value>
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(System.CurrentControlID,12)">$VAR[Primary_Color]</value>
		<value condition="Window.IsVisible(songinformation) | Window.IsVisible(addoninformation) | Window.IsVisible(pictureinfo) | Window.IsVisible(addoninformation)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget1_View,Strip) | Skin.String(Widget1_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3201)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget2_View,Strip) | Skin.String(Widget2_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3202)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget3_View,Strip) | Skin.String(Widget3_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3203)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget4_View,Strip) | Skin.String(Widget4_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3204)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget5_View,Strip) | Skin.String(Widget5_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3205)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget6_View,Strip) | Skin.String(Widget6_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3206)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget7_View,Strip) | Skin.String(Widget7_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3207)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget8_View,Strip) | Skin.String(Widget8_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3208)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + Window.Is(home) + [Skin.String(Widget9_View,Strip) | Skin.String(Widget9_View,Grid)] + String.IsEqual(window(home).property(Home_Widget),3209)">$VAR[Primary_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + [$EXP[ListView_Display_IsThumbnails] | $EXP[StripView_IsVisible] | $EXP[GridView_IsVisible]]">$VAR[Primary_Color]</value>
		<value condition="$EXP[ShowcaseView_IsVisible] + !$EXP[ShowcaseView_Details_Off] + !$EXP[Music_Player_IsVisible]">$VAR[Primary_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Notification_Widget_Background_Color">
		<value condition="Player.HasAudio">$VAR[Dark_Color]</value>
		<value>$VAR[Dark_Grey_Color]</value>
	</variable>
	<variable name="Notification_Widget_Icon_Color">
		<value condition="[Window.IsVisible(volumebar) | $EXP[Music_Player_IsVisible]] + $EXP[ShowcaseView_Display_IsPosters] + !$EXP[ShowcaseView_Details_Off]">$VAR[Light_Color]</value>
		<value condition="[Window.IsVisible(volumebar) | $EXP[Music_Player_IsVisible]] + [$EXP[ListView_IsVisible] | $EXP[StripView_IsVisible] | $EXP[GridView_IsVisible]]">$VAR[Light_Color]</value>
		<value>$VAR[Notification_Widget_Label_Color]</value>
	</variable>
	<variable name="Notification_Widget_Label_Color">
		<value>$VAR[Breadcrumb_Label_Color]</value>
	</variable>
	<variable name="Volume_Focused_Color">
		<value condition="$EXP[Music_Player_HasArt]">$VAR[Light_Color]</value>
		<value condition="!$EXP[Infoscreen_IsVisible] + [$EXP[ListView_Display_IsThumbnails] | $EXP[StripView_IsVisible] | $EXP[GridView_IsVisible]]">$VAR[Light_Color]</value>
		<value>$VAR[Notification_Widget_Label_Color]</value>
	</variable>

	<variable name="Common_List_Info_Label_Color">
		<value condition="Control.HasFocus(3100)">$VAR[Light_Color]</value>
		<value>$VAR[Blank_Color]</value>
	</variable>
	<variable name="Flag_Color">
		<value condition="$EXP[Dominant_Color_View_Conditions] + Skin.String(Theme,Light) + !String.IsEmpty(Window(home).Property(clearlogo-alt_cropped-color)) + !String.IsEqual(Window(home).Property(clearlogo-alt_cropped-color),ff000000) + Integer.IsLessOrEqual(Window(home).Property(clearlogo-alt_cropped-luminosity),Skin.String(Background_High_Threshold))">$INFO[Window(home).Property(clearlogo-alt_cropped-color)]</value>
		<value condition="$EXP[Dominant_Color_View_Conditions] + Skin.String(Theme,Light) + !String.IsEmpty(Window(home).Property(clearlogo_cropped-color)) + !String.IsEqual(Window(home).Property(clearlogo_cropped-color),ff000000) + Integer.IsLessOrEqual(Window(home).Property(clearlogo_cropped-luminosity),Skin.String(Background_High_Threshold))">$INFO[Window(home).Property(clearlogo_cropped-color)]</value>
		<value condition="$EXP[Dominant_Color_View_Conditions] + !Skin.String(Theme,Light) + !String.IsEmpty(Window(home).Property(clearlogo_cropped-color)) + !String.IsEqual(Window(home).Property(clearlogo_cropped-color),ffffffff) + Integer.IsGreaterOrEqual(Window(home).Property(clearlogo_cropped-luminosity),Skin.String(Background_Low_Threshold))">$INFO[Window(home).Property(clearlogo_cropped-color)]</value>
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="mediasource_Focus_Color">
		<value condition="Control.HasFocus(10)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="pictureinfo_Focused_Label_Color">
		<value condition="Control.HasFocus(5)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="Plot_Color">
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Grey_Color]</value>
	</variable>
	<variable name="Privacy_Policy_Color">
		<value condition="Control.HasFocus(62)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="Settings_Grouplist_Label_Color">
		<value condition="Window.Is(smartplaylisteditor) + Control.HasFocus(10)">$VAR[Light_Color]</value>
		<value condition="Window.Is(addonsettings) + String.IsEqual(Container(5).CurrentItem,-1) + !ControlGroup(4000).HasFocus">$VAR[Light_Color]</value>
		<value condition="Window.Is(pictureinfo) + Control.HasFocus(5)">$VAR[Light_Color]</value>
		<value condition="Window.Is(profiles) + Control.HasFocus(2)">$VAR[Light_Color]</value>
		<value condition="Window.Is(systeminfo) + ControlGroup(50).HasFocus">$VAR[Light_Color]</value>
		<value condition="!Window.Is(addonsettings) + String.IsEqual(Container(5).CurrentItem,-1) + !ControlGroup(3000).HasFocus + !Control.HasFocus(20)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(211) | Control.HasFocus(301) | Control.HasFocus(303) | Control.HasFocus(304) | Control.HasFocus(302)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="Settings_Left_List_Focus_Color">
		<value condition="Window.Is(filemanager) + Control.HasFocus(20)">$VAR[Light_Color]</value>
		<value condition="Window.Is(musicplaylisteditor) + Control.HasFocus(50)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="Settings_Right_List_Focus_Color">
		<value condition="Window.Is(filemanager) + Control.HasFocus(21)">$VAR[Light_Color]</value>
		<value condition="Window.Is(musicplaylisteditor) + Control.HasFocus(100)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="defaultsettings_filelists.showparentdiritems_Text_Color">
		<value condition="Skin.HasSetting(filelists.showparentdiritems)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_filelists.showparentdiritems_Focused_Color">
		<value condition="Skin.HasSetting(filelists.showparentdiritems)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.showallitems_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.showallitems)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.showallitems_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.showallitems)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.groupmoviesets_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.groupmoviesets)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.groupmoviesets_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.groupmoviesets)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.flattentvshows_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.flattentvshows)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.flattentvshows_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.flattentvshows)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.showemptytvshows_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.showemptytvshows)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.showemptytvshows_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.showemptytvshows)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.tvshowsselectfirstunwatcheditem_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.tvshowsselectfirstunwatcheditem)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.tvshowsselectfirstunwatcheditem_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.tvshowsselectfirstunwatcheditem)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.tvshowsincludeallseasonsandspecials_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.tvshowsincludeallseasonsandspecials)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.tvshowsincludeallseasonsandspecials_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.tvshowsincludeallseasonsandspecials)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.artworklevel_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.artworklevel)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.artworklevel_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.artworklevel)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.movieartwhitelist_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.movieartwhitelist)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.movieartwhitelist_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.movieartwhitelist)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.tvshowartwhitelist_Text_Color">
		<value condition="Skin.HasSetting(videolibrary.tvshowartwhitelist)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_videolibrary.tvshowartwhitelist_Focused_Color">
		<value condition="Skin.HasSetting(videolibrary.tvshowartwhitelist)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_musiclibrary.showallitems_Text_Color">
		<value condition="Skin.HasSetting(musiclibrary.showallitems)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_musiclibrary.showallitems_Focused_Color">
		<value condition="Skin.HasSetting(musiclibrary.showallitems)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_musiclibrary.showcompilationartists_Text_Color">
		<value condition="Skin.HasSetting(musiclibrary.showcompilationartists)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_musiclibrary.showcompilationartists_Focused_Color">
		<value condition="Skin.HasSetting(musiclibrary.showcompilationartists)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_musicplayer.visualisation_Text_Color">
		<value condition="Skin.HasSetting(musicplayer.visualisation)">$VAR[Unfocused_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>
	<variable name="defaultsettings_musicplayer.visualisation_Focused_Color">
		<value condition="Skin.HasSetting(musicplayer.visualisation)">$VAR[Light_Color]</value>
		<value>$VAR[Disabled_Color]</value>
	</variable>

	<variable name="skinsettings_Background_Low_Threshold_Button_Textcolor">
		<value condition="Control.HasFocus(10160) | Control.HasFocus(10161) | Control.HasFocus(10162)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Background_Opacity_Button_Textcolor">
		<value condition="Control.HasFocus(10240) | Control.HasFocus(10241)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Background_Slideshow_Button_Textcolor">
		<value condition="Control.HasFocus(10180) | Control.HasFocus(10181)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Background_Interval_Button_Textcolor">
		<value condition="Control.HasFocus(10190) | Control.HasFocus(10191)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Home_Background_Override_Source_Button_Textcolor">
		<value condition="Control.HasFocus(11060) | Control.HasFocus(11061)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Home_Background_Brightness_Button_Textcolor">
		<value condition="Control.HasFocus(11080) | Control.HasFocus(11081)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_visualisation_Layout_Button_Textcolor">
		<value condition="Control.HasFocus(14110) | Control.HasFocus(14111)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>


	<variable name="skinsettings_Widget1_View_Button_Textcolor">
		<value condition="Control.HasFocus(121210) | Control.HasFocus(121211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget2_View_Button_Textcolor">
		<value condition="Control.HasFocus(122210) | Control.HasFocus(122211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget3_View_Button_Textcolor">
		<value condition="Control.HasFocus(123210) | Control.HasFocus(123211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget4_View_Button_Textcolor">
		<value condition="Control.HasFocus(124210) | Control.HasFocus(124211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget5_View_Button_Textcolor">
		<value condition="Control.HasFocus(125210) | Control.HasFocus(125211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget6_View_Button_Textcolor">
		<value condition="Control.HasFocus(126210) | Control.HasFocus(126211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget7_View_Button_Textcolor">
		<value condition="Control.HasFocus(127210) | Control.HasFocus(127211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget8_View_Button_Textcolor">
		<value condition="Control.HasFocus(128210) | Control.HasFocus(128211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget9_View_Button_Textcolor">
		<value condition="Control.HasFocus(129210) | Control.HasFocus(129211)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget1_Display_Button_Textcolor">
		<value condition="Control.HasFocus(121300) | Control.HasFocus(121301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget2_Display_Button_Textcolor">
		<value condition="Control.HasFocus(122300) | Control.HasFocus(122301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget3_Display_Button_Textcolor">
		<value condition="Control.HasFocus(123300) | Control.HasFocus(123301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget4_Display_Button_Textcolor">
		<value condition="Control.HasFocus(124300) | Control.HasFocus(124301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget5_Display_Button_Textcolor">
		<value condition="Control.HasFocus(125300) | Control.HasFocus(125301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget6_Display_Button_Textcolor">
		<value condition="Control.HasFocus(126300) | Control.HasFocus(126301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget7_Display_Button_Textcolor">
		<value condition="Control.HasFocus(127300) | Control.HasFocus(127301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget8_Display_Button_Textcolor">
		<value condition="Control.HasFocus(128300) | Control.HasFocus(128301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Widget9_Display_Button_Textcolor">
		<value condition="Control.HasFocus(129300) | Control.HasFocus(129301)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Music_Rating_Like_Threshold_Button_Textcolor">
		<value condition="Control.HasFocus(14050) | Control.HasFocus(14051)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Multiart_Interval_Button_Textcolor">
		<value condition="Control.HasFocus(15220) | Control.HasFocus(15221)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="skinsettings_Trailer_Autoplay_Interval_Button_Textcolor">
		<value condition="Control.HasFocus(15320) | Control.HasFocus(15321)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="SortLetter_Background_Color">
		<value condition="Control.HasFocus(62) + $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(62) + Skin.String(Theme,Light)">$VAR[Dark_Color]</value>
		<value condition="Control.HasFocus(62)">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Accent_Color]</value>
		<value>$VAR[Dark_Grey_Color]</value>
	</variable>
	<variable name="SortLetter_Label_Color">
		<value condition="Control.HasFocus(62) + $EXP[Background_IsFanart]">$VAR[Dark_Color]</value>
		<value condition="Control.HasFocus(62) + Skin.String(Theme,Light)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(62)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="subtitlesearch_Left_List_Focused_Color">
		<value condition="Control.HasFocus(150)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="subtitlesearch_Right_List_Focused_Color">
		<value condition="Control.HasFocus(120)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>
	<variable name="virtualkeyboard_Shift_Key_Color">
		<value condition="!Control.HasFocus(302) + String.Contains(Control.GetLabel(302),*)">$VAR[Accent_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="virtualkeyboard_Caps_Key_Color">
		<value condition="!Control.HasFocus(303) + String.Contains(Control.GetLabel(303),*)">$VAR[Accent_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="virtualkeyboard_Symbols_Key_Color">
		<value condition="!Control.HasFocus(304) + String.Contains(Control.GetLabel(304),*)">$VAR[Accent_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="sliderdialog_Bar_Color">
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>

	<variable name="Progress_Background_Color">
		<value condition="Skin.String(Theme,Light) + $EXP[StripView_IsVisible]">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ListView_Display_IsThumbnails] + !$EXP[Containers_Posters]">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.Is(progressdialog)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Progress_Light_Background_Color]</value>
	</variable>
	<variable name="Progress_Focused_Color">
		<value condition="Skin.String(Theme,Light) + $EXP[StripView_IsVisible]">$VAR[Dark_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ListView_Display_IsThumbnails] + !$EXP[Containers_Posters]">$VAR[Dark_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.Is(progressdialog)">$VAR[Dark_Color]</value>
		<value>$VAR[Progress_Light_Focused_Color]</value>
	</variable>
	<variable name="Progress_Light_Background_Color">
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Progress_Light_Focused_Color">
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Progress_Indicator_Background_Color">
		<value condition="$EXP[StripView_IsVisible]">$VAR[Primary_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Progress_Indicator_Label_Color">
		<value condition="$EXP[StripView_IsVisible]">$VAR[Secondary_Color]</value>
		<value>$VAR[Dark_Color]</value>
	</variable>
	<variable name="Progress_Grid_Text_Color">
		<value condition="Skin.String(Accent_Color_Contrast,dark) + !Skin.String(User_Defined_Accent_Color,copacetic_accent_color)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Scroll_Background_Color">
		<value condition="$EXP[Background_IsFanart]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Scroll_Focused_Color">
		<value condition="Control.HasFocus(3000) | $EXP[Music_Player_HasFocus] | $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="Scroll_Widget_Background_Color">
		<value condition="ControlGroup(3000).HasFocus + [Window.Is(movieinformation) | String.IsEqual(ListItem.DBType,artist)] + !Control.HasFocus(10)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="ControlGroup(3000).HasFocus + String.IsEqual(ListItem.DBType,album) + Control.HasFocus(12)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="$EXP[Infoscreen_IsVisible] + Control.HasFocus(60) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,song)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Window.IsVisible(addoninformation) + Control.HasFocus(50) + !String.IsEmpty(Container(50).ListItemNoWrap(1).Art(thumb))">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + $EXP[BillboardView_Display_IsFanart_Widget_Infoscreen]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="[Control.HasFocus(3000) | $EXP[Music_Player_HasFocus]] + [Window.Is(movieinformation) | [Window.Is(musicinformation) + String.IsEqual(ListItem.DBType,artist)]]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Scroll_Widget_Focused_Color">
		<value condition="ControlGroup(3000).HasFocus + [Window.Is(movieinformation) | String.IsEqual(ListItem.DBType,artist)] + !Control.HasFocus(10)">$VAR[Light_Color]</value>
		<value condition="ControlGroup(3000).HasFocus + String.IsEqual(ListItem.DBType,album) + Control.HasFocus(12)">$VAR[Light_Color]</value>
		<value condition="$EXP[Infoscreen_IsVisible] + Control.HasFocus(60) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,song)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3201).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3202).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addoninformation) + Control.HasFocus(50) + !String.IsEmpty(Container(50).ListItemNoWrap(1).Art(thumb))">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(50).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3203).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3204).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + $EXP[BillboardView_Display_IsFanart_Widget_Infoscreen]">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3205).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3206).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3207).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3208).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + $EXP[StripView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + $EXP[StripView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + $EXP[StripView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + $EXP[GridView_Display_IsPosters_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + $EXP[GridView_Display_IsSquare_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + $EXP[GridView_Display_IsFanart_Widget_Infoscreen] + !String.IsEmpty(Container(3209).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="[Control.HasFocus(3000) | $EXP[Music_Player_HasFocus]] + [Window.Is(movieinformation) | [Window.Is(musicinformation) + String.IsEqual(ListItem.DBType,artist)]]">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="Home_Scroll_Widget_Background_Color">
		<value condition="Control.HasFocus(3000) | $EXP[Music_Player_HasFocus] | $EXP[Background_IsFanart]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Theme,Light) + Skin.String(Widget1_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Strip) + Skin.String(Widget1_Display,Posters) + !String.IsEmpty(Container(3201).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Strip) + Skin.String(Widget1_Display,Square) + !String.IsEmpty(Container(3201).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Strip) + Skin.String(Widget1_Display,Fanart) + !String.IsEmpty(Container(3201).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Grid) + Skin.String(Widget1_Display,Posters) + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Grid) + Skin.String(Widget1_Display,Square) + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Grid) + Skin.String(Widget1_Display,Fanart) + !String.IsEmpty(Container(3201).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Theme,Light) + Skin.String(Widget2_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Strip) + Skin.String(Widget2_Display,Posters) + !String.IsEmpty(Container(3202).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Strip) + Skin.String(Widget2_Display,Square) + !String.IsEmpty(Container(3202).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Strip) + Skin.String(Widget2_Display,Fanart) + !String.IsEmpty(Container(3202).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Grid) + Skin.String(Widget2_Display,Posters) + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Grid) + Skin.String(Widget2_Display,Square) + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Grid) + Skin.String(Widget2_Display,Fanart) + !String.IsEmpty(Container(3202).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Theme,Light) + Skin.String(Widget3_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Strip) + Skin.String(Widget3_Display,Posters) + !String.IsEmpty(Container(3203).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Strip) + Skin.String(Widget3_Display,Square) + !String.IsEmpty(Container(3203).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Strip) + Skin.String(Widget3_Display,Fanart) + !String.IsEmpty(Container(3203).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Grid) + Skin.String(Widget3_Display,Posters) + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Grid) + Skin.String(Widget3_Display,Square) + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Grid) + Skin.String(Widget3_Display,Fanart) + !String.IsEmpty(Container(3203).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Theme,Light) + Skin.String(Widget4_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Strip) + Skin.String(Widget4_Display,Posters) + !String.IsEmpty(Container(3204).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Strip) + Skin.String(Widget4_Display,Square) + !String.IsEmpty(Container(3204).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Strip) + Skin.String(Widget4_Display,Fanart) + !String.IsEmpty(Container(3204).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Grid) + Skin.String(Widget4_Display,Posters) + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Grid) + Skin.String(Widget4_Display,Square) + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Grid) + Skin.String(Widget4_Display,Fanart) + !String.IsEmpty(Container(3204).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Theme,Light) + Skin.String(Widget5_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Strip) + Skin.String(Widget5_Display,Posters) + !String.IsEmpty(Container(3205).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Strip) + Skin.String(Widget5_Display,Square) + !String.IsEmpty(Container(3205).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Strip) + Skin.String(Widget5_Display,Fanart) + !String.IsEmpty(Container(3205).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Grid) + Skin.String(Widget5_Display,Posters) + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Grid) + Skin.String(Widget5_Display,Square) + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Grid) + Skin.String(Widget5_Display,Fanart) + !String.IsEmpty(Container(3205).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Theme,Light) + Skin.String(Widget6_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Strip) + Skin.String(Widget6_Display,Posters) + !String.IsEmpty(Container(3206).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Strip) + Skin.String(Widget6_Display,Square) + !String.IsEmpty(Container(3206).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Strip) + Skin.String(Widget6_Display,Fanart) + !String.IsEmpty(Container(3206).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Grid) + Skin.String(Widget6_Display,Posters) + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Grid) + Skin.String(Widget6_Display,Square) + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Grid) + Skin.String(Widget6_Display,Fanart) + !String.IsEmpty(Container(3206).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Theme,Light) + Skin.String(Widget7_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Strip) + Skin.String(Widget7_Display,Posters) + !String.IsEmpty(Container(3207).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Strip) + Skin.String(Widget7_Display,Square) + !String.IsEmpty(Container(3207).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Strip) + Skin.String(Widget7_Display,Fanart) + !String.IsEmpty(Container(3207).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Grid) + Skin.String(Widget7_Display,Posters) + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Grid) + Skin.String(Widget7_Display,Square) + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Grid) + Skin.String(Widget7_Display,Fanart) + !String.IsEmpty(Container(3207).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Theme,Light) + Skin.String(Widget8_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Strip) + Skin.String(Widget8_Display,Posters) + !String.IsEmpty(Container(3208).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Strip) + Skin.String(Widget8_Display,Square) + !String.IsEmpty(Container(3208).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Strip) + Skin.String(Widget8_Display,Fanart) + !String.IsEmpty(Container(3208).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Grid) + Skin.String(Widget8_Display,Posters) + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Grid) + Skin.String(Widget8_Display,Square) + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Grid) + Skin.String(Widget8_Display,Fanart) + !String.IsEmpty(Container(3208).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Theme,Light) + Skin.String(Widget9_View,Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Strip) + Skin.String(Widget9_Display,Posters) + !String.IsEmpty(Container(3209).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Strip) + Skin.String(Widget9_Display,Square) + !String.IsEmpty(Container(3209).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Strip) + Skin.String(Widget9_Display,Fanart) + !String.IsEmpty(Container(3209).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Grid) + Skin.String(Widget9_Display,Posters) + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Grid) + Skin.String(Widget9_Display,Square) + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Grid) + Skin.String(Widget9_Display,Fanart) + !String.IsEmpty(Container(3209).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Home_Scroll_Widget_Focused_Color">
		<value condition="Control.HasFocus(3000) | $EXP[Music_Player_HasFocus] | $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Theme,Light) + Skin.String(Widget1_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Strip) + Skin.String(Widget1_Display,Posters) + !String.IsEmpty(Container(3201).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Strip) + Skin.String(Widget1_Display,Square) + !String.IsEmpty(Container(3201).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Strip) + Skin.String(Widget1_Display,Fanart) + !String.IsEmpty(Container(3201).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Grid) + Skin.String(Widget1_Display,Posters) + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Grid) + Skin.String(Widget1_Display,Square) + !String.IsEmpty(Container(3201).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3201) + Skin.String(Widget1_View,Grid) + Skin.String(Widget1_Display,Fanart) + !String.IsEmpty(Container(3201).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Theme,Light) + Skin.String(Widget2_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Strip) + Skin.String(Widget2_Display,Posters) + !String.IsEmpty(Container(3202).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Strip) + Skin.String(Widget2_Display,Square) + !String.IsEmpty(Container(3202).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Strip) + Skin.String(Widget2_Display,Fanart) + !String.IsEmpty(Container(3202).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Grid) + Skin.String(Widget2_Display,Posters) + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Grid) + Skin.String(Widget2_Display,Square) + !String.IsEmpty(Container(3202).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3202) + Skin.String(Widget2_View,Grid) + Skin.String(Widget2_Display,Fanart) + !String.IsEmpty(Container(3202).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Theme,Light) + Skin.String(Widget3_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Strip) + Skin.String(Widget3_Display,Posters) + !String.IsEmpty(Container(3203).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Strip) + Skin.String(Widget3_Display,Square) + !String.IsEmpty(Container(3203).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Strip) + Skin.String(Widget3_Display,Fanart) + !String.IsEmpty(Container(3203).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Grid) + Skin.String(Widget3_Display,Posters) + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Grid) + Skin.String(Widget3_Display,Square) + !String.IsEmpty(Container(3203).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3203) + Skin.String(Widget3_View,Grid) + Skin.String(Widget3_Display,Fanart) + !String.IsEmpty(Container(3203).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Theme,Light) + Skin.String(Widget4_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Strip) + Skin.String(Widget4_Display,Posters) + !String.IsEmpty(Container(3204).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Strip) + Skin.String(Widget4_Display,Square) + !String.IsEmpty(Container(3204).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Strip) + Skin.String(Widget4_Display,Fanart) + !String.IsEmpty(Container(3204).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Grid) + Skin.String(Widget4_Display,Posters) + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Grid) + Skin.String(Widget4_Display,Square) + !String.IsEmpty(Container(3204).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3204) + Skin.String(Widget4_View,Grid) + Skin.String(Widget4_Display,Fanart) + !String.IsEmpty(Container(3204).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Theme,Light) + Skin.String(Widget5_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Strip) + Skin.String(Widget5_Display,Posters) + !String.IsEmpty(Container(3205).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Strip) + Skin.String(Widget5_Display,Square) + !String.IsEmpty(Container(3205).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Strip) + Skin.String(Widget5_Display,Fanart) + !String.IsEmpty(Container(3205).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Grid) + Skin.String(Widget5_Display,Posters) + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Grid) + Skin.String(Widget5_Display,Square) + !String.IsEmpty(Container(3205).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3205) + Skin.String(Widget5_View,Grid) + Skin.String(Widget5_Display,Fanart) + !String.IsEmpty(Container(3205).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Theme,Light) + Skin.String(Widget6_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Strip) + Skin.String(Widget6_Display,Posters) + !String.IsEmpty(Container(3206).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Strip) + Skin.String(Widget6_Display,Square) + !String.IsEmpty(Container(3206).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Strip) + Skin.String(Widget6_Display,Fanart) + !String.IsEmpty(Container(3206).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Grid) + Skin.String(Widget6_Display,Posters) + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Grid) + Skin.String(Widget6_Display,Square) + !String.IsEmpty(Container(3206).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3206) + Skin.String(Widget6_View,Grid) + Skin.String(Widget6_Display,Fanart) + !String.IsEmpty(Container(3206).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Theme,Light) + Skin.String(Widget7_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Strip) + Skin.String(Widget7_Display,Posters) + !String.IsEmpty(Container(3207).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Strip) + Skin.String(Widget7_Display,Square) + !String.IsEmpty(Container(3207).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Strip) + Skin.String(Widget7_Display,Fanart) + !String.IsEmpty(Container(3207).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Grid) + Skin.String(Widget7_Display,Posters) + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Grid) + Skin.String(Widget7_Display,Square) + !String.IsEmpty(Container(3207).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3207) + Skin.String(Widget7_View,Grid) + Skin.String(Widget7_Display,Fanart) + !String.IsEmpty(Container(3207).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Theme,Light) + Skin.String(Widget8_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Strip) + Skin.String(Widget8_Display,Posters) + !String.IsEmpty(Container(3208).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Strip) + Skin.String(Widget8_Display,Square) + !String.IsEmpty(Container(3208).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Strip) + Skin.String(Widget8_Display,Fanart) + !String.IsEmpty(Container(3208).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Grid) + Skin.String(Widget8_Display,Posters) + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Grid) + Skin.String(Widget8_Display,Square) + !String.IsEmpty(Container(3208).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3208) + Skin.String(Widget8_View,Grid) + Skin.String(Widget8_Display,Fanart) + !String.IsEmpty(Container(3208).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Theme,Light) + Skin.String(Widget9_View,Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Strip) + Skin.String(Widget9_Display,Posters) + !String.IsEmpty(Container(3209).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Strip) + Skin.String(Widget9_Display,Square) + !String.IsEmpty(Container(3209).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Strip) + Skin.String(Widget9_Display,Fanart) + !String.IsEmpty(Container(3209).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Grid) + Skin.String(Widget9_Display,Posters) + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Grid) + Skin.String(Widget9_Display,Square) + !String.IsEmpty(Container(3209).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(3209) + Skin.String(Widget9_View,Grid) + Skin.String(Widget9_Display,Fanart) + !String.IsEmpty(Container(3209).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="Seekbar_Background_Color">
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(visualisation)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Cachebar_Background_Color">
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(visualisation)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Seekbar_Focused_Color">
		<value condition="Control.HasFocus(60)">$VAR[Accent_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(visualisation)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Star_Color">
		<value condition="!String.IsEmpty(ListItem.UserRating)">$VAR[User_Rating_Color]</value>
		<value>$VAR[Accent_Color]</value>
	</variable>

	<!-- PVR -->
	<variable name="epggrid_Focused_Color">
		<value condition="Control.HasFocus(10)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

</includes>