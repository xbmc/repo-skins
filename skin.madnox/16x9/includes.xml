<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include file="Defaults.xml"/>
	<include file="Includes_Themes.xml"/>
	<include file="Includes_ThemeSelect.xml"/>
	<include file="Includes_Dialogs.xml"/>
	<include file="Includes_InfoDialogs.xml"/>
	<include file="Includes_CustomSelect.xml"/>
	<include file="Includes_Animations.xml"/>
	<include file="Includes_Backgrounds.xml"/>
	<include file="Includes_VideoLyrics.xml"/>
	<include file="Includes_Home.xml"/>
	<include file="Includes_NowPlaying.xml"/>
	<include file="script-skinshortcuts-includes.xml"/>
	<include file="Includes_MediaFlags.xml"/>
	<include file="Includes_MediaMenu.xml"/>
	<include file="Includes_Views.xml"/>
	<include file="Includes_ViewsVariables.xml"/>
	<include file="Includes_PVR.xml"/>
	<include file="Includes_Settings.xml"/>
	<include file="Includes_Topbar.xml"/>
	<include file="View_050_CoverList.xml"/>
	<include file="View_051_SimpleList.xml"/>
	<include file="View_053_InfoList1.xml"/>
	<include file="View_054_InfoList2.xml"/>
	<include file="View_055_LowList.xml"/>
	<include file="View_056_3Panel.xml"/>
	<include file="View_057_3PanelSquare.xml"/>
	<include file="View_058_RightList.xml"/>
	<include file="View_500_Portrait.xml"/>
	<include file="View_501_Square.xml"/>
	<include file="View_502_Banner.xml"/>
	<include file="View_503_Landscape.xml"/>
	<include file="View_504_Focus.xml"/>
	<include file="View_505_FocusSquare.xml"/>
	<include file="View_506_Cascade.xml"/>
	<include file="View_507_CascadeSquare.xml"/>
	<include file="View_508_Showcase.xml"/>
	<include file="View_509_ShowcaseSquare.xml"/>
	<include file="View_510_KodiFlix.xml"/>
	<include file="View_511_KodiFlixSquare.xml"/>
	<include file="View_512_KodiFlixLandscape.xml"/>
	<include file="View_520_PortraitIcon.xml"/>
	<include file="View_521_SquareIcon.xml"/>
	<include file="View_522_BannerIcon.xml"/>
	<include file="View_523_LandscapeIcon.xml"/>
	<include file="View_524_SquareIconAlbums.xml"/>
	<include file="View_530_PortraitIconInfo.xml"/>
	<include file="View_531_SquareIconInfo.xml"/>
	<include file="View_532_BannerIconInfo.xml"/>
	<include file="View_533_LandscapeIconInfo.xml"/>
	<include file="View_540_PortraitWall.xml"/>
	<include file="View_541_SquareWall.xml"/>
	<include file="View_542_BannerWall.xml"/>
	<include file="View_543_LandscapeWall.xml"/>
	<constant name="TextureFadeTime">480</constant>
	<expression name="AreaVisibleVideos">Window.IsVisible(videos) | Window.IsVisible(videoplaylist) | Window.IsVisible(1102)</expression>
	<expression name="AreaVisibleMusic">Window.IsVisible(music) | Window.IsVisible(musicplaylist) | Window.IsVisible(musicplaylisteditor) | Window.IsVisible(visualisation)</expression>
	<expression name="AreaVisibleAddons">Window.IsVisible(1114) | Window.IsVisible(programs) | Window.IsVisible(addonbrowser)</expression>
	<expression name="SystemAnimationOpenCondition">![Window.Previous(settings) | Window.Previous(SettingsCategory.xml) | Window.Previous(skinsettings) | Window.Previous(profiles) | Window.Previous(systeminfo) | Window.Previous(eventlog) | Window.Previous(filemanager)]</expression>
	<expression name="SystemAnimationCloseCondition">![Window.Next(settings) | Window.Next(SettingsCategory.xml) | Window.Next(skinsettings) | Window.Next(profiles) | Window.Next(systeminfo) | Window.Next(eventlog) | Window.Next(filemanager)]</expression>
	<expression name="PVRAnimationOpenCondition">![Window.Previous(MyPVRChannels.xml) | Window.Previous(MyPVRGuide.xml) | Window.Previous(MyPVRRecordings.xml) | Window.Previous(MyPVRSearch.xml) | Window.Previous(MyPVRTimers.xml)]</expression>
	<expression name="PVRAnimationCloseCondition">![Window.Next(MyPVRChannels.xml) | Window.Next(MyPVRGuide.xml) | Window.Next(MyPVRRecordings.xml) | Window.Next(MyPVRSearch.xml) | Window.Next(MyPVRTimers.xml)]</expression>
	<include name="onunload_SkinSettings">
		<onunload condition="!Skin.HasSetting(SmartShortcuts.playlists)">Skin.SetBool(SmartShortcuts.playlists)</onunload>
		<onunload condition="!Skin.HasSetting(BlurEnabled)">Skin.ToggleSetting(BlurEnabled)</onunload>
		<onunload condition="!Skin.HasSetting(BlurEnabled)">RunScript(script.embuary.helper,action=restartservice)</onunload>
		<onunload condition="System.HasAddon(script.artistslideshow)">RunScript(script.artistslideshow,daemon=True)</onunload>
		<onunload condition="System.HasAddon(plugin.video.themoviedb.helper)">Skin.SetBool(TMDbHelper.Service)</onunload>
		<onunload condition="System.HasAddon(plugin.video.themoviedb.helper)">Skin.SetBool(TMDbHelper.DisableArtwork)</onunload>
		<onunload condition="System.HasAddon(plugin.video.themoviedb.helper)">Skin.SetBool(TMDbHelper.DisablePersonStats)</onunload>
	</include>
	<include name="ContainerScrollTime">
		<scrolltime tween="sine">480</scrolltime>
	</include>
	<include name="FullScreenDimensions">
		<width>1920</width>
		<height>1080</height>
	</include>
	<include name="HiddenObject">
		<left>-2000</left>
		<top>-1100</top>
		<width>1</width>
		<height>1</height>
		<texturefocus/>
		<texturenofocus/>
		<font/>
	</include>
	<include name="HiddenList">
		<left>-2000</left>
		<top>-1100</top>
		<width>1</width>
		<height>1</height>
		<itemlayout/>
		<focusedlayout/>
	</include>
	<include name="AutoScrollPlot">
		<autoscroll time="3000" delay="4000" repeat="5000">!Skin.HasSetting(DisableAutoScroll)</autoscroll>
	</include>
	<include name="ReloadWindowOnClick">
		<onclick condition="Window.IsActive(addonbrowser)">SetProperty(ActiveWindow,addons,home)</onclick>
		<onclick condition="Window.IsActive(music)">SetProperty(ActiveWindow,music,home)</onclick>
		<onclick condition="Window.IsActive(musicplaylist)">SetProperty(ActiveWindow,musicplaylist,home)</onclick>
		<onclick condition="Window.IsActive(videoplaylist)">SetProperty(ActiveWindow,videoplaylist,home)</onclick>
		<onclick condition="Window.IsActive(videos)">SetProperty(ActiveWindow,videos,home)</onclick>
		<onclick condition="Window.IsActive(programs)">SetProperty(ActiveWindow,programs,home)</onclick>
		<onclick>SetProperty(ContainerPath,$ESCINFO[Container.FolderPath],home)</onclick>
		<onclick>Dialog.Close(1115)</onclick>
		<onclick>ReplaceWindow(1117)</onclick>
	</include>
	<variable name="VolumeIconVar">
		<value condition="Player.Muted">[COLOR white]panels/volume/mute.png[/COLOR]</value>
		<value condition="Integer.IsGreater(Player.Volume,66)">panels/volume/volume.png</value>
		<value condition="Integer.IsGreater(Player.Volume,33)">panels/volume/volume2.png</value>
		<value condition="player.passthrough">panels/volume/volume.png</value>
		<value>panels/volume/volume1.png</value>
	</variable>
	<variable name="IconPathVar">
		<value condition="Skin.HasSetting(IconsColored)">icons/colored/</value>
		<value>icons/default/</value>
	</variable>
	<!-- Floor -->
	<include name="Floor">
		<param name="visible">Skin.HasSetting(SettingsHideFloor)</param>
		<param name="slide">220</param>
		<param name="animationopen">true</param>
		<param name="animationclose">true</param>
		<param name="highlight">FloorHighlight</param>
		<param name="top">880</param>
		<definition>
			<control type="group">
				<include content="AnimationSlideBottomWindow">
					<param name="slide">$PARAM[slide]</param>
					<param name="opencondition">$PARAM[animationopen]</param>
					<param name="closecondition">$PARAM[animationclose]</param>
				</include>
				<control type="group">
					<visible>!$PARAM[visible]</visible>
					<include content="AnimationSlideBottomVisible">
						<param name="slide">$PARAM[slide]</param>
					</include>
					<control type="group">
						<top>$PARAM[top]</top>
						<control type="image">
							<top>-20</top>
							<width>1920</width>
							<height>20</height>
							<texture colordiffuse="$VAR[PanelShadowColorVar]" border="1">panels/floor/shadow.png</texture>
						</control>
					</control>
					<control type="image">
						<top>$PARAM[top]</top>
						<bottom>0</bottom>
						<width>1920</width>
						<texture colordiffuse="$VAR[FloorStyleColorVar]" border="1">panels/floor/floor.png</texture>
					</control>
					<include content="$PARAM[highlight]">
						<param name="top">$PARAM[top]</param>
					</include>
				</control>
				<control type="image">
					<visible>$PARAM[visible]</visible>
					<include>AnimationVisibleFade</include>
					<top>780</top>
					<width>1920</width>
					<height>300</height>
					<texture border="1">panels/background-gradient.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="FloorHighlight">
		<param name="top">880</param>
		<definition>
			<control type="image">
				<top>$PARAM[top]</top>
				<bottom>0</bottom>
				<width>1920</width>
				<texture colordiffuse="$VAR[FloorHighlightColorVar]">panels/floor/highlight.png</texture>
			</control>
		</definition>
	</include>
	<include name="FloorHighlightLeft">
		<param name="top">880</param>
		<definition>
			<control type="image">
				<top>$PARAM[top]</top>
				<bottom>0</bottom>
				<width>1920</width>
				<texture flipx="true" colordiffuse="$VAR[FloorHighlightColorVar]">panels/floor/highlight-right.png</texture>
			</control>
		</definition>
	</include>
	<include name="FloorHighlightRight">
		<param name="top">880</param>
		<definition>
			<control type="image">
				<top>$PARAM[top]</top>
				<bottom>0</bottom>
				<width>1920</width>
				<texture colordiffuse="$VAR[FloorHighlightColorVar]">panels/floor/highlight-right.png</texture>
			</control>
		</definition>
	</include>
	<include name="FloorHighlightMiddle">
		<param name="top">880</param>
		<definition>
			<control type="image">
				<top>$PARAM[top]</top>
				<bottom>0</bottom>
				<width>1920</width>
				<texture colordiffuse="$VAR[FloorHighlightColorVar]">panels/floor/highlight-middle.png</texture>
			</control>
		</definition>
	</include>
	<include name="FloorShadow">
		<param name="visible">true</param>
		<definition>
			<control type="image">
				<visible>$PARAM[visible]</visible>
				<top>780</top>
				<width>1920</width>
				<height>300</height>
				<texture border="1">panels/background-gradient.png</texture>
			</control>
		</definition>
	</include>
	<include name="FloorShadowWall">
		<control type="image">
			<top>900</top>
			<width>1920</width>
			<height>180</height>
			<texture border="1">panels/wall-gradient.png</texture>
		</control>
	</include>
	<!-- Panels -->
	<include name="PanelWide">
		<param name="top">860</param>
		<param name="toptexture">880</param>
		<param name="topshadow">860</param>
		<param name="height">220</param>
		<param name="heighttexture">200</param>
		<param name="flipy">false</param>
		<definition>
			<control type="image">
				<top>$PARAM[topshadow]</top>
				<width>1920</width>
				<height>20</height>
				<texture flipy="$PARAM[flipy]" colordiffuse="$VAR[PanelShadowColorVar]" border="1">panels/floor/shadow.png</texture>
			</control>
			<control type="image">
				<top>$PARAM[top]</top>
				<width>1920</width>
				<height>$PARAM[height]</height>
				<texture flipy="$PARAM[flipy]" colordiffuse="$VAR[PanelStyleColorVar]" border="1,20,1,20">$VAR[PanelStyleFloorVar]</texture>
			</control>
			<control type="image">
				<top>$PARAM[toptexture]</top>
				<width>1920</width>
				<height>$PARAM[heighttexture]</height>
				<aspectratio align="right" scalediffuse="false">scale</aspectratio>
				<texture flipy="$PARAM[flipy]" colordiffuse="$VAR[PanelTextureColorVar]" border="1">$INFO[Skin.String(PanelTexture.texture)]</texture>
			</control>
		</definition>
	</include>
	<include name="PanelDefault">
		<param name="left">80</param>
		<param name="right">80</param>
		<param name="top">80</param>
		<param name="height">920</param>
		<param name="lefttexture">100</param>
		<param name="righttexture">100</param>
		<param name="toptexture">100</param>
		<param name="heighttexture">880</param>
		<param name="diffusetexture">diffuse/rounded20-1720x880.png</param>
		<param name="reflect">true</param>
		<param name="reflecttop">965</param>
		<param name="visible">true</param>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[reflecttop]</top>
					<height>$PARAM[height]</height>
					<texture flipy="true" diffuse="panels/windows/reflect.png" colordiffuse="$VAR[PanelStyleColorVar]" border="40">$VAR[PanelStyleVar]</texture>
					<visible>$PARAM[reflect]</visible>
				</control>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[top]</top>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[PanelShadowColorVar]" border="50">$VAR[PanelShadowVar]</texture>
				</control>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[top]</top>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[PanelStyleColorVar]" border="60">$VAR[PanelStyleVar]</texture>
				</control>
				<control type="image">
					<left>$PARAM[lefttexture]</left>
					<right>$PARAM[righttexture]</right>
					<top>$PARAM[toptexture]</top>
					<height>$PARAM[heighttexture]</height>
					<aspectratio align="right" scalediffuse="false">scale</aspectratio>
					<texture diffuse="$PARAM[diffusetexture]" colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
					<visible>!Skin.HasSetting(PanelSquare.texture)</visible>
				</control>
				<control type="image">
					<left>$PARAM[lefttexture]</left>
					<right>$PARAM[righttexture]</right>
					<top>$PARAM[toptexture]</top>
					<height>$PARAM[heighttexture]</height>
					<aspectratio align="right" scalediffuse="false">scale</aspectratio>
					<texture colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
					<visible>Skin.HasSetting(PanelSquare.texture)</visible>
				</control>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[top]</top>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[PanelEmbossColorVar]" border="40">$VAR[PanelEmbossVar]</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="PanelSideBlade">
		<param name="left">80</param>
		<param name="top">110</param>
		<param name="width">1760</param>
		<param name="height">860</param>
		<param name="lefttexture">100</param>
		<param name="widthtexture">398</param>
		<param name="toptexture">130</param>
		<param name="heighttexture">820</param>
		<param name="diffusetexture">diffuse/siderounded20-398x820.png</param>
		<param name="flipx">false</param>
		<param name="reflect">true</param>
		<param name="reflecttop">935</param>
		<definition>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[reflecttop]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture flipx="$PARAM[flipx]" flipy="true" diffuse="panels/windows/reflect.png" colordiffuse="$VAR[PanelStyleColorVar]" border="40">$VAR[HalfPanelStyleVar]</texture>
				<visible>$PARAM[reflect]</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture flipx="$PARAM[flipx]" colordiffuse="$VAR[PanelShadowColorVar]" border="50">$VAR[HalfPanelShadowVar]</texture>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture flipx="$PARAM[flipx]" colordiffuse="$VAR[PanelStyleColorVar]" border="60">$VAR[HalfPanelStyleVar]</texture>
			</control>
			<control type="image">
				<left>$PARAM[lefttexture]</left>
				<top>$PARAM[toptexture]</top>
				<width>$PARAM[widthtexture]</width>
				<height>$PARAM[heighttexture]</height>
				<aspectratio align="right" scalediffuse="false">scale</aspectratio>
				<texture flipx="$PARAM[flipx]" diffuse="$PARAM[diffusetexture]" colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
				<visible>!Skin.HasSetting(PanelSquare.texture)</visible>
			</control>
			<control type="image">
				<left>$PARAM[lefttexture]</left>
				<top>$PARAM[toptexture]</top>
				<width>$PARAM[widthtexture]</width>
				<height>$PARAM[heighttexture]</height>
				<aspectratio align="right" scalediffuse="false">scale</aspectratio>
				<texture flipx="$PARAM[flipx]" colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
				<visible>Skin.HasSetting(PanelSquare.texture)</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture flipx="$PARAM[flipx]" colordiffuse="$VAR[PanelEmbossColorVar]" border="40">$VAR[HalfPanelEmbossVar]</texture>
			</control>
		</definition>
	</include>
	<include name="PanelSide">
		<param name="left">80</param>
		<param name="right">80</param>
		<param name="top">80</param>
		<param name="height">920</param>
		<param name="lefttexture">100</param>
		<param name="righttexture">100</param>
		<param name="toptexture">100</param>
		<param name="heighttexture">880</param>
		<param name="diffusetexture">diffuse/rounded20-1720x880.png</param>
		<param name="reflect">true</param>
		<param name="reflecttop">965</param>
		<param name="visible">true</param>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[top]</top>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[PanelShadowColorVar]" border="40">$VAR[PanelShadowVar]</texture>
				</control>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[top]</top>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[PanelStyleColorVar]" border="346,40,40,40">$VAR[SidePanelStyleVar]</texture>
				</control>
				<control type="image">
					<left>$PARAM[lefttexture]</left>
					<right>$PARAM[righttexture]</right>
					<top>$PARAM[toptexture]</top>
					<height>$PARAM[heighttexture]</height>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture diffuse="$PARAM[diffusetexture]" colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
					<visible>!Skin.HasSetting(PanelSquare.texture)</visible>
				</control>
				<control type="image">
					<left>$PARAM[lefttexture]</left>
					<right>$PARAM[righttexture]</right>
					<top>$PARAM[toptexture]</top>
					<height>$PARAM[heighttexture]</height>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
					<visible>Skin.HasSetting(PanelSquare.texture)</visible>
				</control>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[top]</top>
					<height>$PARAM[height]</height>
					<texture colordiffuse="$VAR[PanelEmbossColorVar]" border="40">$VAR[PanelEmbossVar]</texture>
				</control>
				<control type="image">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[reflecttop]</top>
					<height>$PARAM[height]</height>
					<texture flipy="true" diffuse="panels/windows/reflect.png" colordiffuse="$VAR[PanelStyleColorVar]" border="346,40,40,40">$VAR[SidePanelStyleVar]</texture>
					<visible>$PARAM[reflect]</visible>
				</control>
				<control type="image">
					<left>100</left>
					<bottom>90</bottom>
					<width>323</width>
					<height>172</height>
					<aspectratio>keep</aspectratio>
					<texture>icons/logo.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<!-- Weather -->
	<include name="WeatherIconAnimation">
		<fadetime>1</fadetime>
		<pauseatend>1</pauseatend>
		<timeperimage>080</timeperimage>
		<randomize>false</randomize>
		<loop>true</loop>
		<aspectratio align="center" aligny="center">keep</aspectratio>
	</include>
	<include name="WeatherVerticalList">
		<include>AnimationVisibleFade</include>
		<left>460</left>
		<top>135</top>
		<width>1325</width>
		<height>810</height>
		<onleft>8000</onleft>
		<itemlayout height="202.5">
			<control type="image">
				<bordersize>15</bordersize>
				<texture colordiffuse="FF000000" border="10">buttons/panel-select-focus.png</texture>
			</control>
			<control type="multiimage">
				<left>35</left>
				<width>132</width>
				<include>WeatherIconAnimation</include>
				<imagepath background="true">$INFO[ListItem.Icon]</imagepath>
			</control>
			<control type="label">
				<top>34</top>
				<left>188</left>
				<height>50</height>
				<font>Font33_Bold_Caps</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<top>71</top>
				<left>188</left>
				<height>100</height>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<top>14</top>
				<right>50</right>
				<height>172.5</height>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(label3)]</label>
			</control>
		</itemlayout>
		<focusedlayout height="202.50">
			<control type="image">
				<bordersize>15</bordersize>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]" border="10">buttons/panel-select-focus.png</texture>
			</control>
			<control type="multiimage">
				<left>35</left>
				<width>132</width>
				<include>WeatherIconAnimation</include>
				<imagepath background="true">$INFO[ListItem.Icon]</imagepath>
			</control>
			<control type="label">
				<top>34</top>
				<left>188</left>
				<height>50</height>
				<font>Font33_Bold_Caps</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<top>71</top>
				<left>188</left>
				<height>100</height>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<top>14</top>
				<right>50</right>
				<height>172.5</height>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(label3)]</label>
			</control>
		</focusedlayout>
	</include>
	<include name="WeatherHorizontalList">
		<param name="width">439</param>
		<definition>
			<include>AnimationVisibleFade</include>
			<left>460</left>
			<top>135</top>
			<width>1325</width>
			<height>810</height>
			<orientation>horizontal</orientation>
			<itemlayout width="$PARAM[width]">
				<control type="image">
					<bordersize>15</bordersize>
					<texture colordiffuse="FF000000" border="10">buttons/panel-select-focus.png</texture>
				</control>
				<control type="multiimage">
					<top>128</top>
					<height>350</height>
					<include>WeatherIconAnimation</include>
					<imagepath background="true">$INFO[ListItem.Icon]</imagepath>
				</control>
				<control type="label">
					<top>30</top>
					<height>60</height>
					<align>center</align>
					<font>Font33_Bold_Caps</font>
					<textoffsetx>60</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="label">
					<top>495</top>
					<height>300</height>
					<align>center</align>
					<textoffsetx>60</textoffsetx>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label2]</label>
				</control>
			</itemlayout>
			<focusedlayout width="$PARAM[width]">
				<control type="image">
					<bordersize>15</bordersize>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]" border="10">buttons/panel-select-focus.png</texture>
				</control>
				<control type="multiimage">
					<top>128</top>
					<height>350</height>
					<include>WeatherIconAnimation</include>
					<imagepath background="true">$INFO[ListItem.Icon]</imagepath>
				</control>
				<control type="label">
					<top>30</top>
					<height>60</height>
					<align>center</align>
					<font>Font33_Bold_Caps</font>
					<textoffsetx>60</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="label">
					<top>495</top>
					<height>300</height>
					<align>center</align>
					<textoffsetx>60</textoffsetx>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label2]</label>
				</control>
			</focusedlayout>
		</definition>
	</include>
	<include name="WeatherDayItem">
		<param name="item"/>
		<definition>
			<item>
				<label>$INFO[Window(weather).Property(Daily.$PARAM[item].LongDay)]</label>
				<label2>$INFO[Window(weather).Property(Daily.$PARAM[item].Outlook)]</label2>
				<icon>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Daily.$PARAM[item].FanartCode)]$INFO[Skin.String(WeatherIcons.ext)]</icon>
				<property name="label3">[COLOR $VAR[PanelHighlightColorVar]]$INFO[Window(weather).Property(Daily.$PARAM[item].HighTemperature)][/COLOR]$INFO[Window(weather).Property(Daily.$PARAM[item].LowTemperature), ]</property>
				<visible>!String.IsEmpty(Window(Weather).Property(Daily.$PARAM[item].LongDay))</visible>
			</item>
		</definition>
	</include>
	<include name="WeatherDailyItem">
		<param name="item"/>
		<definition>
			<item>
				<label>$INFO[Window.Property(Daily.$PARAM[item].LongDay)]$INFO[Window.Property(Daily.$PARAM[item].LongDate), ]</label>
				<label2>[COLOR $VAR[PanelHighlightColorVar]]$INFO[Window.Property(Daily.$PARAM[item].HighTemperature)][/COLOR]$INFO[Window.Property(Daily.$PARAM[item].LowTemperature), ]$INFO[Window.Property(Daily.$PARAM[item].Outlook),[CR]]</label2>
				<icon>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Daily.$PARAM[item].FanartCode)]$INFO[Skin.String(WeatherIcons.ext)]</icon>
				<property name="label3">$INFO[Window.Property(Daily.$PARAM[item].Precipitation),$LOCALIZE[1448] ][CR]$INFO[Window.Property(Daily.$PARAM[item].WindSpeed)]$INFO[Window.Property(Daily.$PARAM[item].WindDirection),  ]$INFO[Window.Property(Daily.$PARAM[item].WindDegree),  ,]$INFO[Window.Property(Daily.$PARAM[item].Humidity),[CR]$LOCALIZE[406] ]</property>
				<visible>!String.IsEmpty(Window(weather).Property(Daily.$PARAM[item].LongDay))</visible>
			</item>
		</definition>
	</include>
	<include name="WeatherHourlyItem">
		<param name="item"/>
		<definition>
			<item>
				<label>$INFO[Window(weather).Property(Hourly.$PARAM[item].Time)]$INFO[Window(weather).Property(Hourly.$PARAM[item].LongDate), ]</label>
				<label2>$INFO[Window(weather).Property(Hourly.$PARAM[item].Outlook)][CR]$INFO[Window(weather).Property(Hourly.$PARAM[item].Temperature)]</label2>
				<icon>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Daily.$PARAM[item].FanartCode)]$INFO[Skin.String(WeatherIcons.ext)]</icon>
				<property name="label3">$INFO[Window.Property(Hourly.$PARAM[item].Precipitation),$LOCALIZE[1448] ][CR]$INFO[Window.Property(Hourly.$PARAM[item].WindSpeed)]$INFO[Window.Property(Hourly.$PARAM[item].WindDirection),  ]$INFO[Window.Property(Hourly.$PARAM[item].WindDegree),  ,]$INFO[Window.Property(Hourly.$PARAM[item].Humidity),[CR]$LOCALIZE[406] ]</property>
				<visible>!String.IsEmpty(Window(weather).Property(Hourly.$PARAM[item].Time))</visible>
			</item>
		</definition>
	</include>
	<include name="Weather36HourItem">
		<param name="item"/>
		<definition>
			<item>
				<label>$INFO[Window.Property(36Hour.$PARAM[item].Heading)]</label>
				<label2>$INFO[Window.Property(36Hour.$PARAM[item].Outlook)]$INFO[Window.Property(36Hour.$PARAM[item].TemperatureHeading),[CR], ]$INFO[Window.Property(36Hour.$PARAM[item].Temperature)]$INFO[Window.Property(36Hour.$PARAM[item].FeelsLike),[CR]$LOCALIZE[402] ]$INFO[Window.Property(36Hour.$PARAM[item].Precipitation),[CR]$LOCALIZE[1448] ][CR]$INFO[Window.Property(36Hour.1.WindSpeed)]$INFO[Window.Property(36Hour.$PARAM[item].WindDirection),  ]$INFO[Window.Property(36Hour.$PARAM[item].WindDegree),  ,]$INFO[Window.Property(36Hour.$PARAM[item].Humidity),[CR]$LOCALIZE[406] ]</label2>
				<icon>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(36Hour.$PARAM[item].FanartCode)]$INFO[Skin.String(WeatherIcons.ext)]</icon>
				<visible>!String.IsEmpty(Window(weather).Property(36Hour.$PARAM[item].Heading))</visible>
			</item>
		</definition>
	</include>
	<include name="WeatherWeekendItem">
		<param name="item"/>
		<definition>
			<item>
				<label>$INFO[Window.Property(Weekend.$PARAM[item].LongDay)] $INFO[Window.Property(Weekend.$PARAM[item].LongDate)]</label>
				<label2>[COLOR $VAR[PanelHighlightColorVar]]$INFO[Window.Property(Weekend.1.HighTemperature)][/COLOR]$INFO[Window.Property(Weekend.1.LowTemperature),  ]$INFO[Window.Property(Weekend.1.Outlook),[CR]]$INFO[Window.Property(Weekend.$PARAM[item].Precipitation),[CR]$LOCALIZE[1448] ][CR]$INFO[Window.Property(Weekend.1.WindSpeed)]$INFO[Window.Property(Weekend.$PARAM[item].WindDirection),  ]$INFO[Window.Property(Weekend.$PARAM[item].WindDegree),  ,]$INFO[Window.Property(Weekend.$PARAM[item].Humidity),[CR]$LOCALIZE[406] ]</label2>
				<icon>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Weekend.$PARAM[item].FanartCode)]$INFO[Skin.String(WeatherIcons.ext)]</icon>
				<visible>!String.IsEmpty(Window(weather).Property(36Hour.$PARAM[item].Heading))</visible>
			</item>
		</definition>
	</include>
	<include name="WeatherMapItem">
		<param name="item"/>
		<param name="visible">false</param>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<include>AnimationVisibleFade</include>
				<left>475</left>
				<top>150</top>
				<width>1295</width>
				<height>780</height>
				<control type="image">
					<aspectratio>scale</aspectratio>
					<texture>$INFO[Window(weather).Property(Map.$PARAM[item].Area)]</texture>
				</control>
				<control type="image">
					<aspectratio>scale</aspectratio>
					<texture colordiffuse="55FFFFFF">$INFO[Window(weather).Property(Map.$PARAM[item].Layer)]</texture>
				</control>
				<control type="image">
					<right>20</right>
					<bottom>20</bottom>
					<width>356</width>
					<height>100</height>
					<aspectratio align="right" aligny="bottom">keep</aspectratio>
					<texture>$INFO[Window(weather).Property(Map.$PARAM[item].Legend)]</texture>
				</control>
			</control>
		</definition>
	</include>
	<!-- Search -->
	<include name="Custom1112PortraitSearchContainer">
		<param name="id"/>
		<param name="case">false</param>
		<param name="content"/>
		<definition>
			<control type="list" id="$PARAM[id]">
				<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
				<top>180</top>
				<left>30</left>
				<right>30</right>
				<height>575</height>
				<onleft>9050</onleft>
				<orientation>horizontal</orientation>
				<include>ContainerScrollTime</include>
				<itemlayout height="339" width="232.5">
					<control type="group">
						<visible>!Skin.HasSetting(View540VideoCase)</visible>
						<include content="ViewArtwork">
							<param name="texturefadetime">0</param>
							<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
							<param name="diffuse">diffuse/rounded5-243x364.png</param>
						</include>
					</control>
					<control type="group">
						<visible>Skin.HasSetting(View540VideoCase)</visible>
						<include content="ViewArtworkVideoCase">
							<param name="logoheight">27</param>
							<param name="texturefadetime">0</param>
							<param name="bordersize">16,35,16,18</param>
							<param name="watchedstatustop">39</param>
							<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="339" width="232.5">
					<control type="group">
						<control type="image">
							<texture colordiffuse="$VAR[PanelHighlightColorVar]" border="10">buttons/thumb-select-focus.png</texture>
						</control>
						<control type="group">
							<visible>!Skin.HasSetting(View540VideoCase)</visible>
							<include content="ViewArtwork">
								<param name="texturefadetime">0</param>
								<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
								<param name="diffuse">diffuse/rounded5-243x364.png</param>
							</include>
						</control>
						<control type="group">
							<visible>Skin.HasSetting(View540VideoCase)</visible>
							<include content="ViewArtworkVideoCase">
								<param name="logoheight">27</param>
								<param name="texturefadetime">0</param>
								<param name="bordersize">16,36,16,18</param>
								<param name="watchedstatustop">39</param>
								<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
							</include>
						</control>
					</control>
				</focusedlayout>
				<content>$PARAM[content]</content>
				<content>$PARAM[content2]</content>
			</control>
		</definition>
	</include>
	<include name="Custom1112SquareSearchContainer">
		<param name="id"/>
		<param name="case">false</param>
		<param name="content"/>
		<definition>
			<control type="panel" id="$PARAM[id]">
				<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
				<top>180</top>
				<left>30</left>
				<right>30</right>
				<height>545</height>
				<onleft>9050</onleft>
				<orientation>horizontal</orientation>
				<include>ContainerScrollTime</include>
				<itemlayout height="310" width="310">
					<control type="group">
						<visible>!Skin.HasSetting(View540VideoCase)</visible>
						<include content="ViewArtwork">
							<param name="texturefadetime">0</param>
							<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
							<param name="diffuse">diffuse/rounded5-243x364.png</param>
						</include>
					</control>
					<control type="group">
						<visible>Skin.HasSetting(View540VideoCase)</visible>
						<include content="ViewArtworkVideoCase">
							<param name="logoheight">27</param>
							<param name="texturefadetime">0</param>
							<param name="bordersize">16,35,16,18</param>
							<param name="watchedstatustop">39</param>
							<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="310" width="310">
					<control type="group">
						<control type="image">
							<texture colordiffuse="$VAR[PanelHighlightColorVar]" border="10">buttons/thumb-select-focus.png</texture>
						</control>
						<control type="group">
							<visible>!Skin.HasSetting(View540VideoCase)</visible>
							<include content="ViewArtwork">
								<param name="texturefadetime">0</param>
								<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
								<param name="diffuse">diffuse/rounded5-243x364.png</param>
							</include>
						</control>
						<control type="group">
							<visible>Skin.HasSetting(View540VideoCase)</visible>
							<include content="ViewArtworkVideoCase">
								<param name="logoheight">27</param>
								<param name="texturefadetime">0</param>
								<param name="bordersize">16,36,16,18</param>
								<param name="watchedstatustop">39</param>
								<param name="watchedstatusvisible">!Skin.HasSetting(View540DisableWatchedStatus)</param>
							</include>
						</control>
					</control>
				</focusedlayout>
				<content>$PARAM[content]</content>
			</control>
		</definition>
	</include>
	<include name="Custom1112SearchInfoContainer">
		<param name="id"/>
		<param name="label"/>
		<param name="content"/>
		<definition>
			<control type="grouplist" id="$PARAM[id]0">
				<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
				<left>40</left>
				<width>910</width>
				<height>180</height>
				<itemgap>10</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label" id="$PARAM[id]1">
					<height>32</height>
					<font>Font30_Bold</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$INFO[Container($PARAM[id]).NumItems,$PARAM[label] (,)]</label>
				</control>
				<control type="image" id="$PARAM[id]2">
					<width>388</width>
					<height>4</height>
					<aspectratio>scale</aspectratio>
					<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/separator.png</texture>
				</control>
				<control type="label" id="$PARAM[id]3">
					<visible>!String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,episode)</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[Container($PARAM[id]).ListItem.Label]</label>
				</control>
				<control type="label" id="$PARAM[id]4">
					<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,episode)</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[Container($PARAM[id]).ListItem.Season,,x]$INFO[Container($PARAM[id]).ListItem.Episode,,. ]$INFO[Container($PARAM[id]).ListItem.Title]</label>
				</control>
				<control type="label" id="$PARAM[id]5">
					<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,movie) + !String.IsEmpty(Container($PARAM[id]).ListItem.Tagline)</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$INFO[Container($PARAM[id]).ListItem.Tagline]</label>
				</control>
				<control type="label" id="$PARAM[id]6">
					<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,tvshow) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,artist) | [String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,movie) + String.IsEmpty(Container($PARAM[id]).ListItem.Tagline)]</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$INFO[Container($PARAM[id]).ListItem.Genre]</label>
				</control>
				<control type="label" id="$PARAM[id]7">
					<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,episode)</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$INFO[Container($PARAM[id]).ListItem.TVShowTitle]</label>
				</control>
				<control type="label" id="$PARAM[id]9">
					<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,album) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,musicvideo) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,song)</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$INFO[Container($PARAM[id]).ListItem.Artist]</label>
				</control>
				<control type="grouplist">
					<height>37</height>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<control type="image">
						<visible>String.IsEmpty(Container($PARAM[id]).ListItem.AddonName)</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]calendar.png</texture>
					</control>
					<control type="label" id="5301">
						<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,tvshow) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,episode)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.Date, ,  ]</label>
					</control>
					<control type="label" id="5301">
						<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,movie) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,album) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,song) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,musicvideo)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.Year, ,  ]</label>
					</control>
					<control type="label" id="5301">
						<visible>String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,artist)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.Property(Artist_YearsActive), ,  ]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Duration)</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]timer.png</texture>
					</control>
					<control type="label" id="5302">
						<visible>[String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,movie) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,episode)] + !String.IsEmpty(Container($PARAM[id]).ListItem.Duration)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.Duration(hh), ,h]$INFO[Container($PARAM[id]).ListItem.Duration(mm),,m  ]</label>
					</control>
					<control type="label" id="5302">
						<visible>[String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,musicvideo) | String.IsEqual(Container($PARAM[id]).ListItem.DBTYPE,song)] + !String.IsEmpty(Container($PARAM[id]).ListItem.Duration)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.Duration(mm), ,m]$INFO[Container($PARAM[id]).ListItem.Duration(ss),,s  ]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Rating) | !String.IsEmpty(Container($PARAM[id]).ListItem.UserRating)</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]star.png</texture>
					</control>
					<control type="label" id="5303">
						<visible>!String.IsEmpty(Container($PARAM[id]).ListItem.UserRating)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.UserRating, ,.0  ]</label>
					</control>
					<control type="label" id="5303">
						<visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Rating) + String.IsEmpty(Container($PARAM[id]).ListItem.UserRating)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.Rating, ,  ]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Top250)</visible>
						<top>3</top>
						<width>50</width>
						<height>35</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]imdb.png</texture>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Top250)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container($PARAM[id]).ListItem.Top250, #,]</label>
					</control>
				</control>
			</control>
		</definition>
	</include>
</includes>