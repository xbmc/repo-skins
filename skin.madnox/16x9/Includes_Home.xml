<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="InfoTimeBarContent">
		<param name="top">0</param>
		<param name="width">740</param>
		<definition>
			<control type="group">
				<top>$PARAM[top]</top>
				<control type="label">
					<visible>![Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))] + !String.IsEmpty(Container(9000).ListItem.Property(InfoLine)) + !Skin.HasSetting(HideInfoLine)</visible>
					<left>5</left>
					<width>$PARAM[width]</width>
					<height>38</height>
					<font>Font30_Reg</font>
					<label>$VAR[InfoLineVar]</label>
					<include>AnimationVisibleFade</include>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="grouplist">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))</visible>
					<include>AnimationVisibleFade</include>
					<left>5</left>
					<width>$PARAM[width]</width>
					<height>40</height>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<itemgap>10</itemgap>
					<include content="BreadcrumbsIcon">
						<param name="icon">$VAR[NowPlayingInfoBarStatusVar]</param>
					</include>
					<control type="label">
						<label>$INFO[Player.Time]</label>
						<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
						<include>BreadcrumbsLabel</include>
					</control>
					<control type="fadelabel">
						<label>$INFO[Player.Title]</label>
						<label>$INFO[MusicPlayer.Artist]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasAudio + !String.IsEmpty(Musicplayer.Artist)</visible>
					</control>
					<control type="label">
						<label>$INFO[Player.Title]</label>
						<scroll>true</scroll>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasAudio + String.IsEmpty(Musicplayer.Artist)</visible>
					</control>
					<control type="fadelabel">
						<label>$INFO[Videoplayer.Season,S]$INFO[Videoplayer.Episode,E, ]$INFO[Videoplayer.Title]</label>
						<label>$INFO[Videoplayer.TVShowTitle]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + !String.IsEmpty(Videoplayer.TVShowTitle)</visible>
					</control>
					<control type="fadelabel">
						<label>$INFO[Videoplayer.ChannelName]</label>
						<label>$INFO[Videoplayer.Title]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.ChannelName)</visible>
					</control>
					<control type="fadelabel">
						<label>$INFO[Videoplayer.Title]</label>
						<label>$INFO[VideoPlayer.Artist]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + !String.IsEmpty(Videoplayer.Artist)</visible>
					</control>
					<control type="label">
						<label>$INFO[Videoplayer.Title]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + String.IsEmpty(Videoplayer.TVShowTitle) + String.IsEmpty(VideoPlayer.ChannelName) + String.IsEmpty(Videoplayer.Artist)</visible>
					</control>
				</control>
				<control type="grouplist">
					<include>AnimationVisibleFade</include>
					<right>5</right>
					<width>$PARAM[width]</width>
					<orientation>horizontal</orientation>
					<align>right</align>
					<usecontrolcoords>true</usecontrolcoords>
					<itemgap>0</itemgap>
					<control type="multiimage">
						<left>20</left>
						<width>40</width>
						<height>40</height>
						<imagepath>$INFO[Skin.String(WeatherIcons.path)]$INFO[Weather.FanartCode]$INFO[Skin.String(WeatherIcons.ext)]</imagepath>
						<include>WeatherIconAnimation</include>
						<visible>!String.IsEmpty(Window(Weather).Property(Current.Temperature))</visible>
					</control>
					<control type="label">
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Window(weather).Property(Current.Temperature), ]$INFO[System.TemperatureUnits]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
						<visible>!String.IsEmpty(Window(Weather).Property(Current.Temperature))</visible>
					</control>
					<control type="label">
						<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
						<label>$INFO[System.Date,  ]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
					</control>
					<control type="label">
						<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
						<label>$INFO[System.Time,  ]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="InfoTimeBar">
		<control type="group">
			<top>760</top>
			<visible>!Skin.HasSetting(InfoBarTop)</visible>
			<include>AnimationVisibleFade</include>
			<include>AnimationSlideBottomWindow</include>
			<control type="group">
				<visible>String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<visible>[Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)] | !String.IsEmpty(Container(9000).ListItem.Property(InfoLine)) + !Skin.HasSetting(HideInfoLine)</visible>
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture flipx="true" border="1,1,70,1" colordiffuse="$VAR[TopbarTextureColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<control type="image">
					<right>0</right>
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture border="70,1,1,1" colordiffuse="$VAR[TopbarTextureColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="top">47</param>
					<param name="width">740</param>
					<param name="info">Player.ProgressCache</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + !VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="top">47</param>
					<param name="width">740</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="top">47</param>
					<param name="width">740</param>
					<param name="info">PVR.EpgEventProgress</param>
				</include>
				<include content="InfoTimeBarContent">
					<param name="top">47</param>
				</include>
			</control>
			<control type="group">
				<visible>Skin.String(MainMenuSystemBar.texture,wide)</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture flipy="true" colordiffuse="$VAR[TopbarTextureColorVar]" border="1">panels/mainmenu/wide-bar.png</texture>
				</control>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="top">47</param>
					<param name="info">Player.ProgressCache</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + !VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="top">47</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="top">47</param>
					<param name="info">PVR.EpgEventProgress</param>
				</include>
				<include content="InfoTimeBarContent">
					<param name="top">47</param>
					<param name="width">900</param>
				</include>
			</control>
			<control type="group">
				<visible>Skin.String(MainMenuSystemBar.texture,shadow)</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture flipy="true" colordiffuse="$VAR[TopbarShadowTextureColorVar]" border="1">panels/mainmenu/shadow-bar.png</texture>
				</control>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="height">87</param>
					<param name="flipy">true</param>
					<param name="info">Player.ProgressCache</param>
					<param name="texturebg">panels/mainmenu/shadow-bar-empty.png</param>
					<param name="midtexture">panels/mainmenu/shadow-bar20.png</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + !VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="height">87</param>
					<param name="flipy">true</param>
					<param name="texturebg">panels/mainmenu/shadow-bar-empty.png</param>
					<param name="midtexture">panels/mainmenu/shadow-bar20.png</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="height">87</param>
					<param name="flipy">true</param>
					<param name="info">PVR.EpgEventProgress</param>
					<param name="texturebg">panels/mainmenu/shadow-bar-empty.png</param>
					<param name="midtexture">panels/mainmenu/shadow-bar20.png</param>
				</include>
				<include content="InfoTimeBarContent">
					<param name="top">47</param>
					<param name="width">900</param>
				</include>
			</control>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(InfoBarTop)</visible>
			<include content="AnimationSlideTopWindow">
				<param name="slide">88</param>
			</include>
			<include>AnimationVisibleFade</include>
			<control type="group">
				<visible>String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<visible>[Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)] | !String.IsEmpty(Container(9000).ListItem.Property(InfoLine)) + !Skin.HasSetting(HideInfoLine)</visible>
					<width>810</width>
					<height>88</height>
					<texture flipx="true" flipy="true" border="1,1,70,1" colordiffuse="$VAR[TopbarTextureColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<control type="image">
					<right>0</right>
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture border="70,1,1,1" flipy="true" colordiffuse="$VAR[TopbarTextureColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="width">740</param>
					<param name="info">Player.ProgressCache</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + !VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="width">740</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="width">740</param>
					<param name="info">PVR.EpgEventProgress</param>
				</include>
				<include>InfoTimeBarContent</include>
			</control>
			<control type="group">
				<visible>Skin.String(MainMenuSystemBar.texture,wide)</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture colordiffuse="$VAR[TopbarTextureColorVar]" border="1">panels/mainmenu/wide-bar.png</texture>
				</control>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="info">Player.ProgressCache</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + !VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="info">PVR.EpgEventProgress</param>
				</include>
				<include content="InfoTimeBarContent">
					<param name="width">900</param>
				</include>
			</control>
			<control type="group">
				<visible>Skin.String(MainMenuSystemBar.texture,shadow)</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture colordiffuse="$VAR[TopbarShadowTextureColorVar]" border="1">panels/mainmenu/shadow-bar.png</texture>
				</control>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="height">87</param>
					<param name="info">Player.ProgressCache</param>
					<param name="texturebg">panels/mainmenu/shadow-bar-empty.png</param>
					<param name="midtexture">panels/mainmenu/shadow-bar20.png</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">Player.HasMedia + !VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="height">87</param>
					<param name="texturebg">panels/mainmenu/shadow-bar-empty.png</param>
					<param name="midtexture">panels/mainmenu/shadow-bar20.png</param>
				</include>
				<include content="TopBarNowPlayingProgress">
					<param name="visible">VideoPlayer.HasEpg + Skin.HasSetting(NowplayingSystemBar)</param>
					<param name="height">87</param>
					<param name="info">PVR.EpgEventProgress</param>
					<param name="texturebg">panels/mainmenu/shadow-bar-empty.png</param>
					<param name="midtexture">panels/mainmenu/shadow-bar20.png</param>
				</include>
				<include content="InfoTimeBarContent">
					<param name="width">900</param>
				</include>
			</control>
		</control>
	</include>
	<include name="RSSShortcuts">
		<control type="group">
			<top>1040</top>
			<include content="AnimationSlideBottomWindow">
				<param name="slide">88</param>
			</include>
			<control type="group">
				<visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
				<control type="image">
					<visible>Skin.String(MainMenuRSSBar.texture,wide)</visible>
					<top>-48</top>
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture colordiffuse="$VAR[TopbarTextureColorVar]" flipy="true" border="1">panels/mainmenu/wide-bar.png</texture>
				</control>
				<control type="image">
					<visible>String.IsEmpty(Skin.String(MainMenuRSSBar.texture))</visible>
					<top>-48</top>
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture colordiffuse="$VAR[TopbarShadowTextureColorVar]" flipy="true" border="1">panels/mainmenu/shadow-bar.png</texture>
				</control>
				<control type="rss">
					<top>0</top>
					<width>1920</width>
					<height>38</height>
					<font>Font28_Reg</font>
					<urlset>1</urlset>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<headlinecolor>$VAR[PanelSubTextColorVar]</headlinecolor>
					<titlecolor>$VAR[PanelHighlightColorVar]</titlecolor>
				</control>
			</control>
			<control type="image">
				<animation effect="slide" start="0" end="0,140" time="200" condition="!ControlGroup(9003).HasFocus">Conditional</animation>
				<visible>!Skin.HasSetting(ShortCutDisablePower) | !Skin.HasSetting(ShortCutDisableSearch) | !Skin.HasSetting(ShortCutDisableFav) | !Skin.HasSetting(ShortCutDisableUpdate) | !Skin.HasSetting(ShortCutDisableDisc) | !Skin.HasSetting(ShortCutDisableEject)</visible>
				<bottom>0</bottom>
				<width>1920</width>
				<height>140</height>
				<texture>panels/background-gradient.png</texture>
			</control>
			<control type="grouplist" id="9003">
				<animation effect="slide" start="0" end="0,79" time="200" condition="!ControlGroup(9003).HasFocus">Conditional</animation>
				<visible>!Skin.HasSetting(ShortCutDisablePower) | !Skin.HasSetting(ShortCutDisableSearch) | !Skin.HasSetting(ShortCutDisableFav) | !Skin.HasSetting(ShortCutDisableUpdate) | !Skin.HasSetting(ShortCutDisableDisc) | !Skin.HasSetting(ShortCutDisableEject)</visible>
				<left>5</left>
				<bottom>9</bottom>
				<width>1920</width>
				<height>71</height>
				<onup>9001</onup>
				<ondown>9050</ondown>
				<align>center</align>
				<orientation>horizontal</orientation>
				<control type="button" id="20">
					<visible>!Skin.HasSetting(ShortCutDisablePower)</visible>
					<label></label>
					<onclick>ActivateWindow(ShutdownMenu)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="21">
					<visible>Skin.HasSetting(ShortCutEnableVideos)</visible>
					<label></label>
					<onclick>ActivateWindow(videos,root)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="23">
					<visible>!Skin.HasSetting(ShortCutDisableSearch)</visible>
					<label></label>
					<onclick>Skin.SetString(SearchTerm)</onclick>
					<onclick>ActivateWindow(1112)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="24">
					<visible>!Skin.HasSetting(ShortCutDisableFav)</visible>
					<label></label>
					<onclick>ActivateWindow(favourites)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="25">
					<visible>!Skin.HasSetting(ShortCutDisableUpdate)</visible>
					<label></label>
					<onclick>UpdateLibrary(video)</onclick>
					<onclick>UpdateLibrary(music)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="26">
					<visible>Skin.HasSetting(ShortCutEnableDisc) + System.HasMediadvd</visible>
					<label></label>
					<onclick>PlayDVD</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="27">
					<visible>Skin.HasSetting(ShortCutEnableDisc) + !System.HasMediadvd</visible>
					<label></label>
					<onclick>EjectTray()</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="28">
					<visible>Skin.HasSetting(ShortCutEnableEject)</visible>
					<description>Search</description>
					<label></label>
					<onclick>EjectTray()</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="22">
					<visible>Skin.HasSetting(ShortCutEnableSystem)</visible>
					<label></label>
					<onclick>ActivateWindow(settings)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
			</control>
		</control>
	</include>
	<include name="RSSShortcutsIcon">
		<width>70</width>
		<height>70</height>
		<align>center</align>
		<font>Font40_Icon</font>
		<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
		<focusedcolor>$VAR[PanelTextColorVar]</focusedcolor>
		<texturefocus border="20" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/button.png</texturefocus>
		<texturenofocus border="20" colordiffuse="$VAR[PanelSubTextColorVar]">buttons/button.png</texturenofocus>
	</include>
	<include name="MainMenu">
		<param name="listtype">wraplist</param>
		<definition>
			<control type="group">
				<width>1920</width>
				<top>848</top>
				<include>AnimationSlideBottomWindow</include>
				<!-- Sub menu -->
				<control type="group">
					<top>100</top>
					<visible>!Skin.HasSetting(SubmenuHide)</visible>
					<control type="image">
						<visible>String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
						<centerleft>50%</centerleft>
						<width>1808</width>
						<height>88</height>
						<include>AnimationVisibleFade</include>
						<texture border="70,0,70,0" colordiffuse="$VAR[TopbarTextureColorVar]">panels/mainmenu/default-submenubar.png</texture>
					</control>
					<control type="image">
						<visible>Skin.String(MainMenuSubmenuBar.texture,wide)</visible>
						<width>1920</width>
						<height>88</height>
						<include>AnimationVisibleFade</include>
						<texture colordiffuse="$VAR[TopbarTextureColorVar]" border="1,0,1,0">panels/mainmenu/wide-bar.png</texture>
					</control>
					<control type="image">
						<visible>Skin.String(MainMenuSubmenuBar.texture,shadow)</visible>
						<width>1920</width>
						<height>88</height>
						<include>AnimationVisibleFade</include>
						<texture colordiffuse="$VAR[TopbarShadowTextureColorVar]" border="1,0,1,0">panels/mainmenu/shadow-bar.png</texture>
					</control>
				</control>
				<control type="group">
					<top>100</top>
					<visible>Skin.HasSetting(SubmenuHide)</visible>
					<control type="image">
						<visible>String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
						<animation effect="zoom" start="0,0,1830,0" end="0,0,1830,88" time="200" tween="quadratic" easing="out" condition="ControlGroup(9002).HasFocus">Conditional</animation>
						<centerleft>50%</centerleft>
						<width>1808</width>
						<height>1</height>
						<include>AnimationVisibleFade</include>
						<texture border="70,0,70,0" colordiffuse="$VAR[TopbarTextureColorVar]">panels/mainmenu/default-submenubar.png</texture>
					</control>
					<control type="image">
						<visible>Skin.String(MainMenuSubmenuBar.texture,wide)</visible>
						<animation effect="zoom" start="0,0,1920,0" end="0,0,1920,88" time="200" tween="quadratic" easing="out" condition="ControlGroup(9002).HasFocus">Conditional</animation>
						<width>1920</width>
						<height>1</height>
						<include>AnimationVisibleFade</include>
						<texture colordiffuse="$VAR[TopbarTextureColorVar]" border="1,0,1,0">panels/mainmenu/wide-bar.png</texture>
					</control>
					<control type="image">
						<visible>Skin.String(MainMenuSubmenuBar.texture,shadow)</visible>
						<animation effect="zoom" start="0,0,1920,0" end="0,0,1920,88" time="200" tween="quadratic" easing="out" condition="ControlGroup(9002).HasFocus">Conditional</animation>
						<width>1920</width>
						<height>1</height>
						<include>AnimationVisibleFade</include>
						<texture colordiffuse="$VAR[TopbarShadowTextureColorVar]" border="1,0,1,0">panels/mainmenu/shadow-bar.png</texture>
					</control>
				</control>
				<control type="group" id="9002">
					<top>100</top>
					<animation type="Conditional" condition="Skin.HasSetting(SubmenuHide) + ControlGroup(9002).HasFocus" reversible="false">
						<effect type="fade" start="0" end="100" time="200" tween="quadratic" easing="out"/>
						<effect type="slide" start="0,-40" end="0" time="200" tween="quadratic" easing="out"/>
					</animation>
					<animation type="Conditional" condition="Skin.HasSetting(SubmenuHide) + !ControlGroup(9002).HasFocus" reversible="false">
						<effect type="fade" start="100" end="0" time="200" tween="quadratic" easing="out"/>
						<effect type="slide" start="0" end="0,-40" time="450" tween="quadratic" easing="out"/>
					</animation>
					<control type="fixedlist" id="9001">
						<centerleft>50%</centerleft>
						<width>1670</width>
						<height>80</height>
						<onleft>9010</onleft>
						<onright>9010</onright>
						<onup>9000</onup>
						<ondown>9003</ondown>
						<orientation>horizontal</orientation>
						<focusposition>2</focusposition>
						<movement>2</movement>
						<scrolltime tween="cubic" easing="inout">480</scrolltime>
						<itemlayout width="334" height="41">
							<control type="label">
								<align>center</align>
								<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
								<font>Font30_Caps</font>
								<textoffsetx>20</textoffsetx>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</itemlayout>
						<focusedlayout width="334" height="41">
							<control type="group">
								<visible>Control.HasFocus(9001)</visible>
								<control type="image">
									<texture border="1" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
									<visible>!Skin.String(MainMenuSubmenuBar.texture,shadow)</visible>
								</control>
								<control type="image">
									<height>70</height>
									<texture border="1" colordiffuse="$VAR[PanelHighlightColorVar]">panels/mainmenu/shadow-bar-focus.png</texture>
									<visible>Skin.String(MainMenuSubmenuBar.texture,shadow)</visible>
								</control>
								<control type="label">
									<align>center</align>
									<textcolor>$VAR[PanelTextColorVar]</textcolor>
									<font>Font30_Caps</font>
									<textoffsetx>20</textoffsetx>
									<label>$INFO[ListItem.Label]</label>
								</control>
							</control>
							<control type="label">
								<align>center</align>
								<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
								<font>Font30_Caps</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>!Control.HasFocus(9001)</visible>
							</control>
						</focusedlayout>
						<content>
							<include>skinshortcuts-submenu</include>
						</content>
					</control>
				</control>
				<!-- Main menu -->
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[PanelShadowColorVar]">panels/mainmenu/shadow.png</texture>
				</control>
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuStyleColorVar]" fallback="panels/mainmenu/default.png">$INFO[Skin.String(MainMenuStyle.texture)]</texture>
				</control>
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuTextureColorVar]">$INFO[Skin.String(MainMenuTexture.texture)]</texture>
				</control>
				<control type="$PARAM[listtype]" id="9000">
					<height>100</height>
					<width>3200</width>
					<onleft>9000</onleft>
					<onright>9000</onright>
					<include>skinshortcuts-template-widgetOnUpMainMenu</include>
					<onup condition="String.IsEmpty(Container(9000).ListItem.Property(widget.1))">9050</onup>
					<ondown condition="String.IsEqual(Container(9000).ListItem.Property(hasSubmenu),True)">SetFocus(9001,2)</ondown>
					<ondown condition="String.IsEqual(Container(9000).ListItem.Property(hasSubmenu),False) + Control.IsVisible(9003)">9003</ondown>
					<ondown condition="String.IsEqual(Container(9000).ListItem.Property(hasSubmenu),False) + !Control.IsVisible(9003)">9050</ondown>
					<orientation>horizontal</orientation>
					<focusposition>3</focusposition>
					<include>ContainerScrollTime</include>
					<animation effect="slide" end="-720,0" condition="!Skin.String(MainMenuLayout)">Conditional</animation>
					<animation effect="slide" end="-1280,0" condition="Skin.String(MainMenuLayout,wide)">Conditional</animation>
					<animation effect="slide" end="-384,0" condition="Skin.String(MainMenuLayout,iconswide) | Skin.String(MainMenuLayout,bigiconswide)">Conditional</animation>
					<itemlayout width="480" height="95" condition="!Skin.String(MainMenuLayout)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="480" height="95" condition="String.IsEmpty(Skin.String(MainMenuLayout))">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<animation effect="fade" start="100" end="30" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="640" height="95" condition="Skin.String(MainMenuLayout,wide)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="640" height="95" condition="Skin.String(MainMenuLayout,wide)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<animation effect="fade" start="100" end="30" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="274" height="100" condition="Skin.String(MainMenuLayout,icons)">
						<control type="image">
							<top>5</top>
							<height>60</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="4dffffff">$INFO[ListItem.Icon]</texture>
						</control>
						<control type="label">
							<top>67</top>
							<height>30</height>
							<align>center</align>
							<font>Font_MainMenu_Icons</font>
							<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="274" height="100" condition="Skin.String(MainMenuLayout,icons)">
						<control type="group">
							<animation effect="fade" start="100" end="30" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
							<control type="image">
								<top>5</top>
								<height>60</height>
								<aspectratio align="center" aligny="center">keep</aspectratio>
								<texture>$INFO[ListItem.Icon]</texture>
							</control>
							<control type="label">
								<top>67</top>
								<height>30</height>
								<align>center</align>
								<font>Font_MainMenu_Icons</font>
								<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</control>
					</focusedlayout>
					<itemlayout width="384" height="100" condition="Skin.String(MainMenuLayout,iconswide)">
						<control type="image">
							<top>5</top>
							<height>60</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="4dffffff">$INFO[ListItem.Icon]</texture>
						</control>
						<control type="label">
							<top>67</top>
							<height>30</height>
							<align>center</align>
							<font>Font_MainMenu_Icons</font>
							<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="384" height="100" condition="Skin.String(MainMenuLayout,iconswide)">
						<control type="group">
							<animation effect="fade" start="100" end="30" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
							<control type="image">
								<top>5</top>
								<height>60</height>
								<aspectratio align="center" aligny="center">keep</aspectratio>
								<texture>$INFO[ListItem.Icon]</texture>
							</control>
							<control type="label">
								<top>67</top>
								<height>30</height>
								<align>center</align>
								<font>Font_MainMenu_Icons</font>
								<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</control>
					</focusedlayout>
					<itemlayout width="274" height="100" condition="Skin.String(MainMenuLayout,bigicons)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="4dffffff">$INFO[ListItem.Icon]</texture>
						</control>
					</itemlayout>
					<focusedlayout width="274" height="100" condition="Skin.String(MainMenuLayout,bigicons)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture>$INFO[ListItem.Icon]</texture>
							<animation effect="fade" start="100" end="30" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="384" height="100" condition="Skin.String(MainMenuLayout,bigiconswide)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="4dffffff">$INFO[ListItem.Icon]</texture>
						</control>
					</itemlayout>
					<focusedlayout width="384" height="100" condition="Skin.String(MainMenuLayout,bigiconswide)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture>$INFO[ListItem.Icon]</texture>
							<animation effect="fade" start="100" end="30" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<content>
						<include>skinshortcuts-mainmenu</include>
					</content>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>1920</width>
					<height>100</height>
					<texture colordiffuse="$VAR[MainMenuGradientColorVar]">panels/mainmenu/gradient.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<!-- Widgets -->
	<include name="WidgetContainerCommon">
		<left>30</left>
		<right>30</right>
		<bottom>304</bottom>
		<onclick condition="String.IsEqual(ListItem.DBType,album)">PlayMedia($INFO[Container.ListItem.FolderPath],isdir)</onclick>
		<animation effect="slide" end="0,42" condition="Skin.HasSetting(InfoBarTop)">Conditional</animation>
		<ondown>9000</ondown>
		<preloaditems>2</preloaditems>
		<orientation>horizontal</orientation>
		<include>ContainerScrollTime</include>
	</include>
	<include name="WidgetContainer">
		<include>WidgetContainerCommon</include>
		<itemlayout width="$PARAM[containerwidth]">
			<control type="image">
				<bordersize>$PARAM[border]</bordersize>
				<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>String.IsEqual(ListItem.Icon,DefaultAddonNone.png)</visible>
				<bordersize>$PARAM[border]</bordersize>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<texture diffuse="$PARAM[diffuse]" colordiffuse="$VAR[MainMenuWidgetColorVar]">$PARAM[artwork]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEqual(ListItem.Icon,DefaultAddonNone.png)</visible>
				<bordersize>$PARAM[border]</bordersize>
				<aspectratio align="center" aligny="center" scalediffuse="false">$PARAM[artworkaspect]</aspectratio>
				<texture diffuse="$PARAM[diffuse]" colordiffuse="$VAR[MainMenuWidgetColorVar]">$PARAM[artwork]</texture>
			</control>
			<control type="image">
				<visible>$PARAM[landscapefallback] + String.IsEmpty(ListItem.Art(tvshow.landscape)) + String.IsEmpty(ListItem.Art(artist.landscape)) + String.IsEmpty(ListItem.Art(landscape))</visible>
				<bordersize>40</bordersize>
				<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
				<texture colordiffuse="$VAR[MainMenuWidgetColorVar]">$VAR[ClearLogoVar]</texture>
			</control>
			<control type="image">
				<left>0</left>
				<right>0</right>
				<bottom>0</bottom>
				<height>100</height>
				<bordersize>10</bordersize>
				<texture colordiffuse="$VAR[MainMenuWidgetColorVar]">panels/background-gradient.png</texture>
				<visible>$PARAM[labelvisible]</visible>
			</control>
			<control type="label">
				<left>10</left>
				<right>10</right>
				<bottom>10</bottom>
				<height>50</height>
				<align>center</align>
				<font>Font29_Cond</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<textoffsetx>5</textoffsetx>
				<label>$INFO[ListItem.Label]</label>
				<visible>$PARAM[labelvisible]</visible>
			</control>
			<control type="textbox">
				<visible>[$PARAM[logofallback] | $PARAM[landscapefallback]] + String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(artist.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo))</visible>
				<left>20</left>
				<right>20</right>
				<align>center</align>
				<aligny>center</aligny>
				<font>$PARAM[font1]</font>
				<shadowcolor>ff000000</shadowcolor>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="group">
				<visible>$PARAM[watchedstatus]</visible>
				<control type="image">
					<top>$PARAM[watchedstatustop]</top>
					<right>18</right>
					<width>45</width>
					<height>45</height>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[WidgetWatchedSatusIndicatorVar]</texture>
				</control>
				<control type="label">
					<visible>Skin.HasSetting(EnableWidgetEpisodeCountStatus) + Integer.IsGreater(Container.ListItem.Property(unwatchedepisodes),0)</visible>
					<top>$PARAM[watchedstatustop]</top>
					<right>18</right>
					<width>45</width>
					<height>45</height>
					<align>center</align>
					<font>Font20_Cond_Bold</font>
					<label>$INFO[Container.ListItem.Property(unwatchedepisodes)]</label>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
				</control>
			</control>
			<control type="image">
				<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
			</control>
			<control type="image">
				<visible>$PARAM[musiccase]</visible>
				<texture border="15" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/case/cd.png</texture>
			</control>
			<control type="image">
				<visible>$PARAM[videocase]</visible>
				<texture border="15" colordiffuse="$VAR[MainMenuWidgetColorVar]">$VAR[VideoCaseVar]</texture>
			</control>
			<control type="image">
				<visible>$PARAM[videocase] + $PARAM[studioiconvisible]</visible>
				<top>10</top>
				<height>$PARAM[iconstudioheight]</height>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[MainMenuWidgetColorVar]">$VAR[StudioIconsVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout width="$PARAM[containerwidth]">
			<control type="image">
				<texture colordiffuse="$VAR[PanelHighlightColorVar]" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="group">
				<animation type="Focus" reversible="false">
					<effect type="zoom" start="95" end="100" time="300" center="auto"/>
				</animation>
				<control type="image">
					<bordersize>$PARAM[border]</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>String.IsEqual(ListItem.Icon,DefaultAddonNone.png)</visible>
					<bordersize>$PARAM[border]</bordersize>
					<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
					<texture diffuse="$PARAM[diffuse]">$PARAM[artwork]</texture>
				</control>
				<control type="image">
					<visible>!String.IsEqual(ListItem.Icon,DefaultAddonNone.png)</visible>
					<bordersize>$PARAM[border]</bordersize>
					<aspectratio align="center" aligny="center" scalediffuse="false">$PARAM[artworkaspect]</aspectratio>
					<texture diffuse="$PARAM[diffuse]">$PARAM[artwork]</texture>
				</control>
				<control type="image">
					<visible>$PARAM[landscapefallback] + String.IsEmpty(ListItem.Art(tvshow.landscape)) + String.IsEmpty(ListItem.Art(artist.landscape)) + String.IsEmpty(ListItem.Art(landscape))</visible>
					<bordersize>40</bordersize>
					<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
					<texture>$VAR[ClearLogoVar]</texture>
				</control>
				<control type="image">
					<left>0</left>
					<right>0</right>
					<bottom>0</bottom>
					<height>100</height>
					<bordersize>10</bordersize>
					<texture>panels/background-gradient.png</texture>
					<visible>$PARAM[labelvisible]</visible>
				</control>
				<control type="label">
					<left>10</left>
					<right>10</right>
					<bottom>10</bottom>
					<height>50</height>
					<align>center</align>
					<font>Font29_Cond</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<textoffsetx>5</textoffsetx>
					<label>$INFO[ListItem.Label]</label>
					<visible>$PARAM[labelvisible]</visible>
				</control>
				<control type="textbox">
					<visible>[$PARAM[logofallback] | $PARAM[landscapefallback]] + String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(artist.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo))</visible>
					<left>20</left>
					<right>20</right>
					<align>center</align>
					<aligny>center</aligny>
					<font>$PARAM[font1]</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="group">
					<visible>$PARAM[watchedstatus]</visible>
					<control type="image">
						<top>$PARAM[watchedstatustop]</top>
						<right>18</right>
						<width>45</width>
						<height>45</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[WidgetWatchedSatusIndicatorVar]</texture>
					</control>
					<control type="label">
						<visible>Skin.HasSetting(EnableWidgetEpisodeCountStatus) + Integer.IsGreater(Container.ListItem.Property(unwatchedepisodes),0)</visible>
						<top>$PARAM[watchedstatustop]</top>
						<right>18</right>
						<width>45</width>
						<height>45</height>
						<align>center</align>
						<font>Font20_Cond_Bold</font>
						<label>$INFO[Container.ListItem.Property(unwatchedepisodes)]</label>
						<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					</control>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
				<control type="image">
					<visible>$PARAM[musiccase]</visible>
					<texture border="15">thumbs/case/cd.png</texture>
				</control>
				<control type="image">
					<visible>$PARAM[videocase]</visible>
					<texture border="15">$VAR[VideoCaseVar]</texture>
				</control>
				<control type="image">
					<visible>$PARAM[videocase] + $PARAM[studioiconvisible]</visible>
					<top>10</top>
					<height>$PARAM[iconstudioheight]</height>
					<aspectratio>keep</aspectratio>
					<texture>$VAR[StudioIconsVar]</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="WidgetPosterInfoContainer">
		<include>WidgetContainerCommon</include>
		<itemlayout width="$PARAM[containerwidth]">
			<control type="image">
				<bordersize>10</bordersize>
				<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="label">
				<top>10</top>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font1]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="multiimage">
				<top>$PARAM[icontop]</top>
				<bottom>$PARAM[iconbottom]</bottom>
				<imagepath colordiffuse="$VAR[MainMenuWidgetColorVar]">$INFO[ListItem.Icon]</imagepath>
				<include>WeatherIconAnimation</include>
			</control>
			<control type="label">
				<bottom>$PARAM[label2position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font2]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<bottom>$PARAM[label3position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font3]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(label3)]</label>
			</control>
			<control type="image">
				<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
			</control>
		</itemlayout>
		<focusedlayout width="$PARAM[containerwidth]">
			<control type="image">
				<texture colordiffuse="$VAR[PanelHighlightColorVar]" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="group">
				<animation type="Focus" reversible="false">
					<effect type="zoom" start="95" end="100" time="300" center="auto"/>
				</animation>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="label">
					<top>10</top>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font1]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="multiimage">
					<top>$PARAM[icontop]</top>
					<bottom>$PARAM[iconbottom]</bottom>
					<imagepath>$INFO[ListItem.Icon]</imagepath>
					<include>WeatherIconAnimation</include>
				</control>
				<control type="label">
					<bottom>$PARAM[label2position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font2]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label2]</label>
				</control>
				<control type="label">
					<bottom>$PARAM[label3position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font3]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Property(label3)]</label>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="WidgetFanartInfoContainer">
		<include>WidgetContainerCommon</include>
		<itemlayout width="$PARAM[containerwidth]">
			<control type="multiimage">
				<top>10</top>
				<bottom>10</bottom>
				<left>10</left>
				<right>10</right>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<imagepath diffuse="$PARAM[diffuse]" colordiffuse="$VAR[MainMenuWidgetColorVar]">$INFO[ListItem.Property(fanart)]</imagepath>
				<timeperimage>3600000</timeperimage>
				<fadetime>1</fadetime>
				<randomize>false</randomize>
			</control>
			<control type="image">
				<bordersize>10</bordersize>
				<texture colordiffuse="aa000000" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="label">
				<bottom>$PARAM[label1position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font1]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<bottom>$PARAM[label2position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font2]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<bottom>$PARAM[label3position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font3]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(label3)]</label>
			</control>
			<control type="image">
				<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
			</control>
		</itemlayout>
		<focusedlayout width="$PARAM[containerwidth]">
			<control type="image">
				<texture colordiffuse="$VAR[PanelHighlightColorVar]" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="group">
				<animation type="Focus" reversible="false">
					<effect type="zoom" start="95" end="100" time="300" center="auto"/>
				</animation>
				<control type="multiimage">
					<top>10</top>
					<bottom>10</bottom>
					<left>10</left>
					<right>10</right>
					<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
					<imagepath diffuse="$PARAM[diffuse]">$INFO[ListItem.Property(fanart)]</imagepath>
					<timeperimage>3600000</timeperimage>
					<fadetime>1</fadetime>
					<randomize>false</randomize>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="aa000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="label">
					<bottom>$PARAM[label1position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font1]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="label">
					<bottom>$PARAM[label2position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font2]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label2]</label>
				</control>
				<control type="label">
					<bottom>$PARAM[label3position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font3]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Property(label3)]</label>
				</control>
				<control type="image">
					<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="WidgetInfo">
		<visible>$PARAM[visible]</visible>
		<animation effect="fade" end="100" time="300">Visible</animation>
		<animation effect="fade" start="100" end="0" time="300">Hidden</animation>
		<control type="image">
			<visible>ControlGroup(90010).HasFocus | Control.HasFocus(1607)</visible>
			<include>AnimationVisibleFade</include>
			<top>-600</top>
			<width>1300</width>
			<height>1680</height>
			<texture colordiffuse="$VAR[MainMenuShadowColorVar]">panels/kodiflix-gradient.png</texture>
		</control>
		<control type="group">
			<visible>$PARAM[infovisible]</visible>
			<bottom>$PARAM[infoposition]</bottom>
			<left>40</left>
			<right>40</right>
			<animation effect="slide" end="0,42" condition="Skin.HasSetting(InfoBarTop)">Conditional</animation>
			<control type="grouplist">
				<visible>ControlGroup(90010).HasFocus + !Control.HasFocus(1607)</visible>
				<bottom>350</bottom>
				<width>910</width>
				<height>400</height>
				<align>bottom</align>
				<itemgap>10</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<include>AnimationVisibleFade</include>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$VAR[WidgetTitleVar]</label>
				</control>
				<control type="label" id="5305">
					<visible>!String.IsEmpty(Control.GetLabel(5305))</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$VAR[WidgetSubTitleVar]</label>
				</control>
				<control type="grouplist">
					<visible>!String.IsEmpty(Control.GetLabel(5301)) | !String.IsEmpty(Control.GetLabel(5302)) | !String.IsEmpty(Control.GetLabel(5303)) | !String.IsEmpty(Control.GetLabel(5304))</visible>
					<height>37</height>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5301))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]next.png</texture>
					</control>
					<control type="label" id="5301">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[Container.ListItem.Property(Next_Aired.Day), ]$INFO[Container.ListItem.Property(Air_Time), ,  ]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5302))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon1Var]</texture>
					</control>
					<control type="label" id="5302">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[WidgetInfo1Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5303))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon2Var]</texture>
					</control>
					<control type="label" id="5303">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[WidgetInfo2Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5304))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon3Var]</texture>
					</control>
					<control type="label" id="5304">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[WidgetInfo3Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
						<top>3</top>
						<width>50</width>
						<height>35</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]imdb.png</texture>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[ListItem.Top250, #,]</label>
					</control>
				</control>
				<control type="textbox" id="5306">
					<visible>Skin.HasSetting(WidgetPlot) + [!String.IsEmpty(ListItem.PlotOutline) | !String.IsEmpty(ListItem.Property(Album_Description)) | !String.IsEmpty(ListItem.Property(Artist_Description)) | !String.IsEmpty(ListItem.AddonDescription) | !String.IsEmpty(ListItem.ContributorAndRole) | !String.IsEmpty(ListItem.Plot)]</visible>
					<height>85</height>
					<scroll>true</scroll>
					<font>Font28_Reg_106</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
					<label>$VAR[ViewPlotVar]</label>
				</control>
				<control type="image">
					<top>0</top>
					<width>388</width>
					<height>4</height>
					<aspectratio>scale</aspectratio>
					<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/separator.png</texture>
				</control>
			</control>
			<control type="label">
				<bottom>312</bottom>
				<height>30</height>
				<font>Font30_Reg</font>
				<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
				<shadowcolor>black</shadowcolor>
				<label>$PARAM[label]</label>
			</control>
		</control>
	</include>
	<include name="WidgetNextButton">
		<visible>Skin.HasSetting(WidgetNextButton) + !String.IsEmpty(Container(9000).ListItem.Property(widget.2))</visible>
		<animation effect="fade" end="100" delay="480" time="240">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="0">WindowClose</animation>
		<top>30</top>
		<right>30</right>
		<label></label>
		<include>RSSShortcutsIcon</include>
	</include>
	<variable name="WidgetWatchedSatusIndicatorVar">
		<value condition="!Skin.HasSetting(DisableWidgetResumeStatus) + ListItem.IsResumable">overlays/list/OverlayResume.png</value>
		<value condition="!Skin.HasSetting(DisableWidgetWatchedStatus) + Integer.IsGreater(ListItem.PlayCount,0)">overlays/list/OverlayWatched.png</value>
		<value condition="Skin.HasSetting(EnableWidgetUnwatchedStatus) + Integer.IsEqual(ListItem.PlayCount,0)">overlays/list/OverlayUnWatched.png</value>
		<value condition="Skin.HasSetting(EnableWidgetEpisodeCountStatus) + Integer.IsGreater(ListItem.Property(unwatchedepisodes),0)">overlays/list/OverlayUnWatched.png</value>
		<value condition="Skin.HasSetting(EnableWidgetEpisodeCountStatus) + String.IsEqual(ListItem.DBTYPE,tvshow) + !Integer.IsGreater(ListItem.Property(unwatchedepisodes),0)">overlays/list/OverlayWatched.png</value>
	</variable>
	<include name="PVRWidget">
		<control type="group">
			<animation effect="slide" end="0,42" condition="Skin.HasSetting(InfoBarTop)">Conditional</animation>
			<control type="group">
				<visible>String.IsEqual(Container(9000).ListItem.Property(pvrWidget),pvr) + PVR.IsRecording</visible>
				<include>AnimationVisibleFade</include>
				<include content="PVRWidgetContent">
					<param name="label">$LOCALIZE[19158]</param>
					<param name="time">Pvr.NowRecordingDateTime</param>
					<param name="title">Pvr.NowRecordingTitle</param>
					<param name="icon">Pvr.NowRecordingChannelIcon</param>
				</include>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container(9000).ListItem.Property(pvrWidget),pvr) + PVR.HasNonRecordingTimer + !PVR.IsRecording</visible>
				<include>AnimationVisibleFade</include>
				<include content="PVRWidgetContent">
					<param name="label">$LOCALIZE[19157]</param>
					<param name="time">Pvr.NextRecordingDateTime</param>
					<param name="title">Pvr.NextRecordingTitle</param>
					<param name="icon">Pvr.NextRecordingChannelIcon</param>
				</include>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container(9000).ListItem.Property(pvrWidget),tv) + PVR.IsRecordingTV</visible>
				<include>AnimationVisibleFade</include>
				<include content="PVRWidgetContent">
					<param name="label">$LOCALIZE[19158]</param>
					<param name="time">Pvr.TVNowRecordingDateTime</param>
					<param name="title">Pvr.TVNowRecordingTitle</param>
					<param name="icon">Pvr.TVNowRecordingChannelIcon</param>
				</include>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container(9000).ListItem.Property(pvrWidget),tv) + PVR.HasNonRecordingTVTimer + !PVR.IsRecordingTV</visible>
				<include>AnimationVisibleFade</include>
				<include content="PVRWidgetContent">
					<param name="label">$LOCALIZE[19157]</param>
					<param name="time">Pvr.TVNextRecordingDateTime</param>
					<param name="title">Pvr.TVNextRecordingTitle</param>
					<param name="icon">Pvr.TVNextRecordingChannelIcon</param>
				</include>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container(9000).ListItem.Property(pvrWidget),radio) + PVR.IsRecordingRadio</visible>
				<include>AnimationVisibleFade</include>
				<include content="PVRWidgetContent">
					<param name="label">$LOCALIZE[19158]</param>
					<param name="time">Pvr.RadioNowRecordingDateTime</param>
					<param name="title">Pvr.RadioNowRecordingTitle</param>
					<param name="icon">Pvr.RadioNowRecordingChannelIcon</param>
				</include>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container(9000).ListItem.Property(pvrWidget),radio) + PVR.HasNonRecordingRadioTimer + !PVR.IsRecordingRadio</visible>
				<include>AnimationVisibleFade</include>
				<include content="PVRWidgetContent">
					<param name="label">$LOCALIZE[19157]</param>
					<param name="time">Pvr.RadioNextRecordingDateTime</param>
					<param name="title">Pvr.RadioNextRecordingTitle</param>
					<param name="icon">Pvr.RadioNextRecordingChannelIcon</param>
				</include>
			</control>
		</control>
	</include>
	<include name="PVRWidgetContent">
		<param name="label"/>
		<param name="time"/>
		<param name="title"/>
		<param name="icon"/>
		<definition>
			<top>30</top>
			<right>30</right>
			<height>134</height>
			<width>730</width>
			<control type="image">
				<texture colordiffuse="$VAR[PanelShadowColorVar]" border="20">$VAR[DialogShadowScanVar]</texture>
			</control>
			<control type="image">
				<texture flipx="true" colordiffuse="$VAR[PanelStyleColorVar]" border="20">$VAR[DialogStyleScanVar]</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>10</left>
				<right>10</right>
				<bottom>10</bottom>
				<aspectratio scalediffuse="false">center</aspectratio>
				<texture diffuse="diffuse/rounded10-710x104.png" colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
				<visible>!Skin.HasSetting(PanelSquare.texture)</visible>
			</control>
			<control type="image">
				<top>10</top>
				<left>10</left>
				<right>10</right>
				<bottom>10</bottom>
				<aspectratio scalediffuse="false">center</aspectratio>
				<texture colordiffuse="$VAR[PanelTextureColorVar]">$INFO[Skin.String(PanelTexture.texture)]</texture>
				<visible>Skin.HasSetting(PanelSquare.texture)</visible>
			</control>
			<control type="image">
				<texture colordiffuse="$VAR[PanelEmbossColorVar]" border="40">$VAR[DialogEmbossScanVar]</texture>
			</control>
			<control type="image">
				<top>20</top>
				<right>20</right>
				<width>102</width>
				<height>94</height>
				<aspectratio>keep</aspectratio>
				<texture>$INFO[$PARAM[icon]]</texture>
			</control>
			<control type="group">
				<top>15</top>
				<left>25</left>
				<control type="label">
					<description>Line 1 Label</description>
					<right>147</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$PARAM[label]</label>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
				</control>
				<control type="label">
					<description>Line 2 Label</description>
					<top>63</top>
					<right>147</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[$PARAM[title]]</label>
				</control>
				<control type="label">
					<description>Line 2 Label</description>
					<top>32</top>
					<right>147</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
					<label>$INFO[$PARAM[time]]</label>
				</control>
			</control>
		</definition>
	</include>
	<!-- Now playing -->
	<include name="HomeNowPlaying">
		<control type="image">
			<visible>!ControlGroup(90010).HasFocus</visible>
			<animation effect="slide" end="0,42" condition="Skin.HasSetting(InfoBarTop)">Conditional</animation>
			<include>AnimationVisibleFade</include>
			<bottom>0</bottom>
			<width>1920</width>
			<height>968</height>
			<texture colordiffuse="$VAR[MainMenuShadowColorVar]">panels/widget-gradient.png</texture>
		</control>
		<control type="group">
			<visible>!ControlGroup(90010).HasFocus</visible>
			<animation effect="slide" end="0,42" condition="Skin.HasSetting(InfoBarTop)">Conditional</animation>
			<top>388</top>
			<left>30</left>
			<right>30</right>
			<include>AnimationVisibleFade</include>
			<!-- Video -->
			<control type="group">
				<visible>Player.HasVideo</visible>
				<control type="group">
					<visible>VideoPlayer.Content(movies) + !Player.IsInternetStream</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMovieInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomePortraitContent">
							<param name="case">Skin.HasSetting(NowPlayingHomeVideoCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>!Skin.String(NowPlayingHomeMovieInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomePortraitContent">
							<param name="right">650</param>
							<param name="case">Skin.HasSetting(NowPlayingHomeVideoCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(episodes) + !Player.IsInternetStream</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMovieInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomePortraitContent">
							<param name="case">Skin.HasSetting(NowPlayingHomeVideoCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
						</include>
					</control>
					<control type="group">
						<visible>!Skin.String(NowPlayingHomeMovieInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomePortraitContent">
							<param name="right">650</param>
							<param name="case">Skin.HasSetting(NowPlayingHomeVideoCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(musicvideos) + !Player.IsInternetStream</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeVideoInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="case">Skin.HasSetting(NowPlayingHomeMusicCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>!Skin.String(NowPlayingHomeVideoInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="right">650</param>
							<param name="case">Skin.HasSetting(NowPlayingHomeMusicCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos)]</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeVideoInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="aspect">keep</param>
						</include>
					</control>
					<control type="group">
						<visible>!Skin.String(NowPlayingHomeVideoInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="right">650</param>
							<param name="aspect">keep</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>[VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)] + !Player.IsInternetStream</visible>
					<include>AnimationVisibleFade</include>
					<control type="grouplist">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeMovieInfo))</visible>
						<include>HomeNowPlayingVideoInfo</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMovieInfo,cast)</visible>
						<include>HomeNowPlayingVideoCast</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMovieInfo,plot)</visible>
						<include>HomeNowPlayingPortraitPlot</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMovieInfo,preview)</visible>
						<include>HomeNowPlayingVideoPreview</include>
					</control>
				</control>
				<control type="group">
					<visible>![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)]</visible>
					<include>AnimationVisibleFade</include>
					<control type="grouplist">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeVideoInfo))</visible>
						<include>HomeNowPlayingVideoInfo</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeVideoInfo,plot)</visible>
						<include>HomeNowPlayingSquarePlot</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeVideoInfo,preview)</visible>
						<include>HomeNowPlayingVideoPreview</include>
					</control>
				</control>
			</control>
			<!-- Audio -->
			<control type="group">
				<visible>Player.HasAudio</visible>
				<control type="group">
					<visible>![Pvr.IsPlayingTv | Pvr.IsPlayingRadio | Player.IsInternetStream]</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMusicInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="case">Skin.HasSetting(NowPlayingHomeMusicCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>!Skin.String(NowPlayingHomeMusicInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="right">650</param>
							<param name="case">Skin.HasSetting(NowPlayingHomeMusicCase)</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>Pvr.IsPlayingTv | Pvr.IsPlayingRadio | Player.IsInternetStream</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeAudioInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="aspect">keep</param>
							<param name="case">Skin.HasSetting(NowPlayingHomeMusicCase)</param>
						</include>
					</control>
					<control type="group">
						<visible>!Skin.String(NowPlayingHomeAudioInfo,none)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="right">650</param>
							<param name="aspect">keep</param>
							<param name="case">Skin.HasSetting(NowPlayingHomeMusicCase)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>![Pvr.IsPlayingTv | Pvr.IsPlayingRadio | Player.IsInternetStream]</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMusicInfo,next) + MusicPlayer.HasNext</visible>
						<include>NowPlayingHomeAudioNext</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMusicInfo,tracks) + MusicPlayer.HasNext</visible>
						<include>NowPlayingHomeAudioTrackList</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeMusicInfo,plot)</visible>
						<include>HomeNowPlayingSquarePlot</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeMusicInfo))</visible>
						<include>NowPlayingHomeAudioInfo</include>
					</control>
				</control>
				<control type="group">
					<visible>Pvr.IsPlayingTv | Pvr.IsPlayingRadio | Player.IsInternetStream</visible>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeAudioInfo,next) + MusicPlayer.HasNext</visible>
						<include>NowPlayingHomeAudioNext</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeAudioInfo,tracks) + MusicPlayer.HasNext</visible>
						<include>NowPlayingHomeAudioTrackList</include>
					</control>
					<control type="group">
						<visible>Skin.String(NowPlayingHomeAudioInfo,plot)</visible>
						<include>HomeNowPlayingSquarePlot</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeAudioInfo))</visible>
						<include>NowPlayingHomeAudioInfo</include>
					</control>
				</control>
			</control>
		</control>
	</include>
	<!-- Variables -->
	<variable name="MainMenuLayoutLabelVar">
		<value condition="Skin.String(MainMenuLayout,wide)">$LOCALIZE[539]</value>
		<value condition="Skin.String(MainMenuLayout,icons)">$LOCALIZE[536]</value>
		<value condition="Skin.String(MainMenuLayout,iconswide)">$LOCALIZE[31121]</value>
		<value condition="Skin.String(MainMenuLayout,bigicons)">$LOCALIZE[538]</value>
		<value condition="Skin.String(MainMenuLayout,bigiconswide)">$LOCALIZE[31122]</value>
		<value>$LOCALIZE[571]</value>
	</variable>
	<variable name="InfoLineVar">
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),movies)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20342]: [/COLOR]$INFO[Window(Home).Property(Movies.Count)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[16102]: [/COLOR]$INFO[Window(Home).Property(Movies.Watched)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[16101]: [/COLOR]$INFO[Window(Home).Property(Movies.UnWatched)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),tvshows)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20343]: [/COLOR]$INFO[Window(Home).Property(TVShows.Count)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20360]: [/COLOR]$INFO[Window(Home).Property(Episodes.Count)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[16101]: [/COLOR]$INFO[Window(Home).Property(Episodes.UnWatched)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),music)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[133]: [/COLOR]$INFO[Window(Home).Property(Music.ArtistsCount)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[132]: [/COLOR]$INFO[Window(Home).Property(Music.AlbumsCount)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[134]: [/COLOR]$INFO[Window(Home).Property(Music.SongsCount)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),musicvideos)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20389]: [/COLOR]$INFO[Window(Home).Property(MusicVideos.Count)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[16102]: [/COLOR]$INFO[Window(Home).Property(MusicVideos.Watched)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[16101]: [/COLOR]$INFO[Window(Home).Property(MusicVideos.UnWatched)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),videos)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20342]: [/COLOR]$INFO[Window(Home).Property(Movies.Count)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20343]: [/COLOR]$INFO[Window(Home).Property(TVShows.Count)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20389]: [/COLOR]$INFO[Window(Home).Property(MusicVideos.Count)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),moviestvshows)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20342]: [/COLOR]$INFO[Window(Home).Property(Movies.Count)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[20343]: [/COLOR]$INFO[Window(Home).Property(TVShows.Count)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),pvr)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[31153]: [/COLOR]$INFO[Pvr.BackendChannels,,  ][COLOR $VAR[PanelSubTextColorVar]] $LOCALIZE[19017]: [/COLOR]$INFO[Pvr.BackendRecordings]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),pvrstatus) + PVR.IsRecording">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[19043]: [/COLOR]$INFO[Pvr.NowRecordingTitle]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),pvrstatus) + PVR.HasNonRecordingTimer">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[209]: [/COLOR]$INFO[Pvr.NextRecordingTitle] [COLOR $VAR[PanelSubTextColorVar]]$INFO[Pvr.NextRecordingDateTime][/COLOR]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),pvrstatus)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[31153]: [/COLOR]$INFO[Pvr.BackendChannels,,  ][COLOR $VAR[PanelSubTextColorVar]] $LOCALIZE[19017]: [/COLOR]$INFO[Pvr.BackendRecordings]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),tvstatus) + PVR.IsRecordingTV">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[19043]: [/COLOR]$INFO[Pvr.TVNowRecordingTitle]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),tvstatus) + PVR.HasNonRecordingTVTimer">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[209]: [/COLOR]$INFO[Pvr.TVNextRecordingTitle]  [COLOR $VAR[PanelSubTextColorVar]]$INFO[Pvr.TVNextRecordingDateTime][/COLOR]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),tvstatus)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[31153]: [/COLOR]$INFO[Pvr.BackendChannels,,  ][COLOR $VAR[PanelSubTextColorVar]] $LOCALIZE[19017]: [/COLOR]$INFO[Pvr.BackendRecordings]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),radiostatus) + PVR.IsRecordingRadio">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[19043]: [/COLOR]$INFO[Pvr.RadioNowRecordingTitle]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),radiostatus) + PVR.HasNonRecordingRadioTimer">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[209]: [/COLOR]$INFO[Pvr.RadioNextRecordingTitle]  [COLOR $VAR[PanelSubTextColorVar]]$INFO[Pvr.RadioNextRecordingDateTime][/COLOR]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),radiostatus)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[31153]: [/COLOR]$INFO[Pvr.BackendChannels,,  ][COLOR $VAR[PanelSubTextColorVar]] $LOCALIZE[19017]: [/COLOR]$INFO[Pvr.BackendRecordings]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),weather)">[COLOR $VAR[PanelSubTextColorVar]]$INFO[Weather.Location][/COLOR]  $INFO[Weather.Conditions]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),disc) + System.HasMediadvd">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[427]: [/COLOR]$INFO[System.DVDLabel]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),disc) + !System.HasMediadvd">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[427]: [/COLOR]$LOCALIZE[504]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),systeminfo)">[COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[31023]: [/COLOR]$INFO[System.memory(used.percent)]  [COLOR $VAR[PanelSubTextColorVar]]$LOCALIZE[31022]: [/COLOR]$INFO[System.CPUUsage]</value>
	</variable>
	<variable name="InfoLineLabelVar">
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),movies)">$LOCALIZE[20342]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),tvshows)">$LOCALIZE[20343]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),music)">$LOCALIZE[2]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),musicvideos)">$LOCALIZE[20389]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),videos)">$LOCALIZE[3]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),moviestvshows)">$LOCALIZE[31154]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),pvr)">PVR</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),pvrstatus)">$LOCALIZE[31317]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),tvstatus)">$LOCALIZE[31318]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),radiostatus)">$LOCALIZE[31319]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),weather)">$LOCALIZE[8]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),disc)">$LOCALIZE[427]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),systeminfo)">$LOCALIZE[130]</value>
		<value>$LOCALIZE[231]</value>
	</variable>
	<variable name="PVRWidgetLabelVar">
		<value condition="String.IsEqual(Container(211).ListItem.Property(pvrWidget),pvr)">PVR</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(pvrWidget),tv)">$LOCALIZE[19020]</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(pvrWidget),radio)">$LOCALIZE[19021]</value>
		<value>$LOCALIZE[231]</value>
	</variable>
	<variable name="WidgetTitleVar">
		<value condition="!String.IsEmpty(Container.ListItem.Episode) + !String.IsEqual(Container.ListItem.Label,Container.ListItem.TVShowTitle)">$INFO[Container.ListItem.Season,,x]$INFO[Container.ListItem.Episode,,. ]$INFO[Container.ListItem.Title]</value>
		<value>$INFO[Container.ListItem.Label]</value>
	</variable>
	<variable name="WidgetSubTitleVar">
		<value condition="!String.IsEmpty(ListItem.Property(subtitle))">$INFO[ListItem.Property(subtitle)]</value>
		<value condition="!String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
		<value condition="!String.IsEmpty(ListItem.Episode) + !String.IsEqual(ListItem.Label,ListItem.TVShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="!String.IsEmpty(ListItem.Artist) + !String.IsEqual(ListItem.Label,ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value condition="!String.IsEmpty(ListItem.AlbumArtist) + !String.IsEqual(ListItem.Label,Container.ListItem.AlbumArtist)">$INFO[ListItem.Artist]</value>
		<value condition="!String.IsEmpty(ListItem.AddonSummary)">$INFO[ListItem.AddonSummary]</value>
		<value condition="String.Contains(ListItem.Path,pvr)">$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(Listitem.Property(Artist_Disambiguation))">$INFO[Listitem.Property(Artist_Disambiguation)]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="WidgetInfo1Var">
		<value condition="!String.IsEmpty(Container.ListItem.AddonCreator)">$INFO[Container.ListItem.AddonCreator, ,  ]</value>
		<value condition="String.Contains(ListItem.Path,pvr)">$INFO[ListItem.StartTime, , - ]$INFO[ListItem.EndTime,,  ]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Premiered) + String.IsEqual(ListItem.DBTYPE,episode)">$INFO[Container.ListItem.Premiered, ,  ]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Date)">$INFO[Container.ListItem.Date, ,  ]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Artist_YearsActive))">$INFO[Container.ListItem.Property(Artist_YearsActive), ,  ]</value>
		<value condition="!String.IsEmpty(ListItem.Year)">$INFO[Container.ListItem.Year, ,  ]</value>
	</variable>
	<variable name="WidgetInfo2Var">
		<value condition="!String.IsEmpty(ListItem.Property(duration))">$INFO[ListItem.Property(duration), ,  ]</value>
		<value condition="!String.IsEmpty(Container.ListItem.AddonVersion)">$INFO[Container.ListItem.AddonVersion, v,  ]</value>
		<value condition="!Integer.IsGreater(Container.ListItem.Duration(h),0)">$INFO[Container.ListItem.Duration(mm), ,m]$INFO[Container.ListItem.Duration(ss),,s  ]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Duration)">$INFO[Container.ListItem.Duration(hh), ,h]$INFO[Container.ListItem.Duration(mm),,m  ]</value>
	</variable>
	<variable name="WidgetInfo3Var">
		<value condition="!String.IsEmpty(Container.ListItem.UserRating)">$INFO[Container.ListItem.UserRating, ,.0  ]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Rating)">$INFO[Container.ListItem.Rating, ,  ]</value>
	</variable>

	<variable name="WidgetInfo3Var">
		<value condition="!String.IsEmpty(Container.ListItem.UserRating)">$INFO[Container.ListItem.UserRating, ,.0  ]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Rating)">$INFO[Container.ListItem.Rating, ,  ]</value>
	</variable>
</includes>