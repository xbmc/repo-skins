<?xml version="1.0" encoding="UTF-8"?>

<includes>

    <include name="Home">
        <control type="group">
            <left>0</left>
            <include>Animation_MusicVis_Left</include>
            <control type="group">
                <include>Animation_Home_Textbar_Slideover</include>
                <control type="group">
                    <left>home_left</left>
                    <width>320</width>
                    <include>Home_Textbar_Texture</include>
                    <include>Home_Textbar_Items</include>
                    <include>Home_Textbar_Bottomline</include>
                </control>
            </control>

            <control type="group">
                <animation effect="slide" start="0" end="301" time="300" tween="sine" easing="inout" condition="Control.HasFocus(302)">Conditional</animation>
                <control type="group">
                    <left>-320</left>
                    <width>320</width>
                    <control type="group">
                        <right>-8</right>
                        <include>Home_Textbar_Texture</include>
                    </control>
                    <control type="list" id="302">
                        <visible>Window.IsVisible(Home)</visible>
                        <onclick>SetFocus(300)</onclick>
                        <include>Home_OnClick</include>
                        <include>Home_OnFocus</include>
                        <onright>300</onright>
                        <include>Home_SubMenu_Layout</include>
                        <include>Home_SubMenu_Items</include>
                    </control>
                    <include>Home_Textbar_Bottomline</include>
                    <control type="group">
                        <top>view_top</top>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,0)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,1)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,2)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,3)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,4)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,5)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,6)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,7)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,8)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,9)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,10)">Conditional</animation>
                        <animation effect="slide" end="0,home_icon" condition="Integer.IsGreater(Container(302).NumItems,11)">Conditional</animation>
                        <include>Home_Separator</include>
                    </control>
                </control>
                <control type="group">
                    <left>0</left>
                    <width>home_icon</width>
                    
                    <include>Home_Iconbar_Texture</include>
                    <include>Home_Iconbar_Logo</include>
                    <control type="list" id="300">
                        <!-- <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(300) + !Control.HasFocus(302)">Conditional</animation> -->
                        <include>Defs_InfoDialog_Visible</include>
                        <include condition="![Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyVideoNav.xml)]">Home_OnClick</include>
                        <include>Home_OnFocus</include>
                        <onleft condition="Window.IsVisible(Home) + [!Skin.HasSetting(DisableSubMenu) | String.IsEqual(Container(300).ListItem.Property(widget),Weather)] + !Window.IsVisible(script-globalsearch-main.xml)">302</onleft>
                        <onleft condition="[Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml)] + !Window.IsVisible(script-globalsearch-main.xml)">9602</onleft>
                        <onright condition="Window.IsVisible(script-globalsearch-main.xml)">9500</onright>
                        <onright condition="Window.IsVisible(Home)">3000</onright>
                        <onright condition="Window.IsVisible(SettingsProfile.xml)">4</onright>
                        <onright condition="Window.IsVisible(SettingsCategory.xml)">3</onright>
                        <onright condition="Window.IsVisible(SkinSettings.xml)">9100</onright>
                        <onright condition="Window.IsVisible(SettingsSystemInfo.xml)">50</onright>
                        <onright condition="[Window.IsVisible(MyWeather.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyVideoNav.xml)]">50</onright>
                        <onright condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">9500</onright>

                        <include condition="![Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyVideoNav.xml)]">Home_MainMenu_Layout</include>
                        <include condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyVideoNav.xml)]">Home_VideoInfo_Layout</include>

                        <include condition="Window.IsVisible(Home) + !Window.IsVisible(script-globalsearch-main.xml)">Home_MainMenu_Items</include>
                        <include condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyVideoNav.xml)] + !Window.IsVisible(script-globalsearch-main.xml)">Home_MainMenu_OptionsItems</include>
                        <include condition="Window.IsVisible(MyPlaylist.xml) + !Window.IsVisible(script-globalsearch-main.xml)">Home_MainMenu_PlaylistItems</include>
                        <include condition="[Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(Settings.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(SkinSettings.xml) | Window.IsVisible(SettingsProfile.xml)] + !Window.IsVisible(script-globalsearch-main.xml)">Home_MainMenu_SettingsItems</include>
                        <include condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !Window.IsVisible(script-globalsearch-main.xml)">Home_MainMenu_NextAired</include>
                        <include condition="Window.IsVisible(script-globalsearch-main.xml)">Home_MainMenu_GlobalSearch</include>
                    </control>
                    <control type="group">
                        <top>view_top</top>
                        <include>Home_Separator</include>
                    </control>
                </control>
            </control>
        </control>
        <include>Object_PlotOverlay</include>
    </include>

    <include name="Home_Textbar_Bottomline">
        <control type="image">
            <bottom>0</bottom>
            <height>2</height>
            <right>6</right>
            <include>Animation_FadeOut_Delay</include>
            <texture colordiffuse="darkline_separator">common/white.png</texture>
            <visible>[Control.HasFocus(300) + Integer.IsGreater(Container(300).NumItems,11)] | [Control.HasFocus(302) + Integer.IsGreater(Container(302).NumItems,11)]</visible>
        </control>
    </include>

    <include name="Home_MainMenu_SettingsItems">
        <content>
            <item id="1">
                <label>14206</label>
                <icon>special://skin/extras/icons/swissarmy.png</icon>
                <onclick>ReplaceWindow(InterfaceSettings)</onclick>
                <property name="path">ReplaceWindow(InterfaceSettings)</property>
                <property name="altpath">ActivateWindow(InterfaceSettings)</property>
            </item>
            <item id="4">
                <label>166</label>
                <icon>special://skin/extras/icons/paintbrush.png</icon>
                <onclick>ReplaceWindow(SkinSettings)</onclick>
                <property name="path">ReplaceWindow(SkinSettings)</property>
                <property name="altpath">ActivateWindow(SkinSettings)</property>
            </item>
            <item id="2">
                <label>14211</label>
                <icon>special://skin/extras/icons/tags.png</icon>
                <onclick>ReplaceWindow(MediaSettings)</onclick>
                <property name="path">ReplaceWindow(MediaSettings)</property>
                <property name="altpath">ActivateWindow(MediaSettings)</property>
            </item>
            <item id="3">
                <label>14200</label>
                <icon>special://skin/extras/icons/equalizer.png</icon>
                <onclick>ReplaceWindow(PlayerSettings)</onclick>
                <property name="path">ReplaceWindow(PlayerSettings)</property>
                <property name="altpath">ActivateWindow(PlayerSettings)</property>
            </item>
            <item id="5">
                <label>13000</label>
                <icon>special://skin/extras/icons/configure.png</icon>
                <onclick>ReplaceWindow(SystemSettings)</onclick>
                <property name="path">ReplaceWindow(SystemSettings)</property>
                <property name="altpath">ActivateWindow(SystemSettings)</property>
            </item>
            <item id="6">
                <label>14036</label>
                <icon>special://skin/extras/icons/network.png</icon>
                <onclick>ReplaceWindow(servicesettings)</onclick>
                <property name="path">ReplaceWindow(servicesettings)</property>
                <property name="altpath">ActivateWindow(servicesettings)</property>
            </item>
            <item id="10">
                <label>$LOCALIZE[31294]</label>
                <icon>special://skin/extras/icons/livetv.png</icon>
                <onclick>ReplaceWindow(pvrsettings)</onclick>
                <property name="path">ReplaceWindow(pvrsettings)</property>
                <property name="altpath">ActivateWindow(pvrsettings)</property>
            </item>
            <item id="9">
                <label>130</label>
                <icon>special://skin/extras/icons/sysinfo.png</icon>
                <onclick>ReplaceWindow(systeminfo)</onclick>
                <property name="path">ReplaceWindow(systeminfo)</property>
                <property name="altpath">ActivateWindow(systeminfo)</property>
            </item>
            <item id="7">
                <label>13200</label>
                <icon>special://skin/extras/icons/actor.png</icon>
                <onclick>ReplaceWindow(Profiles)</onclick>
                <property name="path">ReplaceWindow(Profiles)</property>
                <property name="altpath">ActivateWindow(Profiles)</property>
            </item>
            <item id="8">
                <label>24001</label>
                <icon>special://skin/extras/icons/addons.png</icon>
                <onclick>ActivateWindow(AddonBrowser)</onclick>
                <property name="path">ActivateWindow(AddonBrowser)</property>
                <property name="altpath">ActivateWindow(AddonBrowser)</property>
            </item>
            <item id="11">
                <label>7</label>
                <icon>special://skin/extras/icons/files.png</icon>
                <onclick>ActivateWindow(filemanager)</onclick>
                <property name="path">ActivateWindow(filemanager)</property>
                <property name="altpath">ActivateWindow(filemanager)</property>
            </item>
            <item id="13">
                <label>$INFO[Control.GetLabel(20)]</label>
                <icon>special://skin/extras/icons/settings.png</icon>
                <onclick>SettingsLevelChange</onclick>
                <property name="path">SettingsLevelChange</property>
                <property name="altpath">SettingsLevelChange</property>
                <visible>Window.IsVisible(SettingsCategory.xml)</visible>
            </item>
        </content>
    </include>

    <include name="Home_MainMenu_InfoItems">
        <content>
            <!-- Play -->
            <item>
                <label>$INFO[Control.GetLabel(8)]</label>
                <icon>special://skin/extras/icons/play3.png</icon>
                <onclick>SendClick(8)</onclick>
                <visible>Control.IsEnabled(8)</visible>
            </item>
            <!-- CinemaVision -->
            <item>
                 <label>$LOCALIZE[31315]</label>
                 <icon>special://skin/extras/icons/cinemavision.png</icon>
                 <onclick>Dialog.Close(MovieInformation)</onclick>
                 <onclick>RunScript(script.cinemavision,experience)</onclick>
                 <visible>System.HasAddon(script.cinemavision) + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)]</visible>
            </item> 
            <!-- Trailer -->
            <item>
                <label>$INFO[Control.GetLabel(11)]</label>
                <icon>special://skin/extras/icons/video.png</icon>
                <!-- <onclick>SendClick(11)</onclick> -->
                <onclick>SetFocus(9503)</onclick>
                <onclick>SetProperty(TrailerPlaying,1,Home)</onclick>
                <onclick>PlayMedia($INFO[ListItem.Trailer],false,1)</onclick>
                <visible>Control.IsEnabled(11)</visible>
                <visible>!String.IsEmpty(ListItem.Trailer)</visible>
            </item>
            <!-- Cast -->
            <item>
                <label>$INFO[Control.GetLabel(9003)]</label>
                <icon>special://skin/extras/icons/actor.png</icon>
                <onclick>SetFocus(9003)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9003)</visible>
                <visible>Integer.IsGreater(Container(50).NumItems,0)</visible>
            </item>
            <!-- Next Up -->
            <item>
                <label>$INFO[Control.GetLabel(9004)]</label>
                <icon>special://skin/extras/icons/tv.png</icon>
                <onclick>SetFocus(9004)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9004)</visible>
                <visible>Integer.IsGreater(Container(9501).NumItems,0)</visible>
                <visible>!String.IsEmpty(ListItem.DBID) + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
            </item>
            <!-- Director -->
            <item>
                <label>$INFO[Control.GetLabel(9002)]</label>
                <icon>special://skin/extras/icons/director.png</icon>
                <onclick>SetFocus(9002)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9002)</visible>
                <visible>Integer.IsGreater(Container(9502).NumItems,0)</visible>
            </item>
            <!-- Similar -->
            <!-- <item>
                <label>$LOCALIZE[31319]</label>
                <icon>special://skin/extras/icons/bookmark-star.png</icon>
                <onclick>SetFocus(9006)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9006)</visible>
                <visible>Integer.IsGreater(Container(9503).NumItems,0)</visible>
            </item> -->
            <!-- youtube -->
            <!-- <item>
                <label>Youtube</label>
                <icon>special://skin/extras/icons/youtube.png</icon>
                <onclick>Close</onclick>
                <onclick>ActivateWindow(Videos,plugin://plugin.video.youtube/kodion/search/query/?q=$INFO[ListItem.Title],return)</onclick>
            </item> -->
            <!-- User Rating -->
            <item>
                <label>$LOCALIZE[31310]$INFO[ListItem.UserRating,: ,]</label>
                <icon>special://skin/extras/icons/award.png</icon>
                <onclick>SendClick(7)</onclick>
                <visible>Control.IsEnabled(7)</visible>
            </item>
            <!-- Info -->
            <item>
                <label>$LOCALIZE[31285]</label>
                <icon>special://skin/extras/icons/infobubble.png</icon>
                <onclick>SetFocus(9005)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9005)</visible>
            </item>
            
            <!-- Art -->
            <item>
                <label>$INFO[Control.GetLabel(10)]</label>
                <icon>special://skin/extras/icons/paintbrush.png</icon>
                <onclick>SendClick(10)</onclick>
                <visible>Control.IsEnabled(10)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Art Downloader -->
            <item>
                <label>$INFO[Control.GetLabel(9001)]</label>
                <icon>special://skin/extras/icons/paintbucket3.png</icon>
                <onclick>SetFocus(9001)</onclick>
                <onclick>Select</onclick>
                <onclick>SetFocus(300)</onclick>
                <visible>Control.IsEnabled(9001)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Refresh -->
            <item>
                <label>$INFO[Control.GetLabel(6)]</label>
                <icon>special://skin/extras/icons/update.png</icon>
                <onclick>SendClick(6)</onclick>
                <visible>Control.IsEnabled(6)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
        </content>
    </include>

    <include name="Home_MainMenu_InfoItems_Weather">
        <content>
            <!-- Next -->
            <item>
                <label>$LOCALIZE[31217]</label>
                <icon>special://skin/extras/icons/sort-up.png</icon>
                <onclick>Weather.LocationNext</onclick>
            </item>
            <!-- Refresh -->
            <item>
                <label>$INFO[Control.GetLabel(2)]</label>
                <icon>special://skin/extras/icons/update.png</icon>
                <onclick>SendClick(2)</onclick>
                <visible>Control.IsEnabled(2)</visible>
            </item>
            
            <!-- Settings -->
            <item>
                <label>$INFO[Control.GetLabel(9004)]</label>
                <icon>special://skin/extras/icons/sun.png</icon>
                <onclick>SetFocus(2)</onclick>
                <onclick>Addon.OpenSettings($INFO[Weather.Plugin])</onclick>
                <visible>Control.IsEnabled(9004)</visible>
            </item>
            <!-- Settings -->
            <item>
                <label>$INFO[Control.GetLabel(9005)]</label>
                <icon>special://skin/extras/icons/settings.png</icon>
                <onclick>SetFocus(2)</onclick>
                <onclick>ActivateWindow(ServiceSettings,weather)</onclick>
                <visible>Control.IsEnabled(9005)</visible>
            </item>
            <!-- Icons -->
            <item>
                <label>$INFO[Control.GetLabel(9006)]</label>
                <icon>special://skin/extras/icons/paintbrush.png</icon>
                <onclick>RunScript(script.image.resource.select,property=weather.icons&amp;type=resource.images.weathericons)</onclick>
                <visible>Control.IsEnabled(9006)</visible>
            </item>
            <!-- Fanart -->
            <item>
                <label>$INFO[Control.GetLabel(9007)]</label>
                <icon>special://skin/extras/icons/pictures.png</icon>
                <onclick condition="!System.HasAddon(resource.images.weatherfanart.multi)">InstallAddon(resource.images.weatherfanart.multi)</onclick>
                <visible>Control.IsEnabled(9007)</visible>
            </item>
        </content>
    </include>

    <include name="Home_MainMenu_ExtInfoItems">
        <content>
            <!-- Cast -->
            <item>
                <label>$INFO[Control.GetLabel(9002)]</label>
                <icon>special://skin/extras/icons/artist.png</icon>
                <onclick>SetFocus(9002)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9002)</visible>
            </item>
            <!-- Similar -->
            <item>
                <label>$INFO[Control.GetLabel(9003)]</label>
                <icon>special://skin/extras/icons/years.png</icon>
                <onclick>SetFocus(9003)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9003)</visible>
            </item>
            <!-- Youtube -->
            <item>
                <label>$INFO[Control.GetLabel(9004)]</label>
                <icon>special://skin/extras/icons/youtube.png</icon>
                <onclick>SetFocus(9004)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9004)</visible>
            </item>
            <!-- Crew -->
            <item>
                <label>$INFO[Control.GetLabel(9005)]</label>
                <icon>special://skin/extras/icons/actor.png</icon>
                <onclick>SetFocus(9005)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9005)</visible>
            </item>
            <!-- Trakt -->
            <item>
                <label>$INFO[Control.GetLabel(9009)]</label>
                <icon>special://skin/extras/icons/addtile.png</icon>
                <onclick>SendClick(9009)</onclick>
                <visible>Control.IsEnabled(9009)</visible>
            </item>
            <!-- Manage -->
            <item>
                <label>$INFO[Control.GetLabel(445)]</label>
                <icon>special://skin/extras/icons/configure.png</icon>
                <onclick>SendClick(445)</onclick>
                <visible>Control.IsEnabled(445)</visible>
            </item>
        </content>
    </include>

    <include name="Home_MainMenu_ExtInfoItems2">
        <content>
            <!-- Movies -->
            <item>
                <label>$INFO[Control.GetLabel(9001)]</label>
                <icon>special://skin/extras/icons/film.png</icon>
                <onclick>SetFocus(9001)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9001)</visible>
            </item>
            <!-- tv -->
            <item>
                <label>$INFO[Control.GetLabel(9002)]</label>
                <icon>special://skin/extras/icons/tv.png</icon>
                <onclick>SetFocus(9002)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9002)</visible>
            </item>
            <!-- Youtube -->
            <item>
                <label>$INFO[Control.GetLabel(9003)]</label>
                <icon>special://skin/extras/icons/youtube.png</icon>
                <onclick>SetFocus(9003)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9003)</visible>
            </item>
            <!-- Crew -->
            <item>
                <label>$INFO[Control.GetLabel(9004)]</label>
                <icon>special://skin/extras/icons/actor.png</icon>
                <onclick>SetFocus(9004)</onclick>
                <onclick>Select</onclick>
                <visible>Control.IsEnabled(9004)</visible>
            </item>
        </content>
    </include>

    <include name="Home_MainMenu_InfoItems_Addons">
        <content>
            <!-- use -->
            <item>
                <label>$INFO[Control.GetLabel(12)]</label>
                <icon>special://skin/extras/icons/play3.png</icon>
                <onclick>SendClick(12)</onclick>
                <visible>Control.IsEnabled(12)</visible>
            </item>
            <!-- enable -->
            <item>
                <label>$INFO[Control.GetLabel(7)]</label>
                <icon>special://skin/extras/icons/enabled.png</icon>
                <onclick>SendClick(7)</onclick>
                <visible>Control.IsEnabled(7)</visible>
                <visible>String.IsEqual(Control.GetLabel(7),$LOCALIZE[24021])</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <item>
                <label>$INFO[Control.GetLabel(7)]</label>
                <icon>special://skin/extras/icons/error.png</icon>
                <onclick>SendClick(7)</onclick>
                <visible>Control.IsEnabled(7)</visible>
                <visible>!String.IsEqual(Control.GetLabel(7),$LOCALIZE[24021])</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- uninstall -->
            <item>
                <label>$INFO[Control.GetLabel(6)]</label>
                <icon>special://skin/extras/icons/download.png</icon>
                <onclick>SendClick(6)</onclick>
                <visible>Control.IsEnabled(6)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!--Update -->
            <item>
                <label>$INFO[Control.GetLabel(8)]</label>
                <icon>special://skin/extras/icons/update.png</icon>
                <onclick>SendClick(8)</onclick>
                <visible>Control.IsEnabled(8)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- settings -->
            <item>
                <label>$INFO[Control.GetLabel(9)]</label>
                <icon>special://skin/extras/icons/settings.png</icon>
                <onclick>SendClick(9)</onclick>
                <visible>Control.IsEnabled(9)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Auto Update -->
            <item>
                <label>$INFO[Control.GetLabel(13)]</label>
                <icon>$VAR[Image_AutoUpdate]</icon>
                <onclick>SetFocus(13)</onclick>
                <onclick>Select</onclick>
                <onclick>SetFocus(300)</onclick>
                <visible>Control.IsEnabled(13)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
        </content>
    </include>


    <variable name="Home_View_Locked">
        <value condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))] | [Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))] | [Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))] | [Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))] | [Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))] | [Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))] | [Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))] | [Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))] | [Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))] | [Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))] | [Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))] | [Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))] | [Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))] | [Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))] | [Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))] | [Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))] | [Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))] | [Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))] | [Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))] | [Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))] | [Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))] | [Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))] | [Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))] | [Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))] | [Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">special://skin/extras/icons/locked.png</value>
        <value>special://skin/extras/icons/unlocked.png</value>
    </variable>
    <variable name="Home_View_Locked_Label">
        <value condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))] | [Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))] | [Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))] | [Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))] | [Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))] | [Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))] | [Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))] | [Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))] | [Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))] | [Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))] | [Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))] | [Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))] | [Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))] | [Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))] | [Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))] | [Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))] | [Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))] | [Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))] | [Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))] | [Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))] | [Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))] | [Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))] | [Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))] | [Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))] | [Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">$LOCALIZE[31180]</value>
        <value>$LOCALIZE[31179]</value>
    </variable>

    <include name="Home_View_LockUnlock">
        <onclick condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))]">Skin.Reset(Skin.ForcedView.)</onclick>
        <onclick condition="[Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">Skin.Reset(Skin.ForcedView.tags)</onclick>
        <onclick condition="[Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))]">Skin.Reset(Skin.ForcedView.years)</onclick>
        <onclick condition="[Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">Skin.Reset(Skin.ForcedView.genres)</onclick>
        <onclick condition="[Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">Skin.Reset(Skin.ForcedView.countries)</onclick>
        <onclick condition="[Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">Skin.Reset(Skin.ForcedView.studios)</onclick>
        <onclick condition="[Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">Skin.Reset(Skin.ForcedView.playlists)</onclick>
        <onclick condition="[Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">Skin.Reset(Skin.ForcedView.movies)</onclick>
        <onclick condition="[Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">Skin.Reset(Skin.ForcedView.sets)</onclick>
        <onclick condition="[Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">Skin.Reset(Skin.ForcedView.tvshows)</onclick>
        <onclick condition="[Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">Skin.Reset(Skin.ForcedView.seasons)</onclick>
        <onclick condition="[Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]">Skin.Reset(Skin.ForcedView.episodes)</onclick>
        <onclick condition="[Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">Skin.Reset(Skin.ForcedView.artists)</onclick>
        <onclick condition="[Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">Skin.Reset(Skin.ForcedView.albums)</onclick>
        <onclick condition="[Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">Skin.Reset(Skin.ForcedView.songs)</onclick>
        <onclick condition="[Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">Skin.Reset(Skin.ForcedView.musicvideos)</onclick>
        <onclick condition="[Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">Skin.Reset(Skin.ForcedView.addons)</onclick>
        <onclick condition="[Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">Skin.Reset(Skin.ForcedView.actors)</onclick>
        <onclick condition="[Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">Skin.Reset(Skin.ForcedView.directors)</onclick>
        <onclick condition="[Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))]">Skin.Reset(Skin.ForcedView.files)</onclick>
        <onclick condition="[Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">Skin.Reset(Skin.ForcedView.mixed)</onclick>
        <onclick condition="[Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))]">Skin.Reset(Skin.ForcedView.images)</onclick>
        <onclick condition="[Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))]">Skin.Reset(Skin.ForcedView.games)</onclick>
        <onclick condition="[Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">Skin.Reset(Skin.ForcedView.unknown)</onclick>
        <onclick condition="[Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">Skin.Reset(Skin.ForcedView.videos)</onclick>
    </include>
    <include name="Home_MainMenu_OptionsItems">
        <content>
            <!-- Group -->
            <item>
                <label>$INFO[Control.GetLabel(28)]</label>
                <icon>special://skin/extras/icons/years.png</icon>
                <onclick>SendClick(28)</onclick>
                <visible>Control.IsEnabled(28)</visible>
            </item>
            <!-- Viewmode -->
            <item>
                <label>$INFO[Container.Viewmode]</label>
                <icon>special://skin/extras/icons/viewmode.png</icon>
                <include>Home_View_LockUnlock</include>
                <onclick>Container.NextViewMode</onclick>
                <visible>Control.IsEnabled(2)</visible>
                <visible>Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyPrograms.xml)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Lock viewmode -->
            <item>
                <label>$VAR[Home_View_Locked_Label,, ]$INFO[Container.Content,(,)]</label>
                <icon>$VAR[Home_View_Locked]</icon>
                <include>Home_View_LockUnlock</include>
                <onclick condition="[Container.Content() + String.IsEmpty(Skin.String(Skin.ForcedView.))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(tags) + String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(years) + String.IsEmpty(Skin.String(Skin.ForcedView.years))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(genres) + String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(countries) + String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(studios) + String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(playlists) + String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(movies) + String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(sets) + String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(tvshows) + String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(seasons) + String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(episodes) + String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(artists) + String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(albums) + String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(songs) + String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(musicvideos) + String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(addons) + String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(actors) + String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(directors) + String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(files) + String.IsEmpty(Skin.String(Skin.ForcedView.files))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(mixed) + String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(images) + String.IsEmpty(Skin.String(Skin.ForcedView.images))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(games) + String.IsEmpty(Skin.String(Skin.ForcedView.games))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(unknown) + String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <onclick condition="[Container.Content(videos) + String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
                <visible>Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyPrograms.xml)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Sort -->
            <item>
                <label>$INFO[Control.GetLabel(3)]</label>
                <icon>special://skin/extras/icons/sort2.png</icon>
                <onclick>SendClick(3)</onclick>
                <visible>Control.IsEnabled(3)</visible>
            </item>
            <!-- Ascend Descend -->
            <item>
                <label>$INFO[Control.GetLabel(4)]</label>
                <icon>special://skin/extras/icons/sort.png</icon>
                <onclick>SendClick(4)</onclick>
                <visible>Control.IsEnabled(4)</visible>
            </item>
            <!-- Wraplist -->
            <!-- <item>
                <label>$VAR[Label_WrapList]</label>
                <icon>special://skin/extras/icons/signpost.png</icon>
                <onclick>Skin.ToggleSetting(WrapList)</onclick>
                <onclick>ReloadSkin()</onclick>
                <visible>Control.IsVisible(52) | Control.IsVisible(56)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item> -->
            <!-- Flipside -->
            <!-- <item>
                <label>$LOCALIZE[31304]</label>
                <icon>special://skin/extras/icons/signpost.png</icon>
                <onclick>Skin.ToggleSetting(FlipSide.553)</onclick>
                <onclick>ReloadSkin()</onclick>
                <visible>Control.IsVisible(553)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item> -->
            <!-- No Padding Lovefilm -->
            <item>
                <label>$VAR[Label_EdgePadding]</label>
                <icon>special://skin/extras/icons/signpost.png</icon>
                <onclick>Skin.ToggleSetting(LoveFilmSmall)</onclick>
                <onclick>ReloadSkin()</onclick>
                <visible>Control.IsVisible(59)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- InfoList Hide Artwork -->
            <item>
                <label>$VAR[Label_HideArtwork]</label>
                <icon>special://skin/extras/icons/pictures.png</icon>
                <onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(DisableInfoListArt.54)</onclick>
                <onclick condition="Control.IsVisible(57)">Skin.ToggleSetting(DisableInfoListArt.57)</onclick>
                <onclick condition="Control.IsVisible(551)">Skin.ToggleSetting(DisableInfoListArt.551)</onclick>
                <onclick condition="Control.IsVisible(557)">Skin.ToggleSetting(DisableInfoListArt.557)</onclick>
                <onclick condition="Control.IsVisible(558)">Skin.ToggleSetting(DisableInfoListArt.558)</onclick>
                <visible>Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(551) | Control.IsVisible(557) | Control.IsVisible(558)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Show/Hide Ratings/Flags -->
            <item>
                <label>$VAR[Label_HideRatings]</label>
                <icon>special://skin/extras/icons/diamond.png</icon>
                <onclick>Skin.ToggleSetting(DisableInfoRatings)</onclick>
                <visible>Control.IsVisible(52) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(57) | Control.IsVisible(59) | Control.IsVisible(551) | Control.IsVisible(557) | Control.IsVisible(558)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
                <visible>Container.Content(movies) | Container.Content(episodes)</visible>
            </item>
            <!-- Search -->
            <item>
                <label>$LOCALIZE[137]</label>
                <icon>special://skin/extras/icons/search.png</icon>
                <!-- <onclick>SendClick(8)</onclick> -->
                <onclick>SetFocus(50)</onclick>
                <onclick>RunScript(script.globalsearch)</onclick>
                <visible>!String.Contains(Container.FolderPath,plugin://) + Control.IsEnabled(8)</visible>
            </item>
            <!-- Filter -->
            <item>
                <label>$LOCALIZE[587]: $VAR[Label_Filtered]</label>
                <icon>$VAR[Image_Filtered]</icon>
                <onclick>Filter</onclick>
                <visible>Container.CanFilterAdvanced</visible>
            </item>
            <!-- Hide Watched -->
            <item>
                <label>$INFO[Control.GetLabel(14)]</label>
                <icon>$VAR[Image_Watched]</icon>
                <onclick>SendClick(14)</onclick>
                <visible>Control.IsEnabled(14)</visible>
            </item>
            
            <!-- Notifications -->
            <item>
                <label>$INFO[Control.GetLabel(6)]</label>
                <icon>special://skin/extras/icons/infobubble.png</icon>
                <onclick>SetFocus(6)</onclick>
                <onclick>Select</onclick>
                <onclick>SetFocus(300)</onclick>
                <visible>Control.IsEnabled(6)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Extra Fanart -->
            <item>
                <label>$VAR[Label_ExtraFanart]</label>
                <icon>special://skin/extras/icons/filebox.png</icon>
                <onclick>Skin.ToggleSetting(SkinHelper.EnableExtraFanart)</onclick>
                <visible>Control.IsEnabled(6005)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>

            <!-- Settings -->
            <item>
                <label>$INFO[Control.GetLabel(5)]</label>
                <icon>special://skin/extras/icons/settings.png</icon>
                <onclick>SendClick(5)</onclick>
                <visible>Control.IsEnabled(5)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Update -->
            <item>
                <label>$INFO[Control.GetLabel(20)]</label>
                <icon>special://skin/extras/icons/update.png</icon>
                <onclick>SendClick(20)</onclick>
                <visible>Control.IsEnabled(20)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Check Updates -->
            <item>
                <label>$INFO[Control.GetLabel(9)]</label>
                <icon>special://skin/extras/icons/update.png</icon>
                <onclick>SendClick(9)</onclick>
                <visible>Control.IsEnabled(9)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            
            <!-- Playlist -->
            <item>
                <icon>special://skin/extras/icons/playlist.png</icon>
                <label>13350</label>
                <onclick condition="Integer.IsGreater(Playlist.Length(video),0)">ActivateWindow(VideoPlaylist)</onclick>
                <onclick condition="Integer.IsGreater(Playlist.Length(music),0)">ActivateWindow(MusicPlaylist)</onclick>
                <visible>Integer.IsGreater(Playlist.Length(music),0) | Integer.IsGreater(Playlist.Length(video),0)</visible>
            </item>
            <!-- Fullscreen -->
            <item>
                <icon>special://skin/extras/icons/fullscreen.png</icon>
                <label>$LOCALIZE[31023]</label>
                <visible>Player.HasMedia</visible>
                <onclick>Fullscreen</onclick>
            </item>
            <!-- Addon settings -->
            <item>
                <icon>special://skin/extras/icons/settings.png</icon>
                <label>$LOCALIZE[10140]</label>
                <onclick>Addon.OpenSettings($INFO[Container.PluginName])</onclick>
                <visible>!String.IsEmpty(Container.PluginName)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            <!-- Get More -->
            <item>
                <icon>special://skin/extras/icons/download.png</icon>
                <label>$LOCALIZE[21452]</label>
                <onclick>ActivateWindow(addonbrowser,addons://more/video/,return)</onclick>
                <visible>Container.Content(addons) + !String.Contains(Container.FolderPath,addons://)</visible>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
            
        </content>
    </include>

    <include name="Home_MainMenu_NextAired">
        <content>
            <item>
                <icon>special://skin/extras/icons/settings.png</icon>
                <label>$LOCALIZE[10140]</label>
                <onclick>Addon.OpenSettings(script.tv.show.next.aired)</onclick>
                <visible>!Skin.HasSetting(global.kioskmode)</visible>
            </item>
        </content>
    </include>

    <include name="Home_MainMenu_GlobalSearch">
        <content>
            <item>
                <icon>special://skin/extras/icons/search.png</icon>
                <label>$LOCALIZE[137]</label>
                <onclick>SendClick(198)</onclick>
            </item>
        </content>
    </include>


    <include name="Home_MainMenu_PlaylistItems">
        <content>
            <!-- Sort -->
            <item>
                <label>$INFO[Control.GetLabel(3)]</label>
                <icon>special://skin/extras/icons/sort2.png</icon>
                <onclick>SendClick(3)</onclick>
                <visible>Control.IsEnabled(3)</visible>
            </item>
            <!-- Ascend Descend -->
            <item>
                <label>$INFO[Control.GetLabel(4)]</label>
                <icon>special://skin/extras/icons/sort.png</icon>
                <onclick>SendClick(4)</onclick>
                <visible>Control.IsEnabled(4)</visible>
            </item>
            <!-- Save -->
            <item>
                <label>$INFO[Control.GetLabel(21)]</label>
                <icon>special://skin/extras/icons/files.png</icon>
                <onclick>SendClick(21)</onclick>
                <visible>Control.IsEnabled(21)</visible>
            </item>
            <!-- Clear -->
            <item>
                <label>$INFO[Control.GetLabel(22)]</label>
                <icon>special://skin/extras/icons/error.png</icon>
                <onclick>SendClick(22)</onclick>
                <visible>Control.IsEnabled(22)</visible>
            </item>
            <!-- Play -->
            <item>
                <label>$INFO[Control.GetLabel(23)]</label>
                <icon>special://skin/extras/icons/play3.png</icon>
                <onclick>SendClick(23)</onclick>
                <visible>Control.IsEnabled(23)</visible>
            </item>
            <!-- Repeat -->
            <item>
                <label>$INFO[Control.GetLabel(26)]</label>
                <icon>special://skin/extras/icons/repeat.png</icon>
                <onclick>SendClick(26)</onclick>
                <visible>Control.IsEnabled(26)</visible>
            </item>
            <!-- Shuffle -->
            <item>
                <label>$INFO[Control.GetLabel(20)]</label>
                <icon>special://skin/extras/icons/shuffle.png</icon>
                <onclick>SendClick(20)</onclick>
                <visible>Control.IsEnabled(20)</visible>
            </item>
            <!-- Fullscreen -->
            <item>
                <icon>special://skin/extras/icons/fullscreen.png</icon>
                <label>$LOCALIZE[31023]</label>
                <visible>Player.HasMedia</visible>
                <onclick>Fullscreen</onclick>
            </item>
        </content>
    </include>

    <include name="Home_Separator">
        <param name="visible" default="true" />
        <definition>
            <control type="group">
                <height>home_icon</height>
                <control type="group">
                    <visible>$PARAM[visible]</visible>
                    <include>Animation_FadeOut_Delay</include>
                    <control type="image">
                        <width>100%</width>
                        <height>1</height>
                        <top>0</top>
                        <texture colordiffuse="darkline_separator">common/white.png</texture>
                    </control>
                    <control type="image">
                        <width>100%</width>
                        <height>1</height>
                        <top>1</top>
                        <texture colordiffuse="highlight_bottombar">common/white.png</texture>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="Home_Textbar_Texture">
        <control type="image">
            <texture>common/gradient-solid-horizontal.png</texture>
            <include>Defs_DarkShadow</include>
        </control>
        <control type="image">
            <right>6</right>
            <texture colordiffuse="dialog_bg_100">common/white.png</texture>
        </control>
        <control type="image">
            <right>6</right>
            <texture colordiffuse="$VAR[ColorOverlay]">common/white.png</texture>
            <animation effect="fade" start="100" end="5" condition="true">Conditional</animation>
            <visible>!String.IsEmpty(Skin.String(overlaycolor.name))</visible>
            <visible>String.IsEqual(Skin.CurrentColourTheme,Dark Dialogs)</visible>
        </control>
        <control type="image">
            <width>1</width>
            <right>4</right>
            <texture colordiffuse="highlight_bottombar">common/white.png</texture>
        </control>
        <control type="image">
            <width>1</width>
            <right>5</right>
            <texture colordiffuse="darkline_separator">common/white.png</texture>
        </control>
    </include>

    <include name="Home_Textbar_Item">
        <control type="group">
            <height>home_icon</height>
            <visible>!String.IsEmpty(Container(300).ListItemPosition($PARAM[id]).Label) | !String.IsEmpty(Container(300).ListItemPosition($PARAM[id]).Icon)</visible>
            <control type="group">
                <visible>Control.HasFocus(300)</visible>
                <include>Animation_FadeOut_Delay</include>
                <control type="image">
                    <visible>String.IsEqual(Container(300).ListItemPosition($PARAM[id]).Label,Container(300).ListItem.Label)</visible>
                    <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
                </control>
                <control type="image">
                    <visible>String.IsEqual(Container(300).ListItemPosition($PARAM[id]).Label,Container(300).ListItem.Label)</visible>
                    <texture colordiffuse="$VAR[ColorHighlight2]">common/gradient-diffuse-horizontal.png</texture>
                </control>
                <include content="Home_Separator">
                    <param name="visible" value="Control.HasFocus(300)" />
                </include>
                <control type="image">
                    <visible>String.IsEqual(Container(300).ListItemPosition($PARAM[id]).Label,Container(300).ListItem.Label)</visible>
                    <left>8</left>
                    <width>home_icon</width>
                    <texture colordiffuse="Selected">common/home-indicator.png</texture>
                    <visible>Skin.HasSetting(SubmenuIndicator)</visible>
                    <visible>Window.IsVisible(Home)</visible>
                    <visible>Control.HasFocus(300)</visible>
                    <visible>!Skin.HasSetting(IconOnlyMode)</visible>
                    <visible>!Skin.HasSetting(DisableSubMenu)</visible>
                    <visible>Integer.IsGreater(Container(302).NumItems,0)</visible>
                </control>
            </control>
            <include content="Home_Textbar_Item_Label" condition="![Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">
                <param name="id" value="$PARAM[id]" />
                <param name="font" value="font_mainmenu" />
            </include>
            <include content="Home_Textbar_Item_Label" condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">
                <param name="id" value="$PARAM[id]" />
                <param name="font" value="font_submenu" />
            </include>
        </control>
    </include>

    <include name="Home_Textbar_Item_Label">
        <param name="font" default="font_mainmenu" />
        <definition>
            <control type="group">
                <control type="label">
                    <left>30</left>
                    <font>$PARAM[font]</font>
                    <textcolor>dialog_fg_100</textcolor>
                    <label>$INFO[Container(300).ListItemPosition($PARAM[id]).Label]</label>
                    <visible>!String.IsEqual(Container(300).ListItemPosition($PARAM[id]).Label,Container(300).ListItem.Label)</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>40</right>
                    <font>$PARAM[font]_bold</font>
                    <align>left</align>
                    <textcolor>Selected</textcolor>
                    <label>$INFO[Container(300).ListItemPosition($PARAM[id]).Label]</label>
                    <visible>String.IsEqual(Container(300).ListItemPosition($PARAM[id]).Label,Container(300).ListItem.Label)</visible>
                </control>
            </control>
        </definition>
    </include>

    <include name="Home_Textbar_Items">
        <control type="grouplist">
            <top>view_top</top>
            <right>6</right>
            <left>0</left>
            <orientation>vertical</orientation>
            <itemgap>0</itemgap>
            <visible>!Skin.HasSetting(IconOnlyMode) | Control.HasFocus(302)</visible>
            <include content="Home_Textbar_Item">
                <param name="id" value="0" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="1" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="2" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="3" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="4" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="5" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="6" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="7" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="8" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="9" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="10" />
            </include>
            <include content="Home_Textbar_Item">
                <param name="id" value="11" />
            </include>
            <include content="Home_Separator">
                <param name="visible" value="Control.HasFocus(300)" />
            </include>
        </control>
    </include>

    <include name="Home_MainMenu_Layout">
        <top>view_top</top>
        <width>240</width>
        <!-- <height>890</height> -->
        <preloaditems>2</preloaditems>
        <orientation>vertical</orientation>
        <scrolltime>0</scrolltime>
        <itemlayout height="home_icon" width="240">
            <control type="group">
                <top>home_icon</top>
                <width>home_icon</width>
                <include>Home_Separator</include>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_30">$INFO[ListItem.Icon]</texture>
            </control>

            <control type="group">
                <left>home_icon</left>
                <width>6</width>
                <visible>[!Control.HasFocus(300) + [!Window.IsVisible(Home) + String.IsEqual(ListItem.Property(path),Window(Home).Property(MenuIconFocus))] + !Skin.HasSetting(IconOnlyMode)]</visible>
                <include>Animation_FadeIn_Delay</include>
                <control type="image">
                    <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
                </control>
                <control type="group">
                    <include>Home_Separator</include>
                </control>
                <control type="group">
                    <top>home_icon</top>
                    <include>Home_Separator</include>
                </control>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_100">$INFO[ListItem.Icon]</texture>
                <visible>!Control.HasFocus(300) + [!Window.IsVisible(Home) + String.IsEqual(ListItem.Property(path),Window(Home).Property(MenuIconFocus))]</visible>
            </control>
        </itemlayout>
        <focusedlayout height="home_icon" width="240">
            <!-- <control type="button">
                <visible allowhiddenfocus="true">false</visible>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(interfacesettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(InterfaceSettings))">AlarmClock(settingswitch,ReplaceWindow(InterfaceSettings),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(SkinSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(SkinSettings))">AlarmClock(settingswitch,ReplaceWindow(SkinSettings),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(PlayerSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(PlayerSettings))">AlarmClock(settingswitch,ReplaceWindow(PlayerSettings),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(SystemSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(SystemSettings))">AlarmClock(settingswitch,ReplaceWindow(SystemSettings),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(MediaSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(MediaSettings))">AlarmClock(settingswitch,ReplaceWindow(MediaSettings),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(ServiceSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(ServiceSettings))">AlarmClock(settingswitch,ReplaceWindow(ServiceSettings),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(PVRSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(PVRSettings))">AlarmClock(settingswitch,ReplaceWindow(PVRSettings),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(SystemInfo) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(SystemInfo))">AlarmClock(settingswitch,ReplaceWindow(SystemInfo),00:01,silent)</onfocus>
                <onfocus condition="[Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings)] + !Window.IsActive(Profiles) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(Profiles))">AlarmClock(settingswitch,ReplaceWindow(Profiles),00:01,silent)</onfocus>
            </control> -->
            <control type="group">
                <width>home_icon</width>
                <top>home_icon</top>
                <include>Home_Separator</include>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="Selected">common/home-indicator.png</texture>
                <visible>Skin.HasSetting(SubmenuIndicator)</visible>
                <visible>Window.IsVisible(Home)</visible>
                <visible>Control.HasFocus(300)</visible>
                <visible>Integer.IsGreater(Container(302).NumItems,0)</visible>
                <visible>!Skin.HasSetting(DisableSubMenu)</visible>
                <visible>Skin.HasSetting(IconOnlyMode)</visible>
                <animation effect="fade" start="0" end="100" time="350" delay="250" tween="cubic" easing="inout">Focus</animation>
            </control>
            <control type="group">
                <left>home_icon</left>
                <width>6</width>
                <visible>[!Control.HasFocus(300) + [Window.IsVisible(Home) | [!Window.IsVisible(Home) + String.IsEqual(ListItem.Property(path),Window(Home).Property(MenuIconFocus))]] + !Skin.HasSetting(IconOnlyMode)] | [[Control.HasFocus(300) | Control.HasFocus(302)] + Skin.HasSetting(IconOnlyMode)]</visible>
                <include>Animation_FadeIn</include>
                <control type="image">
                    <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
                </control>
                <control type="group">
                    <include>Home_Separator</include>
                </control>
                <control type="group">
                    <top>home_icon</top>
                    <include>Home_Separator</include>
                </control>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_100">$INFO[ListItem.Icon]</texture>
                <visible>!Control.HasFocus(300) + [Window.IsVisible(Home) | [!Window.IsVisible(Home) + String.IsEqual(ListItem.Property(path),Window(Home).Property(MenuIconFocus))]]</visible>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_30">$INFO[ListItem.Icon]</texture>
                <visible>!Control.HasFocus(300) + !Window.IsVisible(Home) + !String.IsEqual(ListItem.Property(path),Window(Home).Property(MenuIconFocus))</visible>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_100">$INFO[ListItem.Icon]</texture>
                <visible>Control.HasFocus(300)</visible>
                <include>Animation_FocusBounce_Home</include>
            </control>
            
        </focusedlayout>
    </include>

    <include name="Home_VideoInfo_Layout">
        <top>view_top</top>
        <!-- <height>890</height> -->
        <width>240</width>
        <preloaditems>2</preloaditems>
        <orientation>vertical</orientation>
        <scrolltime>0</scrolltime>
        <itemlayout height="home_icon" width="240">
            <control type="group">
                <width>home_icon</width>
                <top>home_icon</top>
                <include>Home_Separator</include>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_30">$INFO[ListItem.Icon]</texture>
            </control>
        </itemlayout>
        <focusedlayout height="home_icon" width="240">
            <control type="group">
                <width>home_icon</width>
                <top>home_icon</top>
                <include>Home_Separator</include>
            </control>
            <control type="group">
                <left>home_icon</left>
                <width>6</width>
                <visible>[Control.HasFocus(300) + Skin.HasSetting(IconOnlyMode)]</visible>
                <include>Animation_FadeIn</include>
                <control type="image">
                    <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
                </control>
                <control type="group">
                    <include>Home_Separator</include>
                </control>
                <control type="group">
                    <top>home_icon</top>
                    <include>Home_Separator</include>
                </control>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_30">$INFO[ListItem.Icon]</texture>
                <visible>!Control.HasFocus(300)</visible>
            </control>
            <control type="image">
                <width>home_icon</width>
                <texture colordiffuse="main_fg_100">$INFO[ListItem.Icon]</texture>
                <visible>Control.HasFocus(300)</visible>
                <include>Animation_FocusBounce_Home</include>
            </control>
        </focusedlayout>
    </include>

    <include name="Home_MainMenu_Items">
        <content><include>skinshortcuts-mainmenu</include></content>
    </include>

    <include name="Home_SubMenu_Layout">
        <top>view_top</top>
        <width>310</width>
        <right>0</right>
        <preloaditems>2</preloaditems>
        <orientation>vertical</orientation>
        <focusposition>1</focusposition>
        <itemlayout height="home_icon" width="310">
            <include>Home_Separator</include>
            <control type="label">
                <left>24</left>
                <font>font_submenu</font>
                <align>right</align>
                <right>24</right>
                <textcolor>dialog_fg_100</textcolor>
                <label>$INFO[ListItem.Label]</label>
            </control>
        </itemlayout>
        <focusedlayout height="home_icon" width="310">
            <control type="image">
                <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
            </control>
            <control type="image">
                <texture colordiffuse="$VAR[ColorHighlight2]">common/gradient-diffuse-horizontal.png</texture>
            </control>
            <include>Home_Separator</include>
            <control type="label">
                <left>24</left>
                <right>24</right>
                <font>font_submenu_bold</font>
                <align>right</align>
                <textcolor>Selected</textcolor>
                <label>$INFO[ListItem.Label]</label>
            </control>
        </focusedlayout>
    </include>

    <include name="Home_SubMenu_Items">
        <content><include>skinshortcuts-submenu</include></content>
    </include>


    <include name="Home_Iconbar_Texture">
        <control type="image">
            <texture>common/gradient-solid-horizontal.png</texture>
            <include>Defs_DarkShadow</include>
        </control>
        
        <control type="image">
            <width>1</width>
            <left>-1</left>
            <texture colordiffuse="highlight_bottombar">common/white.png</texture>
        </control>
        <control type="image">
            <width>1</width>
            <right>0</right>
            <texture colordiffuse="darkline_separator">common/white.png</texture>
        </control>
    </include>

    <include name="Home_Iconbar_Logo">
        <control type="group">
            <height>topbar_height</height>
            <control type="group">
                <centertop>53%</centertop>
                <height>100</height>
                <control type="image">
                    <top>-15</top>
                    <width>home_icon</width>
                    <height>home_icon</height>
                    <texture colordiffuse="$VAR[ColorHighlight]">special://skin/extras/icons/kodi.png</texture>
                    <visible>!Container.Scrolling</visible>
                    <animation type="Visible">
                        <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" delay="2000" />
                        <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" delay="2000" />
                    </animation>
                    <animation type="Hidden">
                        <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
                        <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out"/>
                    </animation>
                </control>
                <control type="label">
                    <width>home_icon</width>
                    <visible>Container.Scrolling</visible>
                    <animation type="Visible">
                        <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
                        <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" />
                    </animation>
                    <animation type="Hidden">
                        <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" delay="2000" />
                        <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out" delay="2000" />
                    </animation>
                    <label>$INFO[ListItem.SortLetter]</label>
                    <height>48</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <font>font_topbar</font>
                    <textcolor>main_fg_100</textcolor>
                    <shadowcolor>main_bg_30</shadowcolor>
                </control>
                <control type="label">
                    <label>KODI</label>
                    <height>30</height>
                    <top>55</top>
                    <align>center</align>
                    <aligny>center</aligny>
                    <right>2</right>
                    <font>font_tiny_bold</font>
                    <textcolor>main_fg_100</textcolor>
                </control>
            </control>
        </control>
    </include>
    <include name="Home_OnClick">

        <onclick>ClearProperty(MenuFocus,Home)</onclick>

        <!-- Set Menu Indicator -->
        <onclick>$INFO[ListItem.Property(path)]</onclick>

        <onback condition="Window.IsVisible(SkinSettings.xml)">SetFocus(9100)</onback>
        <onback condition="Window.IsVisible(SkinSettings.xml)">Close</onback>
        <onback condition="Window.IsVisible(SettingsCategory.xml)">SetFocus(3)</onback>
        <onback condition="Window.IsVisible(SettingsCategory.xml)">Close</onback>
        
    </include>

    <include name="Home_OnFocus">
        <onunfocus>ClearProperty(MenuFocus,Home)</onunfocus>
        <onfocus>SetProperty(MenuFocus,1,Home)</onfocus>
        <onfocus>ClearProperty(WidgetFocus,Home)</onfocus>
        <onfocus>ClearProperty(WidgetLoading,Home)</onfocus>
        <onfocus>AlarmClock(SetLoad,SetProperty(WidgetLoading,1,Home),00:00,silent)</onfocus>
    </include>
</includes>