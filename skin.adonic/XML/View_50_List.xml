<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Square -->
	<include name="View_50_Square">
		<control type="group">
			<animation effect="slide" end="-1860" time="400" condition="[!String.IsEmpty(Window(Home).Property(WideToggle))] + [[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">Conditional</animation>
			<animation effect="slide" start="400,0" end="0,0" time="400" tween="quadratic" easing="out" condition="String.IsEmpty(Window(home).Property(MediaMenu))">Conditional</animation>
			
			<include>Animation.Common</include>
			<control type="image">
				<fadetime>400</fadetime>
				<left>-580</left>
				<width>640</width>
				<height>960</height>
				<aspectratio align="left" aligny="top">scale</aspectratio>
				<texture background="true" colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
			</control>
			<control type="group">
				<animation effect="fade" start="100" end="0" time="400" tween="quadratic" easing="out" condition="Window.IsActive(filebrowser)">Conditional</animation>
				<visible>Control.IsVisible(50) + !Window.IsActive(movieinformation) + !Window.IsActive(musicinformation) + !Window.IsVisible(songinformation)</visible>
				<left>60</left>
				<top>0</top>
				<control type="panel" id="50">
					<width>1150</width>
					<height>960</height>
					<onleft condition="Control.IsVisible(6002)">6002</onleft>
					<onleft condition="!Control.IsVisible(6002)">SetProperty(MediaMenu,True,home)</onleft>
					<onleft condition="!Control.IsVisible(6002)">SetFocus(9050)</onleft>
					<onright condition="Container(50).HasNext | Container(50).HasPrevious">500</onright>
					<onright condition="!Container(50).HasNext + !Container(50).HasPrevious + [[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">500</onright>
					<onright condition="!Container(50).HasNext + !Container(50).HasPrevious">9000</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<oninfo condition="$EXP[PluginAdvancedLauncher] + System.HasAddon(script.toolbox)">RunScript(script.toolbox,info=textviewer,header='"$INFO[ListItem.Label]"',text='"$VAR[AdvancedLauncherPlotVar]"')</oninfo>
					<viewtype label="535">list</viewtype>
					<pagecontrol>500</pagecontrol>
					<preloaditems>2</preloaditems>
					<scrolltime tween="quadratic" easing="out">200</scrolltime>
					<itemlayout condition="[Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(AddonBrowser.xml)]" height="240" width="218">
						<control type="image">
							<aspectratio>keep</aspectratio>
							<texture background="true">$VAR[ListThumbVar]</texture>
						</control>
					</itemlayout>
					<focusedlayout condition="[Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(AddonBrowser.xml)]" height="240" width="218">
						<control type="group">
							<include>SquareIconBG</include>
							<animation effect="fade" start="100" end="60" time="800" tween="quadratic" easing="out" condition="Skin.HasSetting(Enable.Pulse.Focus)" loop="true" center="auto" reversible="true">Conditional</animation>

						</control>
						<control type="image">
							<aspectratio>keep</aspectratio>
							<texture background="true">$VAR[ListThumbVar]</texture>
						</control>
					</focusedlayout>
				</control>
			</control>
			<control type="group">
				<visible>!Window.IsActive(movieinformation)</visible>
				<visible>String.IsEqual(Container.SortMethod, title)</visible>
				<top>0</top>
				<left>0</left>
				<include>Furniture_AlphabetVertical</include>
			</control>
			<control type="group">
				<top>0</top>
				<control type="group">
					<visible>!String.IsEmpty(Container.Content)</visible>
					<control type="image">
						<visible>String.IsEmpty(Window(Home).Property(WideToggle))</visible>
						<visible>Skin.HasSetting(Enable.WideList.Misc) | ![Container.Content(episodes) | Container.Content(files) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos) | String.IsEqual(ListItem.DBTYPE, episode)]</visible>
						<left>1800</left>
						<width>120</width>
						<height>960</height>
						<aspectratio align="right" aligny="top">scale</aspectratio>
						<texture background="true" colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Window(Home).Property(WideToggle))</visible>
						<visible>Skin.HasSetting(Enable.WideList.Misc) | ![Container.Content(episodes) | Container.Content(files) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos) | String.IsEqual(ListItem.DBTYPE, episode)]</visible>
						<left>1800</left>
						<width>120</width>
						<height>960</height>
						<aspectratio align="left" aligny="top">scale</aspectratio>
						<texture background="true" colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<animation effect="slide" end="760" time="0" condition="[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]">Conditional</animation>
						<visible>!String.IsEqual(ListItem.DBTYPE, episode)</visible>
						<visible>!Container.Content(files)</visible>
						<visible>!Container.Content(episodes) | !String.IsEmpty(Window(Home).Property(WideToggle))</visible>
						<visible>![Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos)]</visible>
						<left>1160</left>
						<width>640</width>
						<height>960</height>
						<aspectratio align="center" aligny="top">scale</aspectratio>
						<texture background="true">$VAR[ListIcon]</texture>
						<fadetime>400</fadetime>
					</control>
				</control>
				<control type="group">
					<animation effect="slide" end="760" time="0" condition="[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]">Conditional</animation>
					<visible>!String.IsEqual(ListItem.DBTYPE, episode)</visible>
					<visible>!Container.Content(episodes)</visible>
					<visible>![Container.Content(movies) | Container.Content(movie)] + [Window.IsActive(musicplaylist) | Container.Content(files) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos) | String.IsEmpty(Container.Content)]</visible>
					<top>200</top>
					<left>1260</left>
					<control type="image">
						<top>-200</top>
						<left>-100</left>
						<width>760</width>
						<height>960</height>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" colordiffuse="$VAR[ListColorHighlightVar]">$VAR[FocusImage]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>520</width>
						<height>520</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true">$VAR[ListIcon]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo))</visible>
						<top>550</top>
						<width>560</width>
						<height>200</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo)]</texture>
					</control>
					<control type="textbox">
						<top>-190</top>
						<width>560</width>
						<height>200</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>BigAssFont</font>
						<label>$VAR[SquareLine]</label>
						<scrolltime>200</scrolltime>
						<autoscroll delay="3000" time="1000" repeat="1000">true</autoscroll>
					</control>
				</control>
				<control type="grouplist">
					<top>760</top>
					<left>1160</left>
					<itemgap>0</itemgap>
					<visible>![Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] + [Window.IsActive(musicplaylist) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(musicvideos)] + !String.StartsWith(ListItem.Icon,Default)</visible>
					<!--
					<control type="label">
						<visible>Container.Content(songs)</visible>
						<width>760</width>
						<height>200</height>
						<align>center</align>
						<font>font15_textbox</font>
						<label>$INFO[ListItem.Album,[B],[/B]]$INFO[ListItem.Year,[CR]]</label>
					</control>
					-->
					<control type="textbox">
						<visible>Container.Content(musicvideos)</visible>
						<description>Description</description>
						<width>760</width>
						<height>200</height>
						<align>center</align>
						<font>font15_textbox</font>
						<label>$INFO[ListItem.Plot,[B],[/B]]</label>
						<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					</control>
					<!--
					<control type="textbox">
						<visible>Container.Content(artists) | Container.Content(albums)</visible>
						<label>$VAR[MusicPlotVar,[B],[/B]]</label>
						<width>760</width>
						<height>200</height>
						<align>center</align>
						<font>font15_textbox</font>
						<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					</control>
					<control type="textbox">
						<visible>!String.IsEmpty(ListItem.AddonDescription)</visible>
						<description>Description</description>
						<width>760</width>
						<height>200</height>
						<font>font15_textbox</font>
						<align>center</align>
						<label>$INFO[ListItem.AddonDescription,[B],[/B]]</label>
						<autoscroll time="2000" delay="2000" repeat="1000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					</control>
					-->
				</control>
				<control type="group">
					<left>1160</left>
					<width>760</width>
					<visible>[!Skin.HasSetting(Enable.WideList.Misc) + [Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE, episode)]] | [Window.IsActive(movieinformation) + Container.Content(episode) + !String.StartsWith(ListItem.Icon,Default)]</visible>
					<control type="image">
						<height>428</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true">$VAR[LandscapeArtVar]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<top>438</top>
						<bottom>120</bottom>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<fadetime>400</fadetime>
						<texture background="true" colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
					</control>
					<control type="scrollbar" id="161">
						<top>428</top>
						<height>10</height>
						<orientation>horizontal</orientation>
						<showonepage>true</showonepage>
					</control>
				</control>
			</control>
			<control type="group">
				<animation effect="slide" time="0" delay="0" start="0" end="640" tween="cubic" reversible="true" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] | [[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">Conditional</animation>
				<animation effect="slide" time="0" delay="0" start="0" end="770" tween="cubic" reversible="true" condition="!String.IsEmpty(Window(Home).Property(WideToggle))">Conditional</animation>
				<animation effect="slide" time="0" delay="0" start="0" end="120" tween="cubic" reversible="true" condition="!String.IsEmpty(Window(Home).Property(WideToggle)) + [Container.Content(addons) | Container.Content(files) | Container.Content() | Container.Content(genres)]">Conditional</animation>
				<visible>![Window.IsActive(movieinformation) + [Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE, episode)]]</visible>
				<visible>Control.IsVisible(50)</visible>
				<include>Scrollbar_Vertical_50</include>
			</control>
		</control>
		<control type="group" id="51">
			<visible>!String.IsEmpty(Window(Home).Property(WideToggle))</visible>
			<animation effect="fade" start="0" end="100" time="400" delay="400" tween="quadratic" easing="out">Visible</animation>
			<animation effect="fade" start="0" end="0" time="0" tween="quadratic" easing="out">Hidden</animation>
			<animation effect="slide" start="400,0" end="0,0" time="400" tween="quadratic" easing="out" condition="String.IsEmpty(Window(home).Property(MediaMenu))">Conditional</animation>
			<include>Animation.Common</include>
			<left>770</left>
			<top>0</top>
			<width>1920</width>
			<height>960</height>
			<control type="textbox">
				<visible>!Window.IsVisible(MyMusicNav.xml) + String.IsEmpty(ListItem.AddonDescription)</visible>
				<description>Plot</description>
				<left>30</left>
				<top>20</top>
				<width>1090</width>
				<height>480</height>
				<font>font_SubMenu</font>
				<label>$VAR[VideoInfoPlotVar]</label>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<control type="textbox">
				<visible>!String.IsEmpty(ListItem.AddonDescription)</visible>
				<description>Plot</description>
				<left>150</left>
				<top>20</top>
				<width>970</width>
				<height>920</height>
				<font>font_SubMenu</font>
				<label>$INFO[ListItem.AddonDescription,[B],[/B]]</label>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<control type="textbox">
				<visible>Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2))</visible>
				<description>Plot</description>
				<left>150</left>
				<top>20</top>
				<width>970</width>
				<height>480</height>
				<font>font_SubMenu</font>
				<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2),[B],[/B]]</label>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<!--<control type="image"><left>0</left><top>0</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(-2).Art(poster)]</texture><fadetime>400</fadetime></control><control type="image"><left>0</left><top>192</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(-1).Art(poster)]</texture><fadetime>400</fadetime></control><control type="image"><left>328</left><top>384</top><width>495</width><height>192</height><align>right</align><aspectratio align="center" aligny="center">stretch</aspectratio><texture background="true">$INFO[Window(Home).Property(filter_logo.ImageFilterNINE)]</texture><fadetime>400</fadetime></control>-->
			<control type="image">
				<visible>Skin.HasSetting(Text.Shadow.Enable)</visible>
				<left>166</left>
				<top>582</top>
				<width>990</width>
				<height>384</height>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>
				<texture background="true" diffuse="shadowmask.png">$VAR[LogosArt]</texture>
				<colordiffuse>ff000000</colordiffuse>
				<fadetime>400</fadetime>
			</control>
			<control type="image">
				<left>160</left>
				<top>576</top>
				<width>990</width>
				<height>384</height>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>
				<texture background="true">$VAR[LogosArt]</texture>
				<fadetime>400</fadetime>
			</control>
			<!--<control type="image"><left>0</left><top>576</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(1).Art(poster)]</texture><fadetime>400</fadetime></control><control type="image"><left>0</left><top>768</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(2).Art(poster)]</texture><fadetime>400</fadetime></control>-->
		</control>
	</include>
	<include name="View_50_List">
		<control type="group">
			<animation effect="slide" end="-1860" time="400" condition="[!String.IsEmpty(Window(Home).Property(WideToggle))] + [[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">Conditional</animation>
			<animation effect="slide" start="400,0" end="0,0" time="400" tween="quadratic" easing="out" condition="String.IsEmpty(Window(home).Property(MediaMenu))">Conditional</animation>
			
			<include>Animation.Common</include>
			<control type="image">
				<fadetime>400</fadetime>
				<left>-580</left>
				<width>640</width>
				<height>960</height>
				<aspectratio align="left" aligny="top">scale</aspectratio>
				<texture background="true" colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
			</control>
			<control type="group">
				<animation effect="fade" start="100" end="0" time="400" tween="quadratic" easing="out" condition="Window.IsActive(filebrowser)">Conditional</animation>
				<visible>Control.IsVisible(50) + !Window.IsActive(movieinformation) + !Window.IsActive(musicinformation) + !Window.IsVisible(songinformation)</visible>
				<left>0</left>
				<top>0</top>
				<control type="panel" id="50">
					<width>1790</width>
					<height>960</height>
					<onleft condition="String.IsEmpty(Window(Home).Property(WideToggle)) + Control.IsVisible(6002)">6002</onleft>
					<onleft condition="String.IsEmpty(Window(Home).Property(WideToggle)) + !Control.IsVisible(6002)">SetProperty(MediaMenu,True,home)</onleft>
					<onleft condition="String.IsEmpty(Window(Home).Property(WideToggle)) + !Control.IsVisible(6002)">SetFocus(9050)</onleft>
					<onleft condition="!String.IsEmpty(Window(Home).Property(WideToggle))">ClearProperty(WideToggle,home)</onleft>
					<onright condition="Container(50).HasNext | Container(50).HasPrevious">500</onright>
					<onright condition="!Container(50).HasNext + !Container(50).HasPrevious + [[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">500</onright>
					<onright condition="!Container(50).HasNext + !Container(50).HasPrevious">9000</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<oninfo condition="$EXP[PluginAdvancedLauncher] + System.HasAddon(script.toolbox)">RunScript(script.toolbox,info=textviewer,header='"$INFO[ListItem.Label]"',text='"$VAR[AdvancedLauncherPlotVar]"')</oninfo>
					<viewtype label="535">list</viewtype>
					<pagecontrol>500</pagecontrol>
					<preloaditems>2</preloaditems>
					<scrolltime tween="quadratic" easing="out">200</scrolltime>
					<itemlayout height="120" width="1150" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + ![[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<include>ParentItem</include>
						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>120</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying</visible>
							<left>120</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label></label>
						</control>
						<control type="label">
							<left>120</left>
							<top>3</top>
							<width>790</width>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>170</left>
							<top>3</top>
							<width>755</width>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>120</left>
							<top>52</top>
							<width>790</width>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<left>60</left>
							<width>1060</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$INFO[ListItem.Label2]</label>
							<visible>Container.Content(addons) | Container.Content(songs)</visible>
						</control>
						<control type="label">
							<width>1050</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
						</control>
						<control type="image">
							<left>1079</left>
							<top>26</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<left>1081</left>
							<top>28</top>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</itemlayout>
					<focusedlayout height="120" width="1150" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + ![[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<control type="image">
							<animation effect="fade" start="100" end="60" time="800" tween="quadratic" easing="out" condition="Skin.HasSetting(Enable.Pulse.Focus)" loop="true" center="auto" reversible="true">Conditional</animation>
							<left>60</left>
							<texture colordiffuse="$VAR[50ListColorHighlightVar]">listselect_fo.png</texture>
						</control>
						<include>ParentItem</include>
						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>120</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying</visible>
							<left>90</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label></label>
						</control>
						<control type="label">
							<top>3</top>
							<left>90</left>
							<width>790</width>
							<height>70</height>
							<font>font30</font>
							<scroll>true</scroll>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<top>3</top>
							<left>140</left>
							<width>755</width>
							<height>70</height>
							<font>font30</font>
							<scroll>true</scroll>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>90</left>
							<top>52</top>
							<width>790</width>
							<height>60</height>
							<scroll>true</scroll>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<left>60</left>
							<width>1060</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<scroll>true</scroll>
							<label>$INFO[ListItem.Label2]</label>
							<visible>Container.Content(addons) | Container.Content(songs)</visible>
						</control>
						<control type="label">
							<width>1050</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
						</control>
						<control type="image">
							<left>1079</left>
							<top>26</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<left>1081</left>
							<top>28</top>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</focusedlayout>
					<itemlayout height="120" width="1790" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<include>ParentItem</include>
						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>120</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying</visible>
							<left>120</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label></label>
						</control>
						<control type="label">
							<left>120</left>
							<top>3</top>
							<width>1380</width>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>170</left>
							<top>3</top>
							<width>1345</width>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>120</left>
							<top>52</top>
							<width>1380</width>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<width>1760</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$INFO[ListItem.Label2]</label>
							<visible>Container.Content(addons) | Container.Content(songs)</visible>
						</control>
						<control type="label">
							<width>1690</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
						</control>
						<control type="image">
							<left>1719</left>
							<top>26</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<left>1721</left>
							<top>28</top>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</itemlayout>
					<focusedlayout height="120" width="1790" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<control type="image">
							<animation effect="fade" start="100" end="60" time="800" tween="quadratic" easing="out" condition="Skin.HasSetting(Enable.Pulse.Focus)" loop="true" center="auto" reversible="true">Conditional</animation>
							<left>60</left>
							<texture colordiffuse="$VAR[50ListColorHighlightVar]">listselect_fo.png</texture>
						</control>
						<include>ParentItem</include>
						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>120</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying</visible>
							<left>90</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label></label>
						</control>
						<control type="label">
							<top>3</top>
							<left>90</left>
							<width>1380</width>
							<height>70</height>
							<font>font30</font>
							<scroll>true</scroll>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<top>3</top>
							<left>140</left>
							<width>1345</width>
							<height>70</height>
							<font>font30</font>
							<scroll>true</scroll>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!String.IsEqual(ListItem.Label, ..)</visible>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>90</left>
							<top>52</top>
							<width>1380</width>
							<height>60</height>
							<scroll>true</scroll>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<width>1760</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<scroll>true</scroll>
							<label>$INFO[ListItem.Label2]</label>
							<visible>Container.Content(addons) | Container.Content(songs)</visible>
						</control>
						<control type="label">
							<width>1690</width>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
						</control>
						<control type="image">
							<left>1719</left>
							<top>26</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<left>1721</left>
							<top>28</top>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</focusedlayout>
					<itemlayout height="60" width="1150" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + ![[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<include>ParentItem</include>
						<control type="group">
							<left>100</left>
							<control type="label">
								<visible>ListItem.IsPlaying</visible>
								<left>20</left>
								<width>35</width>
								<height>60</height>
								<font>IconTiny</font>
								<label></label>
							</control>
							<control type="label">
								<left>20</left>
								<width>895</width>
								<height>60</height>
								<font>font15</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>!ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<left>55</left>
								<width>860</width>
								<height>60</height>
								<font>font15</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<width>1020</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<label>$INFO[ListItem.Label2]</label>
								<visible>Container.Content(addons) | Container.Content(songs)</visible>
							</control>
							<control type="label">
								<width>950</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
							</control>
						</control>
						<control type="image">
							<left>1079</left>
							<top>-4</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<top>-2</top>
							<left>1081</left>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</itemlayout>
					<focusedlayout height="60" width="1150" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + ![[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<control type="image">
							<animation effect="fade" start="100" end="60" time="800" tween="quadratic" easing="out" condition="Skin.HasSetting(Enable.Pulse.Focus)" loop="true" center="auto" reversible="true">Conditional</animation>
							<left>60</left>
							<texture colordiffuse="$VAR[50ListColorHighlightVar]">listselect_fo.png</texture>
						</control>
						<include>ParentItem</include>
						<control type="group">
							<left>100</left>
							<control type="label">
								<left>-10</left>
								<top>1</top>
								<width>35</width>
								<height>60</height>
								<font>IconTiny</font>
								<label></label>
								<visible>ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<left>-10</left>
								<width>895</width>
								<height>60</height>
								<font>font15</font>
								<scroll>true</scroll>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>!ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<left>25</left>
								<width>860</width>
								<height>60</height>
								<font>font15</font>
								<scroll>true</scroll>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<width>1020</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<scroll>true</scroll>
								<label>$INFO[ListItem.Label2]</label>
								<visible>Container.Content(addons) | Container.Content(songs)</visible>
							</control>
							<control type="label">
								<width>950</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
							</control>
						</control>
						<control type="image">
							<left>1079</left>
							<top>-4</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<top>-2</top>
							<left>1081</left>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</focusedlayout>
					<itemlayout height="60" width="1790" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<include>ParentItem</include>
						<control type="group">
							<left>100</left>
							<control type="label">
								<visible>ListItem.IsPlaying</visible>
								<left>20</left>
								<width>35</width>
								<height>60</height>
								<font>IconTiny</font>
								<label></label>
							</control>
							<control type="label">
								<left>20</left>
								<width>1485</width>
								<height>60</height>
								<font>font15</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>!ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<left>55</left>
								<width>1450</width>
								<height>60</height>
								<font>font15</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<width>1660</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<label>$INFO[ListItem.Label2]</label>
								<visible>Container.Content(addons) | Container.Content(songs)</visible>
							</control>
							<control type="label">
								<width>1590</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
							</control>
						</control>
						<control type="image">
							<left>1719</left>
							<top>-4</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<top>-2</top>
							<left>1721</left>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</itemlayout>
					<focusedlayout height="60" width="1790" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">
						<include>ListTextBG</include>
						<!--<control type="button"><onfocus>SetProperty(NINE_manual_set,"info=pixelrandom,id=$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo)],prefix=filter_logo",home)</onfocus><texturefocus></texturefocus></control>-->
						<control type="image">
							<animation effect="fade" start="100" end="60" time="800" tween="quadratic" easing="out" condition="Skin.HasSetting(Enable.Pulse.Focus)" loop="true" center="auto" reversible="true">Conditional</animation>
							<left>60</left>
							<texture colordiffuse="$VAR[50ListColorHighlightVar]">listselect_fo.png</texture>
						</control>
						<include>ParentItem</include>
						<control type="group">
							<left>100</left>
							<control type="label">
								<visible>ListItem.IsPlaying</visible>
								<left>-10</left>
								<top>1</top>
								<width>35</width>
								<height>60</height>
								<font>IconTiny</font>
								<label></label>
							</control>
							<control type="label">
								<left>-10</left>
								<width>1485</width>
								<height>60</height>
								<font>font15</font>
								<scroll>true</scroll>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>!ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<left>25</left>
								<width>1850</width>
								<height>60</height>
								<font>font15</font>
								<scroll>true</scroll>
								<label>$INFO[ListItem.Label]</label>
								<visible>!String.IsEqual(ListItem.Label, ..)</visible>
								<visible>ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<width>1660</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<scroll>true</scroll>
								<label>$INFO[ListItem.Label2]</label>
								<visible>Container.Content(addons) | Container.Content(songs)</visible>
							</control>
							<control type="label">
								<width>1590</width>
								<height>60</height>
								<font>font15</font>
								<align>right</align>
								<label>$VAR[ContentStats]</label>
							<visible>![Container.Content(addons) | Container.Content(songs)]</visible>
							</control>
						</control>
						<control type="image">
							<left>1719</left>
							<top>-4</top>
							<width>68</width>
							<height>68</height>
							<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
						<control type="image">
							<top>-2</top>
							<left>1721</left>
							<width>64</width>
							<height>64</height>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[OverlayVar]</texture>
							<visible>!String.IsEmpty(ListItem.Overlay)</visible>
						</control>
					</focusedlayout>
				</control>
				<animation effect="slide" end="0,-60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,15) + Integer.IsGreater(Container(50).NumItems,0) + Container.HasParent">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,1)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,2)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,3)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,4)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,5)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,6)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,7)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,8)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,9)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,10)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,11)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,12)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,13)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,14)">Conditional</animation>
				<animation effect="slide" end="0,60" time="300" condition="[[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,15)">Conditional</animation>
				<animation effect="slide" end="0,-120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,7) + Integer.IsGreater(Container(50).NumItems,0) + Container.HasParent">Conditional</animation>
				<animation effect="slide" end="0,120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,1)">Conditional</animation>
				<animation effect="slide" end="0,120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,2)">Conditional</animation>
				<animation effect="slide" end="0,120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,3)">Conditional</animation>
				<animation effect="slide" end="0,120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,4)">Conditional</animation>
				<animation effect="slide" end="0,120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,5)">Conditional</animation>
				<animation effect="slide" end="0,120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,6)">Conditional</animation>
				<animation effect="slide" end="0,120" time="300" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + !Integer.IsGreater(Container(50).NumItems,7)">Conditional</animation>
			</control>
			<control type="group">
				<visible>!Window.IsActive(movieinformation)</visible>
				<visible>String.IsEqual(Container.SortMethod, title)</visible>
				<top>0</top>
				<left>0</left>
				<include>Furniture_AlphabetVertical</include>
			</control>
			<control type="group">
				<top>0</top>
				<control type="group">
					<visible>!String.IsEmpty(Container.Content)</visible>
					<control type="image">
						<visible>String.IsEmpty(Window(Home).Property(WideToggle))</visible>
						<visible>Skin.HasSetting(Enable.WideList.Misc) | ![Container.Content(episodes) | Container.Content(files) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos) | String.IsEqual(ListItem.DBTYPE, episode)]</visible>
						<left>1800</left>
						<width>120</width>
						<height>960</height>
						<aspectratio align="right" aligny="top">scale</aspectratio>
						<texture background="true" colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Window(Home).Property(WideToggle))</visible>
						<visible>Skin.HasSetting(Enable.WideList.Misc) | ![Container.Content(episodes) | Container.Content(files) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos) | String.IsEqual(ListItem.DBTYPE, episode)]</visible>
						<animation effect="slide" start="-400,0" end="0,0" time="400" tween="quadratic" easing="out" condition="String.IsEmpty(Window(home).Property(MediaMenu))">Conditional</animation>
						<left>1860</left>
						<width>60</width>
						<height>960</height>
						<aspectratio align="left" aligny="top">scale</aspectratio>
						<texture background="true" colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<animation effect="slide" end="760" time="0" condition="[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]">Conditional</animation>
						<visible>!String.IsEqual(ListItem.DBTYPE, episode)</visible>
						<visible>!Container.Content(files)</visible>
						<visible>!Container.Content(episodes) | !String.IsEmpty(Window(Home).Property(WideToggle))</visible>
						<visible>![Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos)]</visible>
						<left>1160</left>
						<width>640</width>
						<height>960</height>
						<aspectratio align="center" aligny="top">scale</aspectratio>
						<texture background="true">$VAR[ListIcon]</texture>
						<fadetime>400</fadetime>
					</control>
				</control>
				<control type="group">
					<visible>[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE, episode)]</visible>
					<control type="image">
						<left>1920</left>
						<width>640</width>
						<height>960</height>
						<aspectratio align="center" aligny="top">scale</aspectratio>
						<texture background="true">$INFO[Container.Art(season.poster)]</texture>
						<fadetime>400</fadetime>
					</control>
				</control>
				<control type="group">
					<animation effect="slide" end="760" time="0" condition="[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]">Conditional</animation>
					<visible>!String.IsEqual(ListItem.DBTYPE, episode)</visible>
					<visible>!Container.Content(episodes)</visible>
					<visible>![Container.Content(movies) | Container.Content(movie)] + [Window.IsActive(musicplaylist) | Container.Content(files) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(genres) | Container.Content(countries) | Container.Content(musicvideos) | String.IsEmpty(Container.Content)]</visible>
					<top>200</top>
					<left>1260</left>
					<control type="image">
						<top>-200</top>
						<left>-100</left>
						<width>760</width>
						<height>960</height>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" colordiffuse="$VAR[ListColorHighlightVar]">$VAR[FocusImage]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>520</width>
						<height>520</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true">$VAR[ListIcon]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<top>560</top>
						<width>560</width>
						<height>200</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo)]</texture>
					</control>
				</control>
				<control type="grouplist">
					<top>760</top>
					<left>1160</left>
					<itemgap>0</itemgap>
					<visible>![Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] + [Window.IsActive(musicplaylist) | Container.Content(addons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(musicvideos)] + !String.StartsWith(ListItem.Icon,Default)</visible>
					<!--
					<control type="label">
						<visible>Container.Content(songs)</visible>
						<width>760</width>
						<height>200</height>
						<align>center</align>
						<font>font15_textbox</font>
						<label>$INFO[ListItem.Album,[B],[/B]]$INFO[ListItem.Year,[CR]]</label>
					</control>
					-->
					<control type="textbox">
						<visible>Container.Content(musicvideos)</visible>
						<description>Description</description>
						<width>760</width>
						<height>200</height>
						<align>center</align>
						<font>font15_textbox</font>
						<label>$INFO[ListItem.Plot,[B],[/B]]</label>
						<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					</control>
					<!--
					<control type="textbox">
						<visible>Container.Content(artists) | Container.Content(albums)</visible>
						<label>$VAR[MusicPlotVar,[B],[/B]]</label>
						<width>760</width>
						<height>200</height>
						<align>center</align>
						<font>font15_textbox</font>
						<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					</control>
					<control type="textbox">
						<visible>!String.IsEmpty(ListItem.AddonDescription)</visible>
						<description>Description</description>
						<width>760</width>
						<height>200</height>
						<font>font15_textbox</font>
						<align>center</align>
						<label>$INFO[ListItem.AddonDescription,[B],[/B]]</label>
						<autoscroll time="2000" delay="2000" repeat="1000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					</control>
					-->
				</control>
				<control type="group">
					<left>1160</left>
					<width>760</width>
					<visible>[!Skin.HasSetting(Enable.WideList.Misc) + [Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE, episode)]] | [Window.IsActive(movieinformation) + Container.Content(episode) + !String.StartsWith(ListItem.Icon,Default)]</visible>
					<control type="image">
						<height>428</height>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true">$VAR[FocusImage]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<height>428</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true">$VAR[LandscapeArtVar]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<top>438</top>
						<bottom>120</bottom>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<fadetime>400</fadetime>
						<texture background="true" colordiffuse="$VAR[ListColorHighlightVar]">$VAR[FocusImage]</texture>
					</control>
					<control type="textbox">
						<visible>!Window.IsActive(songinformation) + !Window.IsActive(musicinformation) + !Window.IsActive(movieinformation) + !Window.IsActive(DialogVideoInfo.xml) + !Window.IsActive(script-skinshortcuts.xml)</visible>
						<visible>Skin.HasSetting(Show.Plot.TV)</visible>
						<description>Plot</description>
						<top>438</top>
						<left>10</left>
						<width>740</width>
						<height>522</height>
						<font>font1450</font>
						<label>$VAR[VideoInfoPlotVar]</label>
						<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					</control>
					<control type="scrollbar" id="161">
						<top>428</top>
						<height>10</height>
						<orientation>horizontal</orientation>
						<showonepage>true</showonepage>
					</control>
				</control>
			</control>
			<control type="group">
				<animation effect="slide" time="0" delay="0" start="0" end="640" tween="cubic" reversible="true" condition="![[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] | [[Skin.HasSetting(Enable.SlimList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.SlimList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]] + [[Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]]]">Conditional</animation>
				<animation effect="slide" time="0" delay="0" start="0" end="770" tween="cubic" reversible="true" condition="!String.IsEmpty(Window(Home).Property(WideToggle))">Conditional</animation>
				<animation effect="slide" time="0" delay="0" start="0" end="120" tween="cubic" reversible="true" condition="!String.IsEmpty(Window(Home).Property(WideToggle)) + [Container.Content(addons) | Container.Content(files) | Container.Content() | Container.Content(genres)]">Conditional</animation>
				<visible>![Window.IsActive(movieinformation) + [Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE, episode)]]</visible>
				<visible>Control.IsVisible(50)</visible>
				<include>Scrollbar_Vertical_50</include>
			</control>
		</control>
		<control type="group" id="51">
			<visible>Control.IsVisible(50) + !Window.IsActive(movieinformation) + !Window.IsActive(musicinformation) + !Window.IsVisible(songinformation) + !ListItem.IsParentFolder</visible>
			<visible>!String.IsEmpty(Window(Home).Property(WideToggle))</visible>
			<animation effect="fade" start="0" end="100" time="400" delay="400" tween="quadratic" easing="out">Visible</animation>
			<animation effect="fade" start="0" end="0" time="0" tween="quadratic" easing="out">Hidden</animation>
			<animation effect="slide" start="400,0" end="0,0" time="400" tween="quadratic" easing="out" condition="String.IsEmpty(Window(home).Property(MediaMenu))">Conditional</animation>
			<include>Animation.Common</include>
			<left>770</left>
			<top>0</top>
			<width>1920</width>
			<height>960</height>
			<control type="textbox">
				<visible>!Window.IsVisible(MyMusicNav.xml) + String.IsEmpty(ListItem.AddonDescription)</visible>
				<description>Plot</description>
				<left>-24</left>
				<top>26</top>
				<width>1090</width>
				<height>480</height>
				<font>font_SubMenu</font>
				<label>$VAR[VideoInfoPlotVar]</label>
				<textcolor>$INFO[Skin.String(Text.Shadow.Colour)]</textcolor>
				<shadowcolor></shadowcolor>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<control type="textbox">
				<visible>!String.IsEmpty(ListItem.AddonDescription)</visible>
				<description>Plot</description>
				<left>96</left>
				<top>26</top>
				<width>940</width>
				<height>920</height>
				<font>font_SubMenu</font>
				<label>$INFO[ListItem.AddonDescription]</label>
				<textcolor>$INFO[Skin.String(Text.Shadow.Colour)]</textcolor>
				<shadowcolor></shadowcolor>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<control type="textbox">
				<visible>Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2))</visible>
				<description>Plot</description>
				<left>96</left>
				<top>26</top>
				<width>940</width>
				<height>480</height>
				<font>font_SubMenu</font>
				<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2)]</label>
				<textcolor>$INFO[Skin.String(Text.Shadow.Colour)]</textcolor>
				<shadowcolor></shadowcolor>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<control type="textbox">
				<visible>!Window.IsVisible(MyMusicNav.xml) + String.IsEmpty(ListItem.AddonDescription)</visible>
				<description>Plot</description>
				<left>-30</left>
				<top>20</top>
				<width>1090</width>
				<height>480</height>
				<font>font_SubMenu</font>
				<label>$VAR[VideoInfoPlotVar]</label>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<control type="textbox">
				<visible>!String.IsEmpty(ListItem.AddonDescription)</visible>
				<description>Plot</description>
				<left>90</left>
				<top>20</top>
				<width>940</width>
				<height>920</height>
				<font>font_SubMenu</font>
				<label>$INFO[ListItem.AddonDescription]</label>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<control type="textbox">
				<visible>Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2))</visible>
				<description>Plot</description>
				<left>90</left>
				<top>20</top>
				<width>940</width>
				<height>480</height>
				<font>font_SubMenu</font>
				<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2)]</label>
				<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
			</control>
			<!--<control type="image"><left>0</left><top>0</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(-2).Art(poster)]</texture><fadetime>400</fadetime></control><control type="image"><left>0</left><top>192</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(-1).Art(poster)]</texture><fadetime>400</fadetime></control><control type="image"><left>328</left><top>384</top><width>495</width><height>192</height><align>right</align><aspectratio align="center" aligny="center">stretch</aspectratio><texture background="true">$INFO[Window(Home).Property(filter_logo.ImageFilterNINE)]</texture><fadetime>400</fadetime></control>-->
			<control type="image">
				<visible>Skin.HasSetting(Text.Shadow.Enable)</visible>
				<left>166</left>
				<top>582</top>
				<width>990</width>
				<height>384</height>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>
				<texture background="true" diffuse="shadowmask.png">$VAR[LogosArt]</texture>
				<colordiffuse>ff000000</colordiffuse>
				<fadetime>400</fadetime>
			</control>
			<control type="image">
				<left>160</left>
				<top>576</top>
				<width>990</width>
				<height>384</height>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>
				<texture background="true">$VAR[LogosArt]</texture>
				<fadetime>400</fadetime>
			</control>
			<!--<control type="image"><left>0</left><top>576</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(1).Art(poster)]</texture><fadetime>400</fadetime></control><control type="image"><left>0</left><top>768</top><width>120</width><height>192</height><aspectratio align="center" aligny="center">scale</aspectratio><texture background="true">$INFO[Container(50).ListItem(2).Art(poster)]</texture><fadetime>400</fadetime></control>-->
		</control>
	</include>
	<!-- Song -->
	<include name="View_508_SongList">
		<control type="group">
			<visible>Control.IsVisible(508) + !Window.IsActive(movieinformation) + !Window.IsActive(musicinformation) + !Window.IsVisible(songinformation)</visible>
			<include>Animation.Common</include>
			<control type="group">
				<left>0</left>
				<top>0</top>
				<control type="fixedlist" id="508">
					<width>1790</width>
					<height>960</height>
					<orientation>vertical</orientation>
					<movement>2</movement>
					<focusposition>3</focusposition>
					<onleft>SetProperty(MediaMenu,True,home)</onleft>
					<onleft>SetFocus(9050)</onleft>
					<onright condition="Control.IsVisible(60)">60</onright>
					<onup>508</onup>
					<ondown>508</ondown>
					<pagecontrol>60</pagecontrol>
					<viewtype label="31076">list</viewtype>
					<scrolltime tween="sine" easing="inout">500</scrolltime>
					<itemlayout height="100" width="1300">
						<control type="label">
							<top>15</top>
							<left>275</left>
							<width>1000</width>
							<height>70</height>
							<font>font30</font>
							<label>$INFO[ListItem.TrackNumber]. $INFO[ListItem.Title]</label>
						</control>
					</itemlayout>
					<focusedlayout height="275" width="1300">
						<control type="image">
							<animation effect="fade" start="100" end="60" time="800" tween="quadratic" easing="out" condition="Skin.HasSetting(Enable.Pulse.Focus)" loop="true" center="auto" reversible="true">Conditional</animation>
							<visible>Control.HasFocus(508)</visible>
							<width>1300</width>
							<height>275</height>
							<texture>listselect_fo.png</texture>
							<colordiffuse>$VAR[ListColorHighlightVar]</colordiffuse>
						</control>
						<control type="image">
							<left>15</left>
							<top>15</top>
							<width>245</width>
							<height>245</height>
							<aspectratio>scale</aspectratio>
							<texture background="true">$INFO[ListItem.Icon]</texture>
						</control>
						<control type="label">
							<left>275</left>
							<width>1000</width>
							<height>70</height>
							<font>font30</font>
							<label>$INFO[ListItem.TrackNumber]. $INFO[ListItem.Title]</label>
						</control>
						<control type="label">
							<left>275</left>
							<top>55</top>
							<width>990</width>
							<height>70</height>
							<font>font16_title</font>
							<label>$INFO[ListItem.Artist]</label>
						</control>
						<control type="label">
							<left>275</left>
							<top>105</top>
							<width>990</width>
							<height>70</height>
							<font>font16</font>
							<label>$INFO[ListItem.Album] $INFO[ListItem.Year,[,]]</label>
						</control>
						<control type="label">
							<left>275</left>
							<top>135</top>
							<width>990</width>
							<height>110</height>
							<font>font16</font>
							<label fallback="■■■">$INFO[ListItem.Duration]</label>
						</control>
						<control type="image">
							<left>175</left>
							<top>220</top>
							<width>400</width>
							<height>45</height>
							<aspectratio>keep</aspectratio>
							<texture colordiffuse="$VAR[ColorTextVar]">$VAR[StarRatingVar]</texture>
						</control>
						<control type="image">
							<left>1125</left>
							<top>185</top>
							<width>198</width>
							<include>MediaFlagVars</include>
							<texture colordiffuse="$VAR[ColorTextVar]">$INFO[ListItem.FileExtension,flags/audio/,.png]</texture>
						</control>
					</focusedlayout>
				</control>
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(508) + !Window.IsActive(addoninformation)</visible>
			<include>Scrollbar_Vertical</include>
		</control>
	</include>
</includes>