<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="Defaults.xml" />
	<include file="Includes_CommonValues.xml" />
	<include file="Includes_Backgrounds.xml" />
	<include file="Includes_Animations.xml" />
	<include file="Includes_Home.xml" />
	<include file="Includes_Menus.xml" />
	<include file="Includes_WidgetContent.xml" />
	<include file="Includes_HomeWidgets.xml" />
	<include file="Includes_Player.xml" />
	<include file="View_50_List.xml" />
	<include file="Variables.xml" />
	<include file="script-skinshortcuts-includes.xml" />
	<constant name="FanartCrossfadeTime">400</constant>
	<constant name="FullScreenWidth">1920</constant>
	<expression name="PluginAdvancedLauncher">String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher/)</expression>
	<expression name="PluginSuperFavourites">String.Contains(Container.FolderPath,plugin://plugin.program.super.favourites/)</expression>
	<expression name="isMovie">String.IsEqual(ListItem.DBTYPE,movie)</expression>
	<expression name="isTvshow">String.IsEqual(ListItem.DBTYPE,tvshow)</expression>
	<expression name="isSeason">String.IsEqual(ListItem.DBTYPE,season)</expression>
	<expression name="isEpisode">String.IsEqual(ListItem.DBTYPE,episode)</expression>
	<expression name="isMusicvideo">String.IsEqual(ListItem.DBTYPE,musicvideo)</expression>
	<expression name="isArtist">String.IsEqual(ListItem.DBTYPE,artist)</expression>
	<expression name="isAlbum">String.IsEqual(ListItem.DBTYPE,album)</expression>
	<expression name="isSong">String.IsEqual(ListItem.DBTYPE,song)</expression>
	<include name="Screen_Blockers_In">
		<include>FullscreenDimensions</include>
		<control type="group">
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>470</width>
				<height>250</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.zero),1)</visible>
			</control>
			<control type="image">
				<left>470</left>
				<top>0</top>
				<width>830</width>
				<height>830</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.one),1)</visible>
			</control>
			<control type="image">
				<left>1300</left>
				<top>0</top>
				<width>280</width>
				<height>830</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.two),1)</visible>
			</control>
			<control type="image">
				<left>1580</left>
				<top>0</top>
				<width>340</width>
				<height>955</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.three),1)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>250</top>
				<width>470</width>
				<height>830</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.four),1)</visible>
			</control>
			<control type="image">
				<left>470</left>
				<top>830</top>
				<width>250</width>
				<height>250</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.five),1)</visible>
			</control>
			<control type="image">
				<left>720</left>
				<top>830</top>
				<width>860</width>
				<height>125</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.six),1)</visible>
			</control>
			<control type="image">
				<left>720</left>
				<top>955</top>
				<width>1075</width>
				<height>125</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.seven),1)</visible>
			</control>
			<control type="image">
				<left>1795</left>
				<top>955</top>
				<width>125</width>
				<height>125</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.eight),1)</visible>
			</control>
			<!--
			<control type="image">
				<left>785</left>
				<top>200</top>
				<width>200</width>
				<height>200</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>String.IsEqual(Window(Home).Property(Colorbox_shuffle.nine),1)</visible>
			</control>
			-->
		</control>
	</include>
	<include name="Screen_Blockers_Out">
		<include>FullscreenDimensions</include>
		<control type="group">
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>470</width>
				<height>250</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.zero),1)</visible>
			</control>
			<control type="image">
				<left>470</left>
				<top>0</top>
				<width>830</width>
				<height>830</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.one),1)</visible>
			</control>
			<control type="image">
				<left>1300</left>
				<top>0</top>
				<width>280</width>
				<height>830</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.two),1)</visible>
			</control>
			<control type="image">
				<left>1580</left>
				<top>0</top>
				<width>340</width>
				<height>955</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.three),1)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>250</top>
				<width>470</width>
				<height>830</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.four),1)</visible>
			</control>
			<control type="image">
				<left>470</left>
				<top>830</top>
				<width>250</width>
				<height>250</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.five),1)</visible>
			</control>
			<control type="image">
				<left>720</left>
				<top>830</top>
				<width>860</width>
				<height>125</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.six),1)</visible>
			</control>
			<control type="image">
				<left>720</left>
				<top>955</top>
				<width>1075</width>
				<height>125</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.seven),1)</visible>
			</control>
			<control type="image">
				<left>1795</left>
				<top>955</top>
				<width>125</width>
				<height>125</height>
				<texture>black.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.eight),1)</visible>
			</control>
			<!--
			<control type="image">
				<left>785</left>
				<top>200</top>
				<width>200</width>
				<height>200</height>
				<texture>background.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<visible>!String.IsEqual(Window(Home).Property(Colorbox_shuffle.nine),1)</visible>
			</control>
			-->
		</control>
	</include>
	<include name="Furniture_AlphabetVertical">
		<control type="group" id="6000">
			<control type="image">
				<texture>common/box.png</texture>
				<colordiffuse>$VAR[ColorMenuVar]</colordiffuse>
				<width>60</width>
				<visible>Control.IsVisible(6002)</visible>
			</control>
			<control type="panel" id="6002">
				<width>60</width>
				<bottom>0</bottom>
				<height>100%</height>
				<onleft>SetProperty(MediaMenu,True,home)</onleft>
				<onleft>SetFocus(9050)</onleft>
				<onright>50</onright>
				<onup>6002</onup>
				<ondown>6002</ondown>
				<onback>50</onback>
				<orientation>vertical</orientation>
				<itemlayout height="35.55" width="60">
					<control type="label">
						<width>100%</width>
						<height>100%</height>
						<align>center</align>
						
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[ColorMenuVar]</textcolor>
						<font>topbar</font>
						<animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
					</control>
					<control type="label">
						<width>100%</width>
						<height>100%</height>
						<align>center</align>
						
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[MenuListColorHighlightVar]</textcolor>
						<font>topbar</font>
						<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
					</control>
				</itemlayout>
				<focusedlayout height="35.55" width="60">
					<control type="image">
						<texture>background.png</texture>
						<colordiffuse>$VAR[MenuListColorHighlightVar]</colordiffuse>
						<animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
						<visible>Control.HasFocus(6002)</visible>
					</control>
					<control type="label">
						<width>100%</width>
						<height>100%</height>
						<align>center</align>
						
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[MenuListColorHighlightVar]</textcolor>
						<animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
						<font>topbar</font>
					</control>
					<control type="button">
						<visible>false</visible>
						<onfocus condition="!String.IsEmpty(Container(6002).ListItem.Property(NotAvailable)) + Container(6002).OnNext">Control.Move(6002,1)</onfocus>
						<onfocus condition="!String.IsEmpty(Container(6002).ListItem.Property(NotAvailable)) + Container(6002).OnPrevious">Control.Move(6002,-1)</onfocus>
					</control>
				</focusedlayout>
				<content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
			</control>
		</control>
	</include>
	<include name="MenuHome3D">
		<!---->
		<control type="group">
			<animation effect="slide" time="0" start="0,0" end="0,-70" condition="Window.IsActive(home) + system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
			<width>1920</width>
			<control type="group" id="6101">
				<left>0</left>
				<top>700</top>
				<visible>Container(9000).OnNext</visible>
				<animation effect="slide" end="-200,0" time="200" reversible="false">Hidden</animation>
				<control type="group">
					<left>-200</left>
					<visible>Container(9000).OnNext</visible>
					<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
					<include>MenuShowCaseItem-7</include>
				</control>
				<control type="group">
					<left>0</left>
					<include>MenuShowCaseItem-6</include>
				</control>
				<control type="group">
					<left>200</left>
					<include>MenuShowCaseItem-5</include>
				</control>
				<control type="group">
					<left>400</left>
					<include>MenuShowCaseItem-4</include>
				</control>
				<control type="group">
					<left>600</left>
					<include>MenuShowCaseItem-3</include>
				</control>
				<control type="group">
					<left>800</left>
					<include>MenuShowCaseItem-2</include>
				</control>
				<control type="group">
					<left>1000</left>
					<control type="image">
						<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-1Var]</texture>
						<include>MenuShowcaseThumb</include>
					</control>
				</control>
				<control type="group">
					<left>1200</left>
					<control type="image">
						<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem0Var]</texture>
						<include>MenuShowcaseThumb</include>
					</control>
				</control>
				<control type="group">
					<visible>!Container(9000).OnNext</visible>
					<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
					<left>2400</left>
					<include>MenuShowCaseItem6</include>
				</control>
				<control type="group">
					<left>2200</left>
					<include>MenuShowCaseItem5</include>
				</control>
				<control type="group">
					<left>2000</left>
					<include>MenuShowCaseItem4</include>
				</control>
				<control type="group">
					<left>1800</left>
					<include>MenuShowCaseItem3</include>
				</control>
				<control type="group">
					<left>1600</left>
					<include>MenuShowCaseItem2</include>
				</control>
				<control type="group">
					<left>1400</left>
					<include>MenuShowCaseItem1</include>
				</control>
			</control>
			<control type="group" id="6102">
				<left>0</left>
				<top>700</top>
				<visible>Container(9000).OnPrevious</visible>
				<animation effect="slide" end="200,0" time="200" reversible="false">Hidden</animation>
				<control type="group">
					<left>2200</left>
					<visible>Container(9000).OnPrevious</visible>
					<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
					<include>MenuShowCaseItem7</include>
				</control>
				<control type="group">
					<left>2000</left>
					<include>MenuShowCaseItem6</include>
				</control>
				<control type="group">
					<left>1800</left>
					<include>MenuShowCaseItem5</include>
				</control>
				<control type="group">
					<left>1600</left>
					<include>MenuShowCaseItem4</include>
				</control>
				<control type="group">
					<left>1400</left>
					<include>MenuShowCaseItem3</include>
				</control>
				<control type="group">
					<left>1200</left>
					<include>MenuShowCaseItem2</include>
				</control>
				<control type="group">
					<visible>!Container(9000).OnPrevious</visible>
					<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
					<left>-400</left>
					<include>MenuShowCaseItem-6</include>
				</control>
				<control type="group">
					<left>-200</left>
					<include>MenuShowCaseItem-5</include>
				</control>
				<control type="group">
					<left>0</left>
					<include>MenuShowCaseItem-4</include>
				</control>
				<control type="group">
					<left>200</left>
					<include>MenuShowCaseItem-3</include>
				</control>
				<control type="group">
					<left>400</left>
					<include>MenuShowCaseItem-2</include>
				</control>
				<control type="group">
					<left>600</left>
					<include>MenuShowCaseItem-1</include>
				</control>
				<control type="group">
					<left>800</left>
					<include>MenuShowCaseItem0</include>
				</control>
				<control type="group">
					<left>1000</left>
					<control type="image">
						<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem1Var]</texture>
						<include>MenuShowcaseThumb</include>
					</control>
				</control>
			</control>
			<control type="group" id="6100">
				<left>0</left>
				<top>700</top>
				<visible>!Control.IsVisible(6101) + !Control.IsVisible(6102)</visible>
				<control type="group">
					<animation effect="fade" start="100" end="50" time="300" condition="!Control.HasFocus(9000)">conditional</animation>
					<control type="group">
						<left>-200</left>
						<include>MenuShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>0</left>
						<include>MenuShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>200</left>
						<include>MenuShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>400</left>
						<include>MenuShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>600</left>
						<include>MenuShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>800</left>
						<include>MenuShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>2200</left>
						<include>MenuShowCaseItem6</include>
					</control>
					<control type="group">
						<left>2000</left>
						<include>MenuShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1800</left>
						<include>MenuShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1600</left>
						<include>MenuShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1400</left>
						<include>MenuShowCaseItem2</include>
					</control>
					<control type="group">
						<left>1200</left>
						<include>MenuShowCaseItem1</include>
					</control>
				</control>
				<control type="group">
					<left>1000</left>
					<control type="group">
						<control type="image">
							<left>0</left>
							<top>0</top>
							<width>200</width>
							<height>200</height>
							<align>center</align>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<fadetime>0</fadetime>
							<bordersize>18</bordersize>
							<texture background="true" fallback="DefaultFallback.png">$VAR[ShowmenuItem0Var]</texture>
						</control>
					</control>
				</control>
			</control>
		</control>
	</include>
	<include name="MenuShowcaseThumb">
		<left>0</left>
		<top>0</top>
		<width>200</width>
		<height>200</height>
		<align>center</align>
		<aspectratio scalediffuse="false">keep</aspectratio>
		<fadetime>0</fadetime>
		<bordersize>28</bordersize>
	</include>
	<include name="MenuShowCaseItem-7">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-7Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem-6">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-6Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem-5">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-5Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem-4">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-4Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem-3">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-3Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem-2">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-2Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem-1">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem-1Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem0">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem0Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem1">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem1Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem2">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem2Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem3">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem3Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem4">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem4Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem5">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem5Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem6">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem6Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="MenuShowCaseItem7">
		<control type="group">
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png" colordiffuse="$VAR[IconColorVar]">$VAR[ShowmenuItem7Var]</texture>
				<!-- menu label -->
				<include>MenuShowcaseThumb</include>
			</control>
		</control>
	</include>
	<include name="SquareIconBG">
		<control type="image">
			<texture colordiffuse="$VAR[ListColorHighlightVar]">listselect_fo.png</texture>
		</control>
	</include>
	<include name="ListTextBG">
		<control type="image">
			<left>60</left>
			<texture colordiffuse="$VAR[ListColorHighlightVar]">listselect_fo.png</texture>
			<animation effect="fade" end="35" time="0" delay="0" condition="true">Conditional</animation>
		</control>
	</include>
	<include name="ListTextBGBig">
		<control type="image">
			<left>5</left>
			<right>5</right>
			<texture colordiffuse="$VAR[ListColorHighlightVar]">listselect_fo.png</texture>
			<animation effect="fade" end="35" time="0" delay="0" condition="true">Conditional</animation>
		</control>
	</include>
	<!-- Media Menu -->
	<include name="SideBladeLeft">
		<animation effect="slide" start="400,0" end="0,0" time="400" tween="quadratic" easing="out" condition="String.IsEmpty(Window(home).Property(MediaMenu))">Conditional</animation>
		<animation effect="slide" start="0,0" end="-400,0" time="400" tween="quadratic" easing="out">WindowClose</animation>
		<control type="button">
			<left>0</left>
			<top>0</top>
			<width>400</width>
			<height>960</height>
			<texturefocus border="0">background.png</texturefocus>
			<texturenofocus border="0">background.png</texturenofocus>
			<colordiffuse>$VAR[ListColorHighlightVar]</colordiffuse>
		</control>
		<control type="button" id="9051">
			<include>HiddenObject</include>
			<onfocus condition="String.IsEmpty(Window(Home).Property(MediaMenu))">SetProperty(MediaMenu,True,home)</onfocus>
			<onfocus condition="String.IsEmpty(Window(Home).Property(MediaMenu))">SetFocus(9050)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(Home).Property(MediaMenu))">ClearProperty(MediaMenu,Home)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(Home).Property(MediaMenu))">SetFocus(50)</onfocus>
		</control>
		<control type="button">
			<left>400</left>
			<width>30</width>
			<height>960</height>
			<texturefocus>-</texturefocus>
			<onfocus>SetProperty(MediaMenu,True,home)</onfocus>
			<visible>system.getbool(input.enablemouse) + !Skin.HasSetting(KioskMode.Enabled)</visible>
		</control>
		<include content="SideBladeCloseIcon">
			<param name="CloseIconDialogClose" value="noop" />
			<param name="CloseIconDialogClose2" value="noop" />
			<param name="ClearMediaMenu" value="ClearProperty(MediaMenu,Home)" />
			<param name="CloseIconSetFocus" value="SetFocus(50)" />
			<param name="CloseIconVisibility" value="system.getbool(input.enablemouse)" />
		</include>
	</include>
	<include name="SideBladeCloseIcon">
		<control type="button" id="8999">
			<description>Close Window button</description>
			<left>358</left>
			<width>64</width>
			<height>48</height>
			<label></label>
			<font>IconTiny</font>
			<focusedcolor>$VAR[ColorHighlightVar]</focusedcolor>
			<onclick>$PARAM[CloseIconDialogClose]</onclick>
			<onclick>$PARAM[CloseIconDialogClose2]</onclick>
			<onclick>$PARAM[ClearMediaMenu]</onclick>
			<onclick>$PARAM[CloseIconSetFocus]</onclick>
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<align>center</align>
			<visible>$PARAM[CloseIconVisibility]</visible>
		</control>
	</include>
	<include name="KioskModeButton">
		<control type="button">
			<description>Kiosk Mode button</description>
			<include>ButtonCommonValues</include>
			<label>-</label>
			<onfocus>ClearProperty(MediaMenu,Home)</onfocus>
			<onfocus>SetFocus(50)</onfocus>
		</control>
	</include>
	<include name="MediaMenuTop">
		<left>0</left>
		<top>0</top>
		<width>400</width>
		<height>960</height>
		<onleft>ClearProperty(MediaMenu,Home)</onleft>
		<onleft>SetFocus(9000)</onleft>
		<onright>ClearProperty(MediaMenu,Home)</onright>
		<onright condition="!Window.IsActive(SettingsCategory.xml)">50</onright>
		<onright condition="Window.IsActive(SettingsCategory.xml)">3</onright>
		<onup>9050</onup>
		<ondown>9050</ondown>
		<onback>ClearProperty(MediaMenu,Home)</onback>
		<onback>50</onback>
		<itemgap>0</itemgap>
		<include condition="Skin.HasSetting(KioskMode.Enabled)">KioskModeButton</include>
		<visible allowhiddenfocus="true">String.IsEmpty(Window(home).Property(viewtypeselect)) + !Control.HasFocus(9013) + !Control.HasFocus(9014)</visible>
		<animation effect="slide" start="-440,0" end="0,0" time="400" tween="quadratic" easing="out">Visible</animation>
		<control type="label" id="200">
			<width>400</width>
			<height>60</height>
			
			<font>font13_title</font>
			<label>$VAR[LabelMenuTop]</label>
			<textcolor>$VAR[ColorHighlightVar]</textcolor>
		</control>
		<!--<control type="button" id="1802"><label>$LOCALIZE[31906]</label><label2>$INFO[Container.Viewmode]</label2><include>ButtonCommonValues</include><onclick>SetProperty(viewtypeselect,1,home)</onclick><onclick>ActivateWindow(1118)</onclick><visible>![Window.IsActive(musicplaylisteditor) | Window.IsActive(tvchannels) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvrecordings) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiotimers) | Window.IsActive(radiotimerrules) | Window.IsActive(radiorecordings) | Window.IsActive(radiosearch)]</visible></control>-->
		<control type="button" id="3">
			<description>Sort by button</description>
			<include>ButtonCommonValues</include>
			<label>103</label>
			<visible>false</visible>
		</control>
		<control type="togglebutton" id="4">
			<description>Sort asc</description>
			<include>ButtonCommonValues</include>
			<label>31051</label>
			<altlabel>31050</altlabel>
			<usealttexture>Container.SortDirection(Ascending)</usealttexture>
			<visible>false</visible>
		</control>
		<control type="button" id="1801">
			<description>Sort direction</description>
			<include>ButtonCommonValues</include>
			<label>31156</label>
			<label2>$VAR[SortDirection]</label2>
			<onclick>SendClick(4)</onclick>
			<enable>Control.IsEnabled(4)</enable>
		</control>
		<control type="button" id="1800">
			<description>Sort by button</description>
			<include>ButtonCommonValues</include>
			<label>31155</label>
			<label2>$INFO[Container.SortMethod]</label2>
			<onclick>Container.NextSortMethod</onclick>
			<enable>Control.IsEnabled(3)</enable>
		</control>
		<!--
		<control type="button" id="1804">
			<label>$LOCALIZE[31152]</label>
			<label2>$VAR[ArtLabelVar]</label2>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Artwork.Toggle)</onclick>
		</control>
		-->
		<control type="radiobutton" id="1807">
			<label>32005</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Enable.Pulse.Focus)</onclick>
			<selected>Skin.HasSetting(Enable.Pulse.Focus)</selected>
		</control>
		<control type="radiobutton" id="1808">
			<label>32004</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Enable.Library.Stats)</onclick>
			<selected>Skin.HasSetting(Enable.Library.Stats)</selected>
		</control>
		<control type="radiobutton" id="1809">
			<label>31095</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Enable.SlimList.Misc)</onclick>
			<selected>Skin.HasSetting(Enable.SlimList.Misc)</selected>
			<visible>Control.IsVisible(50) + ![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)] + ![Container.Content(movies) | Container.Content(movie)]</visible>
		</control>
		<control type="radiobutton" id="1898">
			<label>31095</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Enable.SlimList.Movies)</onclick>
			<selected>Skin.HasSetting(Enable.SlimList.Movies)</selected>
			<visible>Control.IsVisible(50) + ![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)] + [Container.Content(movies) | Container.Content(movie)]</visible>
		</control>
		<control type="radiobutton" id="1899">
			<label>31237</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Enable.WideList.Misc)</onclick>
			<selected>Skin.HasSetting(Enable.WideList.Misc)</selected>
			<visible>Control.IsVisible(50) + ![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)] + ![Container.Content(movies) | Container.Content(movie)]</visible>
		</control>
		<control type="radiobutton" id="11109">
			<label>31237</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Enable.WideList.Movies)</onclick>
			<selected>Skin.HasSetting(Enable.WideList.Movies)</selected>
			<visible>Control.IsVisible(50) + ![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)] + [Container.Content(movies) | Container.Content(movie)]</visible>
		</control>
		<control type="radiobutton" id="11110">
			<label>32007</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Show.Plot.TV)</onclick>
			<selected>Skin.HasSetting(Show.Plot.TV)</selected>
			<visible>![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)] + [Container.Content(episodes) | Container.Content(seasons) | Container.Content(tvshows)]</visible>
		</control>
		<control type="radiobutton" id="11111">
			<label>31969</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Hide.Spoilers.TV)</onclick>
			<selected>Skin.HasSetting(Hide.Spoilers.TV)</selected>
			<visible>![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)] + [Container.Content(episodes) | Container.Content(seasons) | Container.Content(tvshows)]</visible>
		</control>
		<control type="radiobutton" id="11112">
			<label>31970</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Hide.Spoilers.Movies)</onclick>
			<selected>Skin.HasSetting(Hide.Spoilers.Movies)</selected>
			<visible>![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)] + [Container.Content(movies) | Container.Content(movie)]</visible>
		</control>
		<control type="radiobutton" id="11113">
			<label>31971</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(ViewFanart.Extra.Fanart)</onclick>
			<selected>Skin.HasSetting(ViewFanart.Extra.Fanart)</selected>
			<visible>![Window.IsActive(eventlog) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiosearch)]</visible>
		</control>
		<control type="button" id="11114">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>31972</label>
			<label2>$INFO[Window(home).Property(cfa_daemon_set),[UPPERCASE],[/UPPERCASE]]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[31972],home)</onclick>
			<onclick>SetProperty(Dialog.NumItems,14)</onclick>
			<onclick>SetProperty(Dialog.1.Label,Blur)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,SetProperty(cfa_daemon_set,blur,home))</onclick>
			<onclick>SetProperty(Dialog.2.Label,Pixelate)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,SetProperty(cfa_daemon_set,pixelate,home))</onclick>
			<onclick>SetProperty(Dialog.3.Label,Posterize)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,SetProperty(cfa_daemon_set,posterize,home))</onclick>
			<onclick>SetProperty(Dialog.4.Label,Distort)</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,SetProperty(cfa_daemon_set,distort,home))</onclick>
			<onclick>SetProperty(Dialog.5.Label,Twotone)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,SetProperty(cfa_daemon_set,twotone,home))</onclick>
			<onclick>SetProperty(Dialog.6.Label,Shiftblock)</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,SetProperty(cfa_daemon_set,shiftblock,home))</onclick>
			<onclick>SetProperty(Dialog.7.Label,Pixelnone)</onclick>
			<onclick>SetProperty(Dialog.7.BuiltIn,SetProperty(cfa_daemon_set,pixelnone,home))</onclick>
			<onclick>SetProperty(Dialog.8.Label,Pixelwaves)</onclick>
			<onclick>SetProperty(Dialog.8.BuiltIn,SetProperty(cfa_daemon_set,pixelwaves,home))</onclick>
			<onclick>SetProperty(Dialog.9.Label,Pixelrandom)</onclick>
			<onclick>SetProperty(Dialog.9.BuiltIn,SetProperty(cfa_daemon_set,pixelrandom,home))</onclick>
			<onclick>SetProperty(Dialog.10.Label,Pixelfile)</onclick>
			<onclick>SetProperty(Dialog.10.BuiltIn,SetProperty(cfa_daemon_set,pixelfile,home))</onclick>
			<onclick>SetProperty(Dialog.11.Label,Pixelfedges)</onclick>
			<onclick>SetProperty(Dialog.11.BuiltIn,SetProperty(cfa_daemon_set,pixelfedges,home))</onclick>
			<onclick>SetProperty(Dialog.12.Label,Pixeledges)</onclick>
			<onclick>SetProperty(Dialog.12.BuiltIn,SetProperty(cfa_daemon_set,pixeledges,home))</onclick>
			<onclick>SetProperty(Dialog.13.Label,Fakelight)</onclick>
			<onclick>SetProperty(Dialog.13.BuiltIn,SetProperty(cfa_daemon_set,fakelight,home))</onclick>
			<onclick>SetProperty(Dialog.14.Label,None)</onclick>
			<onclick>SetProperty(Dialog.14.BuiltIn,SetProperty(cfa_daemon_set,,home))</onclick>
			<onclick>RunScript(script.toolbox,info=selectdialog,header=Select Background Effect)</onclick>
			<onunfocus>SetProperty(cfa_daemon_fire,True,home)</onunfocus>
		</control>
		<control type="button" id="11115">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>31973</label>
			<label2>$INFO[Window(home).Property(FIVE_daemon_set),[UPPERCASE],[/UPPERCASE]]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[31973],home)</onclick>
			<onclick>SetProperty(Dialog.NumItems,14)</onclick>
			<onclick>SetProperty(Dialog.1.Label,Blur)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,SetProperty(FIVE_daemon_set,blur,home))</onclick>
			<onclick>SetProperty(Dialog.2.Label,Pixelate)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,SetProperty(FIVE_daemon_set,pixelate,home))</onclick>
			<onclick>SetProperty(Dialog.3.Label,Posterize)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,SetProperty(FIVE_daemon_set,posterize,home))</onclick>
			<onclick>SetProperty(Dialog.4.Label,Distort)</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,SetProperty(FIVE_daemon_set,distort,home))</onclick>
			<onclick>SetProperty(Dialog.5.Label,Twotone)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,SetProperty(FIVE_daemon_set,twotone,home))</onclick>
			<onclick>SetProperty(Dialog.6.Label,Shiftblock)</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,SetProperty(FIVE_daemon_set,shiftblock,home))</onclick>
			<onclick>SetProperty(Dialog.7.Label,Pixelnone)</onclick>
			<onclick>SetProperty(Dialog.7.BuiltIn,SetProperty(FIVE_daemon_set,pixelnone,home))</onclick>
			<onclick>SetProperty(Dialog.8.Label,Pixelwaves)</onclick>
			<onclick>SetProperty(Dialog.8.BuiltIn,SetProperty(FIVE_daemon_set,pixelwaves,home))</onclick>
			<onclick>SetProperty(Dialog.9.Label,Pixelrandom)</onclick>
			<onclick>SetProperty(Dialog.9.BuiltIn,SetProperty(FIVE_daemon_set,pixelrandom,home))</onclick>
			<onclick>SetProperty(Dialog.10.Label,Pixelfile)</onclick>
			<onclick>SetProperty(Dialog.10.BuiltIn,SetProperty(FIVE_daemon_set,pixelfile,home))</onclick>
			<onclick>SetProperty(Dialog.11.Label,Pixelfedges)</onclick>
			<onclick>SetProperty(Dialog.11.BuiltIn,SetProperty(FIVE_daemon_set,pixelfedges,home))</onclick>
			<onclick>SetProperty(Dialog.12.Label,Pixeledges)</onclick>
			<onclick>SetProperty(Dialog.12.BuiltIn,SetProperty(FIVE_daemon_set,pixeledges,home))</onclick>
			<onclick>SetProperty(Dialog.13.Label,Fakelight)</onclick>
			<onclick>SetProperty(Dialog.13.BuiltIn,SetProperty(FIVE_daemon_set,fakelight,home))</onclick>
			<onclick>SetProperty(Dialog.14.Label,None)</onclick>
			<onclick>SetProperty(Dialog.14.BuiltIn,SetProperty(FIVE_daemon_set,,home))</onclick>
			<onclick>RunScript(script.toolbox,info=selectdialog,header=Select Focus Effect)</onclick>
			<onunfocus>SetProperty(FIVE_daemon_fire,True,home)</onunfocus>
		</control>
		<control type="button" id="11116">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>31999</label>
			<label2>$INFO[Skin.String(colorbox_quality)]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[31999],home)</onclick>
			<onclick>SetProperty(Dialog.NumItems,10)</onclick>
			<onclick>SetProperty(Dialog.1.Label,1)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=1",home))</onclick>
			<onclick>SetProperty(Dialog.2.Label,2)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=2",home))</onclick>
			<onclick>SetProperty(Dialog.3.Label,3)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=3",home))</onclick>
			<onclick>SetProperty(Dialog.4.Label,4)</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=4",home))</onclick>
			<onclick>SetProperty(Dialog.5.Label,5)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=5",home))</onclick>
			<onclick>SetProperty(Dialog.6.Label,6)</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=6",home))</onclick>
			<onclick>SetProperty(Dialog.7.Label,7)</onclick>
			<onclick>SetProperty(Dialog.7.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=7",home))</onclick>
			<onclick>SetProperty(Dialog.8.Label,8)</onclick>
			<onclick>SetProperty(Dialog.8.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=8",home))</onclick>
			<onclick>SetProperty(Dialog.9.Label,9)</onclick>
			<onclick>SetProperty(Dialog.9.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=9",home))</onclick>
			<onclick>SetProperty(Dialog.10.Label,10)</onclick>
			<onclick>SetProperty(Dialog.10.BuiltIn,SetProperty(NINE_manual_set,"var=quality,set=10",home))</onclick>
			<onclick>RunScript(script.toolbox,info=selectdialog,header=Select Quality Colorbox)</onclick>
			<onunfocus>SetProperty(FIVE_daemon_fire,True,home)</onunfocus>
		</control>
		<control type="button" id="11117">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>32000</label>
			<label2>$INFO[Skin.String(colorbox_blursize)]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[32000],home)</onclick>
			<onclick>SetProperty(Dialog.NumItems,10)</onclick>
			<onclick>SetProperty(Dialog.1.Label,1)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=1",home))</onclick>
			<onclick>SetProperty(Dialog.2.Label,2)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=2",home))</onclick>
			<onclick>SetProperty(Dialog.3.Label,3)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=3",home))</onclick>
			<onclick>SetProperty(Dialog.4.Label,4)</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=4",home))</onclick>
			<onclick>SetProperty(Dialog.5.Label,5)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=5",home))</onclick>
			<onclick>SetProperty(Dialog.6.Label,6)</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=6",home))</onclick>
			<onclick>SetProperty(Dialog.7.Label,7)</onclick>
			<onclick>SetProperty(Dialog.7.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=7",home))</onclick>
			<onclick>SetProperty(Dialog.8.Label,8)</onclick>
			<onclick>SetProperty(Dialog.8.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=8",home))</onclick>
			<onclick>SetProperty(Dialog.9.Label,9)</onclick>
			<onclick>SetProperty(Dialog.9.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=9",home))</onclick>
			<onclick>SetProperty(Dialog.10.Label,10)</onclick>
			<onclick>SetProperty(Dialog.10.BuiltIn,SetProperty(NINE_manual_set,"var=blursize,set=10",home))</onclick>
			<onclick>RunScript(script.toolbox,info=selectdialog,header=Select Blur Quality Colorbox)</onclick>
			<onunfocus>SetProperty(FIVE_daemon_fire,True,home)</onunfocus>
			<visible>String.IsEqual(Window(home).Property(cfa_daemon_set),blur) | String.IsEqual(Window(home).Property(FIVE_daemon_set),blur)</visible>
		</control>
		<control type="button" id="11118">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>32002</label>
			<label2>$INFO[Skin.String(colorbox_bitsize)]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[32002],home)</onclick>
			<onclick>SetProperty(Dialog.NumItems,8)</onclick>
			<onclick>SetProperty(Dialog.1.Label,1)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=1",home))</onclick>
			<onclick>SetProperty(Dialog.2.Label,2)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=2",home))</onclick>
			<onclick>SetProperty(Dialog.3.Label,3)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=3",home))</onclick>
			<onclick>SetProperty(Dialog.4.Label,4)</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=4",home))</onclick>
			<onclick>SetProperty(Dialog.5.Label,5)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=5",home))</onclick>
			<onclick>SetProperty(Dialog.6.Label,6)</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=6",home))</onclick>
			<onclick>SetProperty(Dialog.7.Label,7)</onclick>
			<onclick>SetProperty(Dialog.7.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=7",home))</onclick>
			<onclick>SetProperty(Dialog.8.Label,8)</onclick>
			<onclick>SetProperty(Dialog.8.BuiltIn,SetProperty(NINE_manual_set,"var=bitsize,set=8",home))</onclick>
			<onclick>RunScript(script.toolbox,info=selectdialog,header=Select Blur Quality Colorbox)</onclick>
			<onunfocus>SetProperty(FIVE_daemon_fire,True,home)</onunfocus>
			<visible>String.IsEqual(Window(home).Property(cfa_daemon_set),posterize) | String.IsEqual(Window(home).Property(FIVE_daemon_set),posterize)</visible>
		</control>
		<control type="button" id="11119">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>32001</label>
			<label2>$INFO[Skin.String(colorbox_pixelsize)]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[32001],home)</onclick>
			<onclick>Skin.SetNumeric(colorbox_pixelsize)</onclick>
			<onunfocus>SetProperty(NINE_manual_set,"var=pixelsize,set=$INFO[Skin.String(colorbox_pixelsize)]",home)</onunfocus>
			<onunfocus>SetProperty(FIVE_daemon_fire,True,home)</onunfocus>
			<visible>String.IsEqual(Window(home).Property(cfa_daemon_set),pixelate) | String.IsEqual(Window(home).Property(FIVE_daemon_set),pixelate)</visible>
		</control>
		<control type="button" id="11120">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>353</label>
			<label2>#$INFO[Skin.String(colorbox_black)]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[353],home)</onclick>
			<onclick>Skin.SetString(colorbox_black)</onclick>
			<onunfocus>SetProperty(NINE_manual_set,"var=black,set=$INFO[Skin.String(colorbox_black)]",home)</onunfocus>
			<onunfocus>SetProperty(FIVE_daemon_fire,True,home)</onunfocus>
			<visible>String.IsEqual(Window(home).Property(cfa_daemon_set),twotone) | String.IsEqual(Window(home).Property(FIVE_daemon_set),twotone)</visible>
		</control>
		<control type="button" id="11121">
			<description>widget</description>
			<include>ButtonCommonValues</include>
			<label>742</label>
			<label2>#$INFO[Skin.String(colorbox_white)]</label2>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[742],home)</onclick>
			<onclick>Skin.SetString(colorbox_white)</onclick>
			<onunfocus>SetProperty(NINE_manual_set,"var=white,set=$INFO[Skin.String(colorbox_white)]",home)</onunfocus>
			<onunfocus>SetProperty(FIVE_daemon_fire,True,home)</onunfocus>
			<visible>String.IsEqual(Window(home).Property(cfa_daemon_set),twotone) | String.IsEqual(Window(home).Property(FIVE_daemon_set),twotone)</visible>
		</control>
		<control type="radiobutton" id="11217">
			<label>32006</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Colorbox.contrast)</onclick>
			<selected>Skin.HasSetting(Colorbox.contrast)</selected>
			<visible>!String.IsEqual(Window(home).Property(FIVE_daemon_set),None)</visible>
		</control>
		<control type="radiobutton" id="11218">
			<label>31977</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Colorbox.background)</onclick>
			<selected>Skin.HasSetting(Colorbox.background)</selected>
			<visible>!String.IsEqual(Window(home).Property(FIVE_daemon_set),None)</visible>
		</control>
		<control type="radiobutton" id="11219">
			<label>31976</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(Colorbox.header)</onclick>
			<selected>Skin.HasSetting(Colorbox.header)</selected>
			<visible>!String.IsEqual(Window(home).Property(FIVE_daemon_set),None)</visible>
		</control>
		<control type="button" id="11220">
			<label>31974</label>
			<label2>$INFO[Skin.String(View.Panel.Image)]</label2>
			<include>ButtonCommonValues</include>
			<onclick>SetProperty(RefreshItem,$LOCALIZE[31974],home)</onclick>
			<onclick>Skin.SetImage(View.Panel.Image, special://skin/extras)</onclick>
		</control>
		<control type="button" id="11221">
			<label>- $LOCALIZE[10035]</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.Reset(View.Panel.Image)</onclick>
			<onclick>SetFocus(11220)</onclick>
			<visible>!String.IsEmpty(Skin.String(View.Panel.Image))</visible>
		</control>
		<control type="radiobutton" id="11222">
			<label>31982</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(ColorBox.Icons)</onclick>
			<selected>Skin.HasSetting(ColorBox.Icons)</selected>
		</control>
		<control type="radiobutton" id="11223">
			<label>31981</label>
			<include>ButtonCommonValues</include>
			<onclick>Skin.ToggleSetting(ColorBox_Enable_7978)</onclick>
			<selected>Skin.HasSetting(ColorBox_Enable_7978)</selected>
		</control>
		<!--<control type="button" id="11122"><label>31987</label><include>ButtonCommonValues</include><onclick>Skin.SetFile(StartupVideoPath,special://skin/extras)</onclick><selected>!Skin.IsEqual(StartupVideoPath,)</selected></control>-->
		<control type="radiobutton" id="11224">
			<label>31978</label>
			<include>ButtonCommonValues</include>
			<onclick condition="!Skin.HasSetting(Text.Shadow.Enable)">Skin.SetString(Text.Shadow.Colour,ff000000)</onclick>
			<onclick condition="Skin.HasSetting(Text.Shadow.Enable)">Skin.SetString(Text.Shadow.Colour,-)</onclick>
			<onclick>Skin.ToggleSetting(Text.Shadow.Enable)</onclick>
			<selected>Skin.HasSetting(Text.Shadow.Enable)</selected>
		</control>
	</include>
	<include name="PVRMediaMenu">
		<control type="group">
			<left>-400</left>
			<include>SideBladeLeft</include>
			<control type="grouplist" id="9050">
				<include>MediaMenuTop</include>
				<control type="radiobutton" id="31">
					<description>Filter</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>587</label>
					<selected>Container.Filtered</selected>
					<onclick>right</onclick>
					<visible>Window.IsActive(TVChannels) | Window.IsActive(RadioChannels)</visible>
				</control>
				<control type="button" id="28">
					<description>Channel Groups</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>-</label>
					<visible>Window.IsActive(TVChannels) | Window.IsActive(TVGuide)</visible>
				</control>
				<control type="radiobutton" id="5">
					<description>Group recording items by folder structure</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>19270</label>
					<visible>Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)</visible>
				</control>
				<control type="radiobutton" id="6">
					<description>Show hidden channels</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>19051</label>
					<visible>Window.IsActive(TVChannels) | Window.IsActive(RadioChannels)</visible>
				</control>
				<control type="radiobutton" id="7">
					<description>Show deleted recordings</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>19184</label>
					<visible>Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)</visible>
				</control>
				<control type="radiobutton" id="8">
					<description>Hide disabled timers</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>19077</label>
					<visible>Window.IsActive(TVTimers) | Window.IsActive(RadioTimers) | Window.IsActive(TVTimerRules) | Window.IsActive(RadioTimerRules)</visible>
				</control>
				<control type="button" id="203">
					<description>View options</description>
					<textwidth>352</textwidth>
					<font>font13_title</font>
					<include>ButtonCommonValues</include>
					<label>31039</label>
					<enable>no</enable>
					<disabledcolor>$VAR[ColorHighlightVar]</disabledcolor>
				</control>
				<control type="button" id="100">
					<description>Channels</description>
					<label>19019</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVChannels)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioChannels)</onclick>
				</control>
				<control type="button" id="101">
					<description>Guide</description>
					<label>22020</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVGuide)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioGuide)</onclick>
				</control>
				<control type="button" id="102">
					<description>Recordings</description>
					<label>19163</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVRecordings)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioRecordings)</onclick>
				</control>
				<control type="button" id="105">
					<description>Timer Rules</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>19138</label>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVTimerRules)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioTimerRules)</onclick>
				</control>
				<control type="button" id="103">
					<description>Timers</description>
					<label>19040</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVTimers)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioTimers)</onclick>
				</control>
				<control type="button" id="104">
					<description>Search</description>
					<label>137</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVSearch)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioSearch)</onclick>
				</control>
				<!--<control type="button" id="201"><description>View options</description><textwidth>352</textwidth><font>font13_title</font><include>ButtonCommonValues</include><label>31026</label><enable>no</enable><disabledcolor>$VAR[ColorHighlightVar]</disabledcolor></control>-->
				<include>PlaylistButtons</include>
			</control>
		</control>
	</include>
	<include name="SettingsMediaMenu">
		<control type="group">
			<left>-400</left>
			<include>SideBladeLeft</include>
			<control type="grouplist" id="9050">
				<visible allowhiddenfocus="true">!Control.HasFocus(9013) + !Control.HasFocus(9014)</visible>
				<left>0</left>
				<top>0</top>
				<width>400</width>
				<height>960</height>
				<onleft>ClearProperty(MediaMenu,Home)</onleft>
				<onleft>SetFocus(9000)</onleft>
				<onright>ClearProperty(MediaMenu,Home)</onright>
				<onright condition="![Window.IsActive(skinsettings) | Window.IsActive(systeminfo) | Window.IsActive(profiles)]">3</onright>
				<onright condition="Window.IsActive(skinsettings) | Window.IsActive(systeminfo)">9990</onright>
				<onright condition="Window.IsActive(profiles)">2</onright>
				<onup>9050</onup>
				<ondown>9050</ondown>
				<onback>ClearProperty(MediaMenu,Home)</onback>
				<onback condition="![Window.IsActive(skinsettings) | Window.IsActive(systeminfo) | Window.IsActive(profiles)]">3</onback>
				<onback condition="Window.IsActive(skinsettings) | Window.IsActive(systeminfo)">9990</onback>
				<onback condition="Window.IsActive(profiles)">2</onback>
				<itemgap>0</itemgap>
				<include condition="Skin.HasSetting(KioskMode.Enabled)">KioskModeButton</include>
				<animation effect="slide" start="-440,0" end="0,0" time="400" tween="quadratic" easing="out">Visible</animation>
				<control type="button" id="2201">
					<description>Heading</description>
					<textwidth>352</textwidth>
					<font>font13_title</font>
					<include>ButtonCommonValues</include>
					<label>31247</label>
					<enable>no</enable>
					<disabledcolor>$VAR[ColorHighlightVar]</disabledcolor>
				</control>
				<control type="button" id="2202">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>14206</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(InterfaceSettings)</onclick>
					<onclick>Control.SetFocus(3)</onclick>
				</control>
				<control type="button" id="2203">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>166</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(skinsettings)</onclick>
					<onclick>Control.SetFocus(9000)</onclick>
				</control>
				<control type="button" id="2204">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>16003</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(PlayerSettings)</onclick>
					<onclick>Control.SetFocus(3)</onclick>
				</control>
				<control type="button" id="2205">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>14022</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(MediaSettings)</onclick>
					<onclick>Control.SetFocus(3)</onclick>
				</control>
				<control type="button" id="2206">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>19020</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(pvrsettings)</onclick>
					<onclick>Control.SetFocus(3)</onclick>
				</control>
				<control type="button" id="2207">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>13000</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(SystemSettings)</onclick>
					<onclick>Control.SetFocus(3)</onclick>
				</control>
				<control type="button" id="2208">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>705</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(ServiceSettings)</onclick>
					<onclick>Control.SetFocus(3)</onclick>
				</control>
				<control type="button" id="2209">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>13200</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(Profiles)</onclick>
					<onclick>Control.SetFocus(2)</onclick>
				</control>
				<control type="button" id="2210">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>24001</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(AddonBrowser)</onclick>
					<onclick>Control.SetFocus(50)</onclick>
				</control>
				<control type="button" id="2212">
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>19033</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>ReplaceWindow(systeminfo)</onclick>
					<onclick>Control.SetFocus(9000)</onclick>
				</control>
				<control type="button" id="2214">
					<description>Heading</description>
					<textwidth>352</textwidth>
					<font>font13_title</font>
					<include>ButtonCommonValues</include>
					<label>31039</label>
					<enable>no</enable>
					<disabledcolor>$VAR[ColorHighlightVar]</disabledcolor>
					<visible>Window.IsActive(SettingsCategory.xml) | Player.HasMedia | !String.IsEqual(Playlist.Length(music),0) | !String.IsEqual(Playlist.Length(video),0)</visible>
				</control>
				<control type="button" id="20">
					<description>Settings level</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>-</label>
					<onclick>SettingsLevelChange</onclick>
					<visible>False</visible>
				</control>
				<control type="button" id="2215">
					<description>Settings level</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>31142</label>
					<label2>$INFO[Control.GetLabel(20)]</label2>
					<onclick>SettingsLevelChange</onclick>
					<visible>Window.IsActive(SettingsCategory.xml)</visible>
				</control>
				<include>PlaylistButtons</include>
			</control>
		</control>
	</include>
	<include name="MenuPlayerControls">
		<control type="group" id="1810">
			<visible>Player.HasMedia + Control.IsVisible(9050)</visible>
			<control type="grouplist" id="6050">
				<animation effect="slide" start="-440,0" end="0,0" time="400" tween="quadratic" easing="out">Visible</animation>
				<top>0</top>
				<left>0</left>
				<height>60</height>
				<width>400</width>
				
				<scrolltime tween="sine">200</scrolltime>
				<orientation>horizontal</orientation>
				<onup>614</onup>
				<ondown>$PARAM[PlayerControlsOnDown]</ondown>
				<onleft>6050</onleft>
				<onright>6050</onright>
				<onback>ClearProperty(MediaMenu,Home)</onback>
				<onback>50</onback>
				<control type="button" id="6051">
					<label></label>
					<width>57</width>
					<font>IconPlayer</font>
					<onclick>PlayerControl(Previous)</onclick>
					<textoffsetx>0</textoffsetx>
					<align>center</align>
				</control>
				<control type="button" id="6052">
					<label></label>
					<width>57</width>
					<font>IconPlayer</font>
					<onclick>PlayerControl(Rewind)</onclick>
					<enable>Player.SeekEnabled</enable>
					<textoffsetx>0</textoffsetx>
					<align>center</align>
				</control>
				<control type="togglebutton" id="6053">
					<label></label>
					<altlabel></altlabel>
					<width>57</width>
					<font>IconPlayer</font>
					<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
					<onclick>PlayerControl(Play)</onclick>
					<enable>Player.PauseEnabled</enable>
					<textoffsetx>0</textoffsetx>
					<align>center</align>
				</control>
				<control type="button" id="6054">
					<label></label>
					<width>57</width>
					<font>IconPlayer</font>
					<onclick>PlayerControl(Stop)</onclick>
					<onclick>SetFocus($PARAM[PlayerControlsOnDown],0)</onclick>
					<textoffsetx>0</textoffsetx>
					<align>center</align>
				</control>
				<control type="button" id="6055">
					<label></label>
					<width>57</width>
					<font>IconPlayer</font>
					<onclick>PlayerControl(Forward)</onclick>
					<enable>Player.SeekEnabled</enable>
					<textoffsetx>0</textoffsetx>
					<align>center</align>
				</control>
				<control type="button" id="6056">
					<label></label>
					<width>57</width>
					<font>IconPlayer</font>
					<onclick>PlayerControl(Next)</onclick>
					<textoffsetx>0</textoffsetx>
					<align>center</align>
				</control>
				<control type="button" id="6057">
					<label></label>
					<width>58</width>
					<font>IconPlayer</font>
					<onclick condition="Player.HasVideo">ActivateWindow(fullscreenvideo)</onclick>
					<onclick condition="Player.HasAudio">ActivateWindow(visualisation)</onclick>
					<textoffsetx>0</textoffsetx>
					<align>center</align>
				</control>
			</control>
		</control>
	</include>
	<!-- Navigation Bar -->
	<include name="Topbar">
		<control type="group">
			<control type="label" id="7971">
				<left>2117</left>
				<label>$VAR[BreadcrumbsVar]</label>
			</control>
			<control type="label" id="7972">
				<left>2117</left>
				<label>$VAR[HeaderSubTagline]</label>
			</control>
			<control type="label" id="7973">
				<left>2117</left>
				<label>$VAR[WidgetNameLabelVar]</label>
			</control>
			<control type="label" id="7974">
				<left>2117</left>
				<label>$VAR[HomeHeaderSubline]</label>
			</control>
			<control type="group">
				<control type="image">
					<animation type="Visible">
						<effect type="slide" time="400" start="-118" end="0,0" tween="back" easing="inout" />
					</animation>
					<animation type="Hidden">
						<effect type="slide" time="400" start="0,0" end="-118" tween="back" easing="inout" />
					</animation>
					<top>-58</top>
					<left>0</left>
					<width>118</width>
					<height>58</height>
					<fadetime>400</fadetime>
					<texture diffuse="upmask.png" colordiffuse="$VAR[MenuPanelBackgroundColorHighlightVar]">$VAR[MenuPanelBackground]</texture>
					<visible>!Window.IsActive(movieinformation) + [ControlGroup(97631).HasFocus + [Window.IsVisible(script-skinshortcuts.xml) | String.Contains(Window.Property(xmlfile), etting) | Window.IsActive(MyWeather.xml) | Window.IsActive(MyMusicPlaylistEditor.xml)]]</visible>
				</control>
				<control type="image">
					<animation type="Conditional" condition="!Window.IsActive(movieinformation) + [ControlGroup(97631).HasFocus + [Window.IsVisible(script-skinshortcuts.xml) | String.Contains(Window.Property(xmlfile), etting) | Window.IsActive(MyWeather.xml) | Window.IsActive(MyMusicPlaylistEditor.xml)]]" reversible="true">
						<effect type="slide" time="400" start="0" end="0,-60" tween="back" easing="inout" />
					</animation>
					<top>20</top>
					<left>20</left>
					<width>80</width>
					<height>80</height>
					<!-- <colordiffuse>$VAR[HeaderIconColorVar]</colordiffuse> -->
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>$VAR[HeaderIcon]</texture>
					<visible>!Control.IsVisible(12345)</visible>
					<visible>!Control.IsVisible(12346)</visible>
					<visible>String.Contains(ListItem.Path,plugin://) | [!Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(episode)] | String.IsEqual(ListItem.Label, ..)</visible>
					<visible>String.Contains(ListItem.Path,plugin://) | [![Window.IsActive(movieinformation) + [[Skin.HasSetting(Overlay.Resumable) + ListItem.IsResumable] | [String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)] | [String.IsEqual(ListItem.Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)]]]] | String.IsEqual(ListItem.Label, ..)</visible>
					<visible>!String.Contains(ListItem.Path,plugin://) | [![Container.Scrolling + [String.IsEqual(Container.SortMethod,$LOCALIZE[369]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | [Container.Content(artists) + String.IsEqual(Container.SortMethod,$LOCALIZE[557])]]]]</visible>
					<visible>String.Contains(ListItem.Path,plugin://) | [!Window.IsVisible(DialogBusy.xml) + [!Control.IsVisible(12345)]]</visible>
					<visible>!Window.IsVisible(DialogBusy.xml)</visible>
					<visible>!Window.IsVisible(DialogFullScreenInfo.xml)</visible>
					<visible>!Window.IsVisible(VideoOSD.xml)</visible>
					<visible>!Window.IsVisible(MusicOSD.xml)</visible>
					<visible>!Window.IsVisible(DialogSeekBar.xml)</visible>
				</control>
				<control type="group">
					<visible>Control.IsVisible(12346) + !Window.IsVisible(DialogConfirm.xml) + !Window.IsVisible(DialogSelect.xml) + !Window.IsVisible(DialogButtonMenu.xml) + !Window.IsVisible(DialogKeyboard.xml)</visible>
					<control type="label">
						<top>59</top>
						<left>120</left>
						<width min="1228" max="1678">auto</width>
						
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorMenuVar]</textcolor>
						<label>$LOCALIZE[31004,[B],[/B]]</label>
					</control>
				</control>
				<control type="group">
					<visible>!String.IsEqual(ListItem.Label, ..)</visible>
					<visible>!Control.IsVisible(12345)</visible>
					<visible>!Control.IsVisible(12346)</visible>
					<visible>!String.Contains(ListItem.Path,plugin://) + [Window.IsActive(movieinformation) + [Skin.HasSetting(Overlay.Resumable) | [String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)] | [String.IsEqual(ListItem.Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)]]]</visible>
					<top>27</top>
					<left>27</left>
					<control type="image">
						<width>64</width>
						<height>64</height>
						<texture colordiffuse="$VAR[MenuListColorHighlightVar]">$VAR[OverlayBGVar]</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
					</control>
					<control type="image">
						<width>64</width>
						<height>64</height>
						<texture colordiffuse="ffffffff">progress/images/$INFO[ListItem.PercentPlayed,,percent.png]</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
					</control>
					<control type="image">
						<width>64</width>
						<height>64</height>
						<texture colordiffuse="ffffffff">overlays/images/overlay.png</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
						<visible>!ListItem.IsResumable + String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
					</control>
				</control>
				<control type="group">
					<visible>!String.IsEqual(ListItem.Label, ..)</visible>
					<visible>!Control.IsVisible(12345)</visible>
					<visible>!Control.IsVisible(12346)</visible>
					<visible>!String.Contains(ListItem.Path,plugin://) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(episode)] + !String.IsEmpty(Window(home).Property(Show_Percentage))</visible>
					<top>13</top>
					<left>13</left>
					<control type="image">
						<width>92</width>
						<height>92</height>
						<texture>$VAR[OverlayVarPercent]</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
					</control>
				</control>
				<control type="label">
					<top>20</top>
					<left>20</left>
					<width>80</width>
					<height>80</height>
					<font>font35_title</font>
					<align>center</align>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<visible>Container.Scrolling + [String.IsEqual(Container.SortMethod,$LOCALIZE[369]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | [Container.Content(artists) + String.IsEqual(Container.SortMethod,$LOCALIZE[557])]]</visible>
					<visible>!Window.IsVisible(DialogBusy.xml) + !Control.IsVisible(12345)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image" id="12346">
					<animation type="Conditional" condition="!Window.IsActive(movieinformation) + [ControlGroup(97631).HasFocus + [Window.IsVisible(script-skinshortcuts.xml) | String.Contains(Window.Property(xmlfile), etting) | Window.IsActive(MyWeather.xml)]]" reversible="true">
						<effect type="slide" time="400" start="0" end="0,-60" tween="back" easing="inout" />
					</animation>
					<visible>Window.IsVisible(DialogBusy.xml) | Control.IsVisible(12345) | Container.IsUpdating</visible>
					<description>Busy animation</description>
					<top>32</top>
					<left>32</left>
					<width>54</width>
					<height>54</height>
					<texture colordiffuse="$VAR[ColorTextVar]" fallback="special://skin/extras/spinners/Sun.png">$INFO[Skin.String(busyloader)]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="rotate" start="360" end="0" center="auto" time="3000" loop="true" condition="true">conditional</animation>
				</control>
				<control type="button">
					<left>102</left>
					<top>17</top>
					<width>1715</width>
					<height>45</height>
					<font>font28_title</font>
					
					
					<textoffsetx>18</textoffsetx>
					<label>$VAR[BreadcrumbsVar]$VAR[HeaderSubLabel, ,]</label>
					<label2>$VAR[TopbarFadeLabel2]$VAR[TopbarFadeLabel1, ,]</label2>
					
					<texturefocus>blank.png</texturefocus>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!Window.IsVisible(DialogFullScreenInfo.xml)</visible>
					<visible>!Window.IsVisible(VideoOSD.xml)</visible>
					<visible>!Window.IsVisible(MusicOSD.xml)</visible>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
				</control>
				<control type="group">
					<visible>Window.IsVisible(DialogButtonMenu.xml)</visible>
					<control type="button">
						<left>102</left>
						<top>17</top>
						<width>1715</width>
						<height>45</height>
						<font>font28_title</font>
						
						
						<textoffsetx>18</textoffsetx>
						<!--
						<label>$VAR[BreadcrumbsVar]$VAR[HeaderSubLabel, ,]</label>
						-->
						<label>$VAR[BreadcrumbsVar]</label>
						<label2>$VAR[TopbarFadeLabel2]$VAR[TopbarFadeLabel1, ,]</label2>
						
						<texturefocus>blank.png</texturefocus>
					</control>
					<control type="label">
						<top>59</top>
						<left>120</left>
						<width min="1228" max="1678">auto</width>
						
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorMenuVar]</textcolor>
						<label>$INFO[System.CurrentControl,[B],[/B]]</label>
					</control>
				</control>
				<control type="button">
					<left>102</left>
					<top>17</top>
					<width>1715</width>
					<height>45</height>
					<font>font28_title</font>
					
					
					<textoffsetx>18</textoffsetx>
					<label>$VAR[BreadcrumbsVar]</label>
					<label2>$VAR[TopbarFadeLabel2]</label2>
					
					<texturefocus>blank.png</texturefocus>
					<visible>Window.IsVisible(VideoOSD.xml) | Window.IsVisible(MusicOSD.xml)</visible>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
				</control>
				<control type="label">
					<top>59</top>
					<left>120</left>
					<width min="1228" max="1678">auto</width>
					
					<height>45</height>
					<font>topbar</font>
					<scroll>true</scroll>
					<scrollspeed>150</scrollspeed>
					<textcolor>$VAR[ColorMenuVar]</textcolor>
					<label>$INFO[Window(Home).Property(LabelFilterTHREE)]$INFO[Window(Home).Property(LabelFilterFOUR), ,]</label>
					<visible>!Window.IsVisible(VideoOSDBookmarks.xml)</visible>
					<visible>!Window.IsVisible(DialogFavourites.xml)</visible>
					<visible>!Window.IsVisible(DialogSelect.xml)</visible>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!String.IsEmpty(Control.GetLabel(7971))</visible>
					<visible>![Window.IsActive(AddOnBrowser.xml) + !ControlGroup(97631).HasFocus]</visible>
					<visible>!Control.IsVisible(12346)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 999)</visible>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
					<visible>[[Window.IsActive(home) | Window.IsActive(MyWeather.xml) | Window.IsActive(MyMusicPlaylistEditor.xml)] + !Window.IsActive(movieinformation)] | String.StartsWith(System.CurrentControlID, 8011) | String.StartsWith(System.CurrentControlID, 909) | String.StartsWith(System.CurrentControlID, 9010) | [String.IsEqual(System.CurrentControlID, 6) + !String.Contains(Window.Property(xmlfile), etting)] | [String.IsEqual(System.CurrentControlID, 3) + !String.Contains(Window.Property(xmlfile), etting)] | [ControlGroup(97631).HasFocus + [Window.IsVisible(script-skinshortcuts.xml) | String.Contains(Window.Property(xmlfile), etting)]]</visible>
					<visible>![Window.IsVisible(MyWeather.xml) + ControlGroup(9050).HasFocus + !String.IsEqual(System.CurrentControlID, 6)]</visible>
					<visible>!Window.IsVisible(DialogSubtitles.xml) + !Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(VideoOSD.xml) + !Window.IsVisible(MusicOSD.xml) + !Window.IsVisible(DialogKeyboard.xml) + !Window.IsVisible(DialogNumeric.xml)</visible>
				</control>
				<control type="button">
					<left>102</left>
					<top>59</top>
					<width>1715</width>
					<height>45</height>
					<font>topbar</font>
					
					
					<textoffsetx>18</textoffsetx>
					<scroll>true</scroll>
					<scrollspeed>150</scrollspeed>
					<textcolor>$VAR[ColorMenuVar]</textcolor>
					<label>$INFO[Window(Home).Property(LabelFilterTHREE)]</label>
					<label2>$VAR[TopbarOSDLabel]</label2>
					
					<texturefocus>blank.png</texturefocus>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
					<visible>!Control.IsVisible(12346)</visible>
					<visible>!Window.IsVisible(VideoOSDBookmarks.xml)</visible>
					<visible>!Window.IsVisible(DialogFavourites.xml)</visible>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!Window.IsVisible(DialogSelect.xml)</visible>
					<visible>!Window.IsVisible(DialogKeyboard.xml)</visible>
					<visible>!Window.IsVisible(DialogNumeric.xml)</visible>
					<visible>Window.IsVisible(DialogSubtitles.xml) | Window.IsVisible(DialogSettings.xml) | Window.IsVisible(VideoOSD.xml) | Window.IsVisible(MusicOSD.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(SmartPlaylistRule.xml)</visible>
				</control>
				<control type="label">
					<top>59</top>
					<left>120</left>
					<width min="1228" max="1678">auto</width>
					
					<height>45</height>
					<font>topbar</font>
					<scroll>true</scroll>
					<scrollspeed>150</scrollspeed>
					<textcolor>$VAR[ColorMenuVar]</textcolor>
					<label>$INFO[System.CurrentControl,[B],[/B]]$INFO[Container(90600).ListItem.Label2, ,]</label>
					<visible>Window.IsVisible(custom_1121_Dependencies.xml)</visible>
					<visible>!Window.IsVisible(DialogPictureInfo.xml)</visible>
					<visible>!Window.IsVisible(VideoOSDBookmarks.xml)</visible>
					<visible>!Window.IsVisible(DialogFavourites.xml)</visible>
					<visible>!Window.IsVisible(MyPlaylist.xml)</visible>
					<visible>!Window.IsVisible(MyMusicPlaylistEditor.xml)</visible>
					<visible>!Window.IsVisible(DialogTextViewer.xml)</visible>
					<visible>!Window.IsVisible(DialogMediaSource.xml)</visible>
					<visible>!Window.IsVisible(DialogKeyboard.xml)</visible>
					<visible>!Window.IsVisible(DialogNumeric.xml)</visible>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
					<visible>!Window.IsVisible(DialogSettings.xml)</visible>
					<visible>!Window.IsVisible(DialogSelect.xml)</visible>
					<visible>!String.IsEqual(System.CurrentControlID, 3)</visible>
					<visible>!String.IsEqual(System.CurrentControlID, 6)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 9010)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 8011)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 909)</visible>
					<visible>!Control.IsVisible(12346)</visible>
				</control>
				<control type="label">
					<top>59</top>
					<left>120</left>
					<width min="1228" max="1678">auto</width>
					
					<height>45</height>
					<font>topbar</font>
					<scroll>true</scroll>
					<scrollspeed>150</scrollspeed>
					<textcolor>$VAR[ColorMenuVar]</textcolor>
					<label>$INFO[Window(Home).Property(LabelFilterTHREE)]</label>
					<visible>!Control.IsVisible(12346)</visible>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
					<visible>[!ControlGroup(97631).HasFocus + Window.IsVisible(script-skinshortcuts.xml)] | [!ControlGroup(97631).HasFocus + String.Contains(Window.Property(xmlfile), etting)]</visible>
					<visible>!Window.IsVisible(VideoOSDBookmarks.xml)</visible>
					<visible>!Window.IsVisible(DialogFavourites.xml)</visible>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!Window.IsVisible(DialogSelect.xml)</visible>
					<visible>!Window.IsVisible(DialogKeyboard.xml)</visible>
					<visible>!Window.IsVisible(DialogNumeric.xml)</visible>
					<visible>!Window.IsVisible(DialogSubtitles.xml) + !Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(VideoOSD.xml) + !Window.IsVisible(MusicOSD.xml)</visible>
				</control>
				<control type="grouplist">
					<visible>!Window.IsVisible(DialogPictureInfo.xml)</visible>
					<visible>!Window.IsVisible(VideoOSDBookmarks.xml)</visible>
					<visible>!Window.IsVisible(DialogFavourites.xml)</visible>
					<visible>!Window.IsVisible(MyPlaylist.xml)</visible>
					<visible>!Window.IsVisible(MyMusicPlaylistEditor.xml)</visible>
					<visible>!Window.IsVisible(DialogTextViewer.xml)</visible>
					<visible>!Window.IsVisible(DialogMediaSource.xml)</visible>
					<visible>!Window.IsVisible(DialogKeyboard.xml)</visible>
					<visible>!Window.IsVisible(DialogNumeric.xml)</visible>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
					<visible>!Window.IsVisible(DialogSettings.xml)</visible>
					<visible>!Window.IsVisible(DialogSelect.xml)</visible>
					<visible>!String.IsEqual(System.CurrentControlID, 3)</visible>
					<visible>!String.IsEqual(System.CurrentControlID, 6)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 9010)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 8011)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 909)</visible>
					<visible>!Control.IsVisible(12346)</visible>
					<left>120</left>
					<top>59</top>
					<width>1678</width>
					<height>45</height>
					<orientation>horizontal</orientation>
					<itemgap>6</itemgap>
					<align>left</align>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>Window.IsVisible(MyMusicNav.xml) + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Music.ArtistsCount)) + !Window.IsActive(musicinformation) + !Window.IsActive(songinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Music.ArtistsCount),, ]</label>
						<visible>Window.IsVisible(MyMusicNav.xml) + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Music.ArtistsCount)) + !Window.IsActive(musicinformation) + !Window.IsActive(songinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>Window.IsVisible(MyMusicNav.xml) + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Music.AlbumsCount)) + !Window.IsActive(musicinformation) + !Window.IsActive(songinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Music.AlbumsCount),, ]</label>
						<visible>Window.IsVisible(MyMusicNav.xml) + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Music.AlbumsCount)) + !Window.IsActive(musicinformation) + !Window.IsActive(songinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>Window.IsVisible(MyMusicNav.xml) + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Music.SongsCount)) + !Window.IsActive(musicinformation) + !Window.IsActive(songinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Music.SongsCount),, ]</label>
						<visible>Window.IsVisible(MyMusicNav.xml) + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Music.SongsCount)) + !Window.IsActive(musicinformation) + !Window.IsActive(songinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>[Container.Content(movie) | Container.Content(movies)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Movies.Count)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Movies.Count),, ]</label>
						<visible>[Container.Content(movie) | Container.Content(movies)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Movies.Count)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>[Container.Content(movie) | Container.Content(movies)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Movies.Watched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Movies.Watched),, ]</label>
						<visible>[Container.Content(movie) | Container.Content(movies)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Movies.Watched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>[Container.Content(movie) | Container.Content(movies)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Movies.UnWatched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Movies.UnWatched),, ]</label>
						<visible>[Container.Content(movie) | Container.Content(movies)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Movies.UnWatched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>[Container.Content(tvshow) | Container.Content(tvshows)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(TVShows.Count)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(TVShows.Count),, ]</label>
						<visible>[Container.Content(tvshow) | Container.Content(tvshows)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(TVShows.Count)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>[Container.Content(tvshow) | Container.Content(tvshows)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Episodes.Watched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Episodes.Watched),, ]</label>
						<visible>[Container.Content(tvshow) | Container.Content(tvshows)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Episodes.Watched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>[Container.Content(tvshow) | Container.Content(tvshows)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Episodes.UnWatched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(Episodes.UnWatched),, ]</label>
						<visible>[Container.Content(tvshow) | Container.Content(tvshows)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(Window(Home).Property(Episodes.UnWatched)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>[Container.Content(seasons)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes),, ]</label>
						<visible>[Container.Content(seasons)] + Skin.HasSetting(Enable.Library.Stats) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.SongCount)) + [[Integer.IsGreater(Container(50).NumItems, 0) + Container.Filtered] | [Integer.IsGreater(Container(50).NumItems, 0) + !String.Contains(Container.FolderPath,/titles/)]] + Skin.HasSetting(Enable.Library.Stats) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Container(50).NumItems,, ]</label>
						<visible>String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.SongCount)) + [[Integer.IsGreater(Container(50).NumItems, 0) + Container.Filtered] | [Integer.IsGreater(Container(50).NumItems, 0) + !String.Contains(Container.FolderPath,/titles/)]] + Skin.HasSetting(Enable.Library.Stats) + !Window.IsActive(movieinformation)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>Container.Content(actors) + !String.IsEmpty(ListItem.Appearances)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[ListItem.Appearances,, ]</label>
						<visible>Container.Content(actors) + !String.IsEmpty(ListItem.Appearances)</visible>
					</control>
					<control type="button">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<width>45</width>
						<height>45</height>
						<textcolor>black</textcolor>
						<textoffsetx>0</textoffsetx>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)]</label>
						<font>font13</font>
						<align>center</align>
						<texturefocus colordiffuse="$VAR[CommunityRatingColour]">metacritic_box.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[CommunityRatingColour]">metacritic_box.png</texturenofocus>
						<visible>![String.IsEqual(Listitem.Label, ..) | String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])]</visible>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))</visible>
						<visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),n/a)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<width>6</width>
						<label> </label>
						<visible>![String.IsEqual(Listitem.Label, ..) | String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])]</visible>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + !String.IsEqual(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),n/a) + !String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>yellow</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$VAR[IMDBIcon]</label>
						<visible>!String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<font>topbar</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$INFO[ListItem.Rating,, ]</label>
						<visible>!String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<width>6</width>
						<label> </label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + !String.IsEqual(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),n/a) + String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<font>IconMedium</font>
						<textcolor>$VAR[RottenTomatoesIconColour]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$VAR[RottenTomatoesIcon]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter))</visible>
						<visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),n/a)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<font>topbar</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),,% ]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter))</visible>
						<visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),n/a)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.SongCount))</visible>
					</control>
					<control type="label">
						<font>topbar</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.SongCount),, ]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.SongCount))</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>orange</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Count))</visible>
					</control>
					<control type="label">
						<font>topbar</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Count),, ]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Count))</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>blue</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration))</visible>
					</control>
					<control type="label">
						<font>topbar</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, ]</label>
						<visible>Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration))</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<textcolor>yellow</textcolor>
						<height>45</height>
						<width>auto</width>
						<label></label>
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<font>topbar</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$INFO[ListItem.Top250,#, ]</label>
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<font>IconMedium</font>
						<label>$VAR[LabelUserRating]</label>
						<textcolor>$VAR[ColorUserRating]</textcolor>
						<height>45</height>
						<width>auto</width>
						<visible>!String.IsEmpty(ListItem.Userrating)</visible>
					</control>
					<control type="label">
						<font>topbar</font>
						<textcolor>$VAR[ColorUserRating]</textcolor>
						<height>45</height>
						<width>auto</width>
						<label>$INFO[ListItem.Userrating,, ]</label>
						<visible>!String.IsEmpty(ListItem.Userrating)</visible>
					</control>
					<control type="label">
						<width min="1228" max="1678">auto</width>
						<height>45</height>
						<font>topbar</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(LabelFilterTWO)]</label>
					</control>
				</control>
				<!--
				<control type="grouplist">
					<animation effect="slide" time="0" delay="0" start="0" end="100" reversible="true" condition="!String.Contains(ListItem.Path,plugin://) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(episode)] + !String.IsEmpty(Window(home).Property(Show_Percentage))">Conditional</animation>
					<visible>Control.IsVisible(50) + !String.IsEmpty(Window(Home).Property(WideToggle)) + !Window.IsActive(movieinformation) + !Window.IsActive(musicinformation) + !Window.IsVisible(songinformation)</visible>
					<visible>!Window.IsVisible(DialogPictureInfo.xml)</visible>
					<visible>!Window.IsVisible(VideoOSDBookmarks.xml)</visible>
					<visible>!Window.IsVisible(DialogFavourites.xml)</visible>
					<visible>!Window.IsVisible(MyPlaylist.xml)</visible>
					<visible>!Window.IsVisible(MyMusicPlaylistEditor.xml)</visible>
					<visible>!Window.IsVisible(DialogTextViewer.xml)</visible>
					<visible>!Window.IsVisible(DialogMediaSource.xml)</visible>
					<visible>!Window.IsVisible(DialogKeyboard.xml)</visible>
					<visible>!Window.IsVisible(DialogNumeric.xml)</visible>
					<visible>!Window.IsVisible(DialogConfirm.xml)</visible>
					<visible>!Window.IsVisible(DialogButtonMenu.xml)</visible>
					<visible>!Window.IsVisible(DialogSettings.xml)</visible>
					<visible>!Window.IsVisible(DialogSelect.xml)</visible>
					<visible>!String.IsEqual(System.CurrentControlID, 3)</visible>
					<visible>!String.IsEqual(System.CurrentControlID, 6)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 9010)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 8011)</visible>
					<visible>!String.StartsWith(System.CurrentControlID, 909)</visible>
					<visible>!Control.IsVisible(12346)</visible>
					<left>20</left>
					<top>18</top>
					<width>1800</width>
					<height>80</height>
					<orientation>horizontal</orientation>
					<itemgap>6</itemgap>
					<control type="label">
						<font>IconMedium_toggle</font>
						<textcolor>orange</textcolor>
						<height>80</height>
						<width>auto</width>
						<label></label>
						<visible>Container.Content(actors) + !String.IsEmpty(ListItem.Appearances)</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<height>80</height>
						<font>topbar_toggle</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[ListItem.Appearances,, ]</label>
						<visible>Container.Content(actors) + !String.IsEmpty(ListItem.Appearances)</visible>
					</control>
					<control type="button">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<width>80</width>
						<height>80</height>
						<textcolor>black</textcolor>
						<textoffsetx>0</textoffsetx>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)]</label>
						<font>font13_toggle</font>
						<align>center</align>
						<texturefocus colordiffuse="$VAR[CommunityRatingColour]">metacritic_box.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[CommunityRatingColour]">metacritic_box.png</texturenofocus>
						<visible>![String.IsEqual(Listitem.Label, ..) | String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])]</visible>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))</visible>
						<visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),n/a)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<width>6</width>
						<label> </label>
						<visible>![String.IsEqual(Listitem.Label, ..) | String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])]</visible>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + !String.IsEqual(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),n/a) + !String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<font>IconMedium_toggle</font>
						<textcolor>yellow</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$VAR[IMDBIcon]</label>
						<visible>!String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<font>topbar_toggle</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$INFO[ListItem.Rating,, ]</label>
						<visible>!String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<width>6</width>
						<label> </label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + !String.IsEqual(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),n/a) + String.IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<font>IconMedium_toggle</font>
						<textcolor>$VAR[RottenTomatoesIconColour]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$VAR[RottenTomatoesIcon]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter))</visible>
						<visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),n/a)</visible>
					</control>
					<control type="label">
						<visible>!ListItem.IsParentFolder</visible>
						<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
						<font>topbar_toggle</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),,% ]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter))</visible>
						<visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),n/a)</visible>
					</control>
					<control type="label">
						<font>IconMedium_toggle</font>
						<textcolor>orange</textcolor>
						<height>80</height>
						<width>auto</width>
						<label></label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.SongCount))</visible>
					</control>
					<control type="label">
						<font>topbar_toggle</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.SongCount),, ]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.SongCount))</visible>
					</control>
					<control type="label">
						<font>IconMedium_toggle</font>
						<textcolor>orange</textcolor>
						<height>80</height>
						<width>auto</width>
						<label></label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Count))</visible>
					</control>
					<control type="label">
						<font>topbar_toggle</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Count),, ]</label>
						<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Count))</visible>
					</control>
					<control type="label">
						<font>IconMedium_toggle</font>
						<textcolor>blue</textcolor>
						<height>80</height>
						<width>auto</width>
						<label></label>
						<visible>Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration))</visible>
					</control>
					<control type="label">
						<font>topbar_toggle</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, ]</label>
						<visible>Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration))</visible>
					</control>
					<control type="label">
						<font>IconMedium_toggle</font>
						<textcolor>yellow</textcolor>
						<height>80</height>
						<width>auto</width>
						<label></label>
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<font>topbar_toggle</font>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$INFO[ListItem.Top250,#, ]</label>
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<font>IconMedium_toggle</font>
						<label>$VAR[LabelUserRating]</label>
						<textcolor>$VAR[ColorUserRating]</textcolor>
						<height>80</height>
						<width>auto</width>
						<visible>!String.IsEmpty(ListItem.Userrating)</visible>
					</control>
					<control type="label">
						<font>topbar_toggle</font>
						<textcolor>$VAR[ColorUserRating]</textcolor>
						<height>80</height>
						<width>auto</width>
						<label>$INFO[ListItem.Userrating,, ]</label>
						<visible>!String.IsEmpty(ListItem.Userrating)</visible>
					</control>
					<control type="label">
						<visible>!String.Contains(ListItem.Path,plugin://)</visible>
						<width min="1228" max="1500">auto</width>
						<height>80</height>
						<font>topbar_toggle</font>
						<scroll>true</scroll>
						<scrollspeed>150</scrollspeed>
						<textcolor>$VAR[ColorTopbarVar]</textcolor>
						<label>$INFO[Window(Home).Property(LabelFilterTWO)]</label>
					</control>
				</control>
				-->
			</control>
			<control type="image">
				<description>avatar</description>
				<animation effect="fade" time="500">Visible</animation>
				<left>1821</left>
				<top>19</top>
				<width>80</width>
				<height>80</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture>$VAR[HomeNowPlayingThumbVar]</texture>
			</control>
		</control>
	</include>
	<include name="DialogKeyboardBackground">
		<control type="image">
			<description>background image</description>
			<left>0</left>
			<top>0</top>
			<width>$PARAM[DialogBackgroundWidth]</width>
			<height>$PARAM[DialogBackgroundHeight]</height>
			<texture border="12">dialog_context.png</texture>
			<colordiffuse>$VAR[ListColorHighlightVar]</colordiffuse>
		</control>
		<control type="label" id="$PARAM[DialogHeaderId]">
			<description>header label</description>
			<top>25</top>
			<width>$PARAM[DialogBackgroundWidth]</width>
			<height>40</height>
			<font>font15_title</font>
			<label>$PARAM[DialogHeaderLabel]</label>
			<textoffsetx>30</textoffsetx>
			<align>center</align>
			<scroll>true</scroll>
			<scrollspeed>20</scrollspeed>
		</control>
	</include>
	<include name="DialogBackgroundCommonsPanel">
		<control type="image">
			<description>background image</description>
			<animation effect="fade" time="0" tween="cubic" start="0" end="95" reversible="false" condition="true">Conditional</animation>
			<left>0</left>
			<top>0</top>
			<width>$PARAM[DialogBackgroundWidth]</width>
			<height>$PARAM[DialogBackgroundHeight]</height>
			<texture border="0">background.png</texture>
			<colordiffuse>$VAR[ListColorHighlightVar]</colordiffuse>
		</control>
		<control type="label" id="$PARAM[DialogHeaderId]">
			<description>header label</description>
			<top>-1525</top>
			<label>$PARAM[DialogHeaderLabel]</label>
		</control>
	</include>
	<include name="DialogBackgroundCommons">
		<control type="image">
			<description>background image</description>
			<left>0</left>
			<top>$PARAM[DialogBackgroundTop]</top>
			<width>$PARAM[DialogBackgroundWidth]</width>
			<height>$PARAM[DialogBackgroundHeight]</height>
			<texture background="true">$VAR[MenuPanelBackground]</texture>
			<colordiffuse>$VAR[MenuPanelBackgroundColorHighlightVar]</colordiffuse>
		</control>
		<control type="label" id="$PARAM[DialogHeaderId]">
			<description>header label</description>
			<top>25</top>
			<width>$PARAM[DialogBackgroundWidth]</width>
			<height>40</height>
			<font>font15_title</font>
			<label>$PARAM[DialogHeaderLabel]</label>
			<textoffsetx>30</textoffsetx>
			<align>center</align>
			<scroll>true</scroll>
			<scrollspeed>20</scrollspeed>
		</control>
	</include>
	<include name="DialogBackgroundCommonsFake">
		<control type="image">
			<description>background image</description>
		</control>
		<control type="label" id="$PARAM[DialogHeaderId]">
			<description>header label</description>
			<left>2000</left>
			<label>$PARAM[DialogHeaderLabel]</label>
		</control>
	</include>
	<include name="Scrollbar_Vertical_50">
		<control type="scrollbar" id="500">
			<left>1150</left>
			<top>0</top>
			<width>10</width>
			<height>960</height>
			<onleft condition="![Window.IsActive(addoninformation) | Window.IsActive(settings)]">50</onleft>
			<onleft condition="Window.IsActive(addoninformation) | Window.IsActive(settings)">9990</onleft>
			<onright condition="String.IsEmpty(Window(Home).Property(WideToggle)) + [[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">SetFocus(50)</onright>
			<onright condition="String.IsEmpty(Window(Home).Property(WideToggle)) + [[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">SetProperty(WideToggle,True,home)</onright>
			<onright condition="!String.IsEmpty(Window(Home).Property(WideToggle)) + [[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">SetFocus(9000)</onright>
			<onright condition="![[Skin.HasSetting(Enable.WideList.Misc) + ![Container.Content(movies) | Container.Content(movie)]] | [Skin.HasSetting(Enable.WideList.Movies) + [Container.Content(movies) | Container.Content(movie)] + !Window.IsActive(movieinformation)]]">SetFocus(9000)</onright>
			<ondown>500</ondown>
			<onup>500</onup>
			<showonepage>true</showonepage>
		</control>
	</include>
	<include name="Scrollbar_Vertical">
		<control type="scrollbar" id="500">
			<left>1150</left>
			<top>0</top>
			<width>10</width>
			<height>960</height>
			<onleft condition="![Window.IsActive(addoninformation) | Window.IsActive(settings)]">50</onleft>
			<onleft condition="Window.IsActive(addoninformation) | Window.IsActive(settings)">9990</onleft>
			<onright>SetFocus(9000)</onright>
			<ondown>500</ondown>
			<onup>500</onup>
		</control>
	</include>
	<include name="Scrollbar_Vertical_VideoInfo">
		<!--<control type="scrollbar" id="501"><left>1150</left><top>0</top><width>10</width><height>960</height><onleft condition="![Window.IsActive(addoninformation) | Window.IsActive(settings)]">61</onleft><onleft condition="Window.IsActive(addoninformation) | Window.IsActive(settings)">9990</onleft><onright>SetFocus(61)</onright><ondown>501</ondown><onup>501</onup></control>-->
		<control type="image">
			<left>1150</left>
			<top>0</top>
			<width>10</width>
			<height>960</height>
			<texture colordiffuse="$VAR[MenuListColorHighlightVar]">background.png</texture>
		</control>
	</include>
	<include name="Scrollbar_Horizontal">
		<control type="scrollbar" id="60">
			<visible allowhiddenfocus="true">Control.HasFocus(60) | Container.Scrolling</visible>
			<animation effect="fade" time="300" tween="sine" easing="inout" start="0" end="100">Visible</animation>
			<left>0</left>
			<top>1070</top>
			<width>FullScreenWidth</width>
			<height>10</height>
			<onup>50</onup>
			<ondown>50</ondown>
			<onleft>60</onleft>
			<onright>60</onright>
			<orientation>horizontal</orientation>
		</control>
	</include>
	<include name="OverlayIcons">
		<control type="group">
			<left>$PARAM[OverlayLeft]</left>
			<top>$PARAM[OverlayTop]</top>
			<control type="image">
				<width>60</width>
				<height>60</height>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[OverlayBGVar]</texture>
				<aspectratio align="center" aligny="top">keep</aspectratio>
			</control>
			<control type="image">
				<top>2</top>
				<left>2</left>
				<width>56</width>
				<height>56</height>
				<texture colordiffuse="ffffffff">$VAR[OverlayVar]</texture>
				<aspectratio align="center" aligny="top">keep</aspectratio>
			</control>
		</control>
	</include>
	<include name="OverlayIconsPercent">
		<control type="group">
			<left>$PARAM[OverlayLeft]</left>
			<top>$PARAM[OverlayTop]</top>
			<control type="image">
				<top>2</top>
				<left>2</left>
				<width>56</width>
				<height>56</height>
				<texture colordiffuse="ffffffff">$VAR[OverlayVarPercent]</texture>
				<aspectratio align="center" aligny="top">keep</aspectratio>
			</control>
		</control>
	</include>
	<include name="PlaylistButtons">
		<control type="button" id="613">
			<description>Go to playlist</description>
			<include>ButtonCommonValues</include>
			<label>31193</label>
			<onclick>ClearProperty(MediaMenu,Home)</onclick>
			<onclick>ActivateWindow(musicplaylist)</onclick>
			<visible>!String.IsEqual(Playlist.Length(music),0)</visible>
			<enable>!Window.IsActive(musicplaylist)</enable>
		</control>
		<control type="button" id="614">
			<description>Go to playlist</description>
			<include>ButtonCommonValues</include>
			<label>31194</label>
			<onclick>ClearProperty(MediaMenu,Home)</onclick>
			<onclick>ActivateWindow(videoplaylist)</onclick>
			<visible>!String.IsEqual(Playlist.Length(video),0)</visible>
			<enable>!Window.IsActive(videoplaylist)</enable>
		</control>
	</include>
	<include name="HiddenActorList">
		<control type="list" id="50">
			<include>HiddenList</include>
			<orientation>horizontal</orientation>
		</control>
	</include>
	<include name="HiddenSimilarList">
		<control type="list" id="88820">
			<include>HiddenList</include>
			<orientation>horizontal</orientation>
			<content>plugin://script.extendedinfo?info=similarmovies&amp;&amp;dbid=$INFO[ListItem.DBID]</content>
			<content>plugin://script.extendedinfo?info=similartvshows&amp;&amp;dbid=$INFO[ListItem.DBID]</content>
		</control>
	</include>
	<include name="HiddenSetList">
		<control type="list" id="88821">
			<include>HiddenList</include>
			<orientation>horizontal</orientation>
			<content>videodb://movies/sets/$INFO[ListItem.SetID]</content>
		</control>
	</include>
	<include name="HiddenYTList">
		<control type="list" id="88822">
			<include>HiddenList</include>
			<orientation>horizontal</orientation>
			<content>$VAR[VideoInfoYoutubePath]</content>
		</control>
	</include>
	<include name="MediaFlags">
		<control type="grouplist">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>80</height>
			<itemgap>00</itemgap>
			<align>$PARAM[align]</align>
			<orientation>horizontal</orientation>
			<include>VisibleFadeEffect</include>
			<control type="image">
				<height>80</height>
				<include>MediaFlagVars</include>
				<texture fallback="flags/blank.png">$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.VideoResolution) + ![$EXP[isTvshow] | $EXP[isSeason]]</visible>
			</control>
			<control type="image">
				<height>80</height>
				<include>MediaFlagVars</include>
				<texture fallback="flags/blank.png">$VAR[SourceFlagVar,flags/video/,.png]</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.VideoCodec) + ![$EXP[isTvshow] | $EXP[isSeason]]</visible>
			</control>
			<control type="image">
				<height>80</height>
				<include>MediaFlagVars</include>
				<texture fallback="flags/blank.png">$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.VideoAspect) + [![$EXP[isTvshow] | $EXP[isSeason]] | Window.IsActive(movieinformation)]</visible>
			</control>
			<control type="image">
				<height>80</height>
				<include>MediaFlagVars</include>
				<texture fallback="flags/blank.png">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.AudioCodec) + ![$EXP[isTvshow] | $EXP[isSeason]]</visible>
			</control>
			<control type="image">
				<height>80</height>
				<width>100</width>
				<include>MediaFlagVars</include>
				<texture fallback="flags/blank.png">$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.AudioChannels) + ![$EXP[isTvshow] | $EXP[isSeason]]</visible>
			</control>
			<control type="image">
				<height>80</height>
				<width>100</width>
				<include>MediaFlagVars</include>
				<texture>flags/cc.png</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.SubtitleLanguage) + ![$EXP[isTvshow] | $EXP[isSeason]]</visible>
			</control>
			<control type="image">
				<height>80</height>
				<include>MediaFlagVars</include>
				<texture fallback="flags/blank.png">resource://resource.images.studios.white/$INFO[ListItem.Studio,,.png]</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.Studio) + ![$EXP[isTvshow] | $EXP[isSeason]]</visible>
			</control>
			<control type="image">
				<height>80</height>
				<include>MediaFlagVars</include>
				<texture fallback="flags/blank.png">$VAR[RatingFlagVar]</texture>
				<align>center</align>
				<visible>!String.IsEmpty(ListItem.mpaa) + ![$EXP[isTvshow] | $EXP[isSeason]]</visible>
			</control>
		</control>
	</include>
	<!--
	<include name="MusicFlags">
		<control type="grouplist">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>80</height>
			<itemgap>20</itemgap>
			<align>$PARAM[align]</align>
			<orientation>horizontal</orientation>
			<include>VisibleFadeEffect</include>
			<control type="label">
				<height>80</height>
				<include>MusicFlagVars</include>
				<label>$INFO[Window(Home).Property(SkinHelper.ListItem.AlbumCount)]</label>
				<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.AlbumCount))</visible>
			</control>
			<control type="label">
				<height>80</height>
				<include>MusicFlagVars</include>
				<label>$INFO[Window(Home).Property(SkinHelper.ListItem.SongCount)]</label>
				<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.SongCount))</visible>
			</control>
			<control type="label">
				<height>80</height>
				<include>MusicFlagVars</include>
				<label>$INFO[Window(Home).Property(SkinHelper.ListItem.Duration)]</label>
				<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration))</visible>
			</control>
			<control type="label">
				<height>80</height>
				<include>MusicFlagVars</include>
				<label>$INFO[ListItem.AudioCodec,flags/audio/,.png]</label>
				<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="label">
				<height>80</height>
				<width>100</width>
				<include>MusicFlagVars</include>
				<label>$INFO[ListItem.AudioChannels,flags/channels/,.png]</label>
				<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
			</control>
			<control type="label">
				<height>80</height>
				<width>100</width>
				<include>MusicFlagVars</include>
				<label>flags/cc.png</label>
				<visible>!String.IsEmpty(ListItem.SubtitleLanguage)</visible>
			</control>
			<control type="label">
				<height>80</height>
				<include>MusicFlagVars</include>
				<label>resource://resource.labels.studios.white/$INFO[ListItem.Studio,,.png]</label>
				<visible>!Window.IsVisible(musicinformation) + !Window.IsVisible(songinformation)</visible>
			</control>
			<control type="label">
				<height>80</height>
				<include>MusicFlagVars</include>
				<label>$VAR[RatingFlagVar]</label>
				<visible>!Window.IsVisible(musicinformation) + !Window.IsVisible(songinformation)</visible>
			</control>
		</control>
	</include>
	-->
	<include name="GlobalSearchScrollbar">
		<control type="scrollbar" id="$PARAM[id]">
			<visible allowhiddenfocus="true">Control.HasFocus($PARAM[id]) | Container($PARAM[container]).Scrolling</visible>
			<animation effect="fade" time="300" tween="sine" easing="inout" start="0" end="100">Visible</animation>
			<left>1910</left>
			<top>120</top>
			<width>10</width>
			<height>960</height>
			<onleft>101</onleft>
			<onright>101</onright>
			<onup>$PARAM[id]</onup>
			<ondown>$PARAM[id]</ondown>
		</control>
	</include>
	<include name="AudioDSPPanelContent">
		<itemlayout height="138" width="860">
			<control type="image">
				<top>10</top>
				<left>10</left>
				<width>118</width>
				<height>118</height>
				<texture>$INFO[ListItem.Icon]</texture>
				<aspectratio aligny="center" align="center">keep</aspectratio>
			</control>
			<control type="label">
				<left>150</left>
				<top>10</top>
				<right>10</right>
				<height>60</height>
				<font>font15</font>
				<selectedcolor>$VAR[ColorHighlightVar]</selectedcolor>
				<label>$INFO[ListItem.Label2]: $INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<left>150</left>
				<top>70</top>
				<right>10</right>
				<height>60</height>
				<selectedcolor>$VAR[ColorHighlightVar]</selectedcolor>
				<label>$INFO[ListItem.Property(Description)]</label>
			</control>
		</itemlayout>
		<focusedlayout height="138" width="860">
			<control type="image">
				<width>100%</width>
				<height>100%</height>
				<texture colordiffuse="$VAR[ColorHighlightVar]">listselect_fo.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>10</left>
				<width>118</width>
				<height>118</height>
				<texture>$INFO[ListItem.Icon]</texture>
				<aspectratio aligny="center" align="center">keep</aspectratio>
			</control>
			<control type="label">
				<left>150</left>
				<top>10</top>
				<right>10</right>
				<height>60</height>
				<font>font15</font>
				<label>$INFO[ListItem.Label2]: $INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<left>150</left>
				<top>70</top>
				<right>10</right>
				<height>60</height>
				<label>$INFO[ListItem.Property(Description)]</label>
			</control>
		</focusedlayout>
	</include>
</includes>