<?xml version="1.0" encoding="utf-8"?>
<window type="dialog" id="142">
	<defaultcontrol always="true">9000</defaultcontrol>
	<onload>Action(enter)</onload>
	<onload>SetFocus(9000,11)</onload>
	<onunload>ClearProperty(RefreshItem,Home)</onunload>
	<coordinates>
		<left>0</left>
		<top>0</top>
		<origin x="0" y="0">true</origin>
	</coordinates>
	<controls>
		<control type="group">
			<animation effect="slide" tween="cubic" time="600" start="0,700" end="0,0" reversible="false">WindowOpen</animation>
			<animation effect="slide" tween="cubic" time="300" start="0,0" end="0,700" reversible="false">WindowClose</animation>
			<animation effect="slide" tween="cubic" time="600" start="0,700" end="0,0" reversible="false">Visible</animation>
			<animation effect="slide" tween="cubic" time="300" start="0,0" end="0,700" reversible="false">Hidden</animation>
			<include>VideoButtonsGroup</include>
			<control type="group" id="97631">
				<animation effect="slide" time="300" delay="0" start="0" end="0,483" tween="cubic" reversible="true" condition="!Window.IsVisible(DialogConfirm.xml) + !Window.IsVisible(DialogTextViewer.xml) + !Window.IsVisible(DialogButtonMenu.xml) + !Window.IsVisible(DialogKeyboard.xml) + !Window.IsVisible(DialogNumeric.xml) + !Window.IsVisible(DialogFullScreenInfo.xml) + !Window.IsVisible(VideoOSD.xml) + !Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(FileBrowser.xml) + !Window.IsVisible(DialogContextMenu.xml) + !Window.IsVisible(DialogSelect.xml) + [Integer.IsLessOrEqual(System.CurrentControlID, 6002) | Integer.IsGreaterOrEqual(System.CurrentControlID, 9050)] + !String.StartsWith(System.CurrentControlID, 8011) + [[String.IsEqual(Container(9000).ListItem.Property(widget),weather) + Weather.IsFetched] | [!Control.IsVisible(12345) + !String.IsEqual(Container(9000).ListItem.Property(widget),weather) + !String.IsEmpty(Container(9000).ListItem.Property(widgetName))]]">Conditional</animation>
				<animation effect="slide" time="300" delay="0" start="0" end="0,163" tween="cubic" reversible="true" condition="!Window.IsVisible(DialogConfirm.xml) + !Window.IsVisible(DialogTextViewer.xml) + !Window.IsVisible(DialogButtonMenu.xml) + !Window.IsVisible(DialogKeyboard.xml) + !Window.IsVisible(DialogNumeric.xml) + !Window.IsVisible(DialogFullScreenInfo.xml) + !Window.IsVisible(VideoOSD.xml) + !Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(FileBrowser.xml) + !Window.IsVisible(DialogContextMenu.xml) + !Window.IsVisible(DialogSelect.xml) + [Integer.IsLessOrEqual(System.CurrentControlID, 6002) | Integer.IsGreaterOrEqual(System.CurrentControlID, 9050)] + !String.StartsWith(System.CurrentControlID, 8011) + [String.IsEmpty(Container(9000).ListItem.Property(widgetName))]">Conditional</animation>
				<control type="group">
					<include>HomeDefault</include>
				</control>
				<control type="group">
					<left>-140</left>
					<top>195</top>
					<include>MenuHome3D</include>
				</control>
				<control type="group">
					<animation effect="slide" time="300" delay="1" start="0" end="0,-320" tween="cubic" reversible="true" condition="[[!ControlGroup(97631).HasFocus + Window.IsActive(script-skinshortcuts.xml)] | [!ControlGroup(97631).HasFocus + String.Contains(Window.Property(xmlfile), etting)] | Window.IsVisible(DialogFavourites.xml) | Window.IsVisible(DialogFullScreenInfo.xml) | Window.IsVisible(DialogConfirm.xml) | Window.IsVisible(DialogSubtitles.xml)  | Window.IsVisible(DialogSettings.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogAddonSettings.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(DialogSelect.xml) | [[Window.IsVisible(DialogButtonMenu.xml) | Control.Hasfocus(9010)] + [Control.IsVisible(12345) | String.IsEmpty(Container(9000).ListItem.Property(widgetName))]]] | [!Window.IsVisible(FileBrowser.xml) + !Window.IsVisible(DialogSelect.xml) + !Window.IsVisible(DialogAddonSettings.xml) + [!Window.IsVisible(movieinformation) + [String.IsEqual(Container(9000).ListItem.Property(widget),weather) + Weather.IsFetched] | [!Control.IsVisible(12345) + !String.IsEqual(Container(9000).ListItem.Property(widget),weather) + !String.IsEmpty(Container(9000).ListItem.Property(widgetName))]]]">Conditional</animation>
					<left>0</left>
					<top>797</top>
					<control type="progress" id="399">
						<left>30</left>
						<top>3333</top>
						<info>Player.ProgressCache</info>
					</control>
					<control type="progress" id="400">
						<top>3333</top>
						<info>Player.Progress</info>
					</control>
					<control type="slider" id="401">
						<top>3333</top>
						<orientation>horizontal</orientation>
					</control>
					<control type="image">
						<top>19</top>
						<left>19</left>
						<width>80</width>
						<height>80</height>
						<texture>progress/images/$INFO[Control.GetLabel(399),inner,%.png]</texture>
					</control>
					<control type="image">
						<top>19</top>
						<left>19</left>
						<width>80</width>
						<height>80</height>
						<texture>progress/images/$INFO[Control.GetLabel(401),middle,.png]</texture>
					</control>
					<control type="image">
						<top>19</top>
						<left>19</left>
						<width>80</width>
						<height>80</height>
						<texture>progress/images/$INFO[Control.GetLabel(400),outer,%.png]</texture>
					</control>
					<control type="group">
						<visible>![VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos)]</visible>
						<visible>!Window.IsActive(videoosd)</visible>
						<control type="button">
							<left>102</left>
							<top>17</top>
							<width>1715</width>
							<height>45</height>
							<font>font28_title</font>
							
							
							<textoffsetx>15</textoffsetx>
							<label>$VAR[PlayerTitleLabelVar]</label>
							<label2>$INFO[System.Time,, ]$INFO[Weather.Temperature,[B],[/B]]</label2>
							
							<texturefocus>blank.png</texturefocus>
							<visible>!VideoPlayer.Content(episodes)</visible>
						</control>
						<control type="button">
							<left>102</left>
							<top>17</top>
							<width>1715</width>
							<height>45</height>
							<font>font28_title</font>
							
							
							<textoffsetx>15</textoffsetx>
							<label>$INFO[VideoPlayer.Season,[B],[/B]X]$INFO[VideoPlayer.Episode,,. ]$VAR[PlayerTitleLabelVar]</label>
							<label2>$INFO[System.Time,, ]$INFO[Weather.Temperature,[B],[/B]]</label2>
							
							<texturefocus>blank.png</texturefocus>
							<visible>VideoPlayer.Content(episodes)</visible>
						</control>
						<control type="group">
							<animation effect="fade" start="100" end="0" delay="0" time="0" easing="out" condition="Window.IsVisible(DialogSettings.xml)" reversible="false">Conditional</animation>
							<control type="button">
								<left>102</left>
								<top>59</top>
								<width>1715</width>
								<height>45</height>
								<font>topbar</font>
								
								
								<textoffsetx>15</textoffsetx>
								<scroll>true</scroll>
								<scrollspeed>150</scrollspeed>
								<textcolor>$VAR[ColorMenuVar]</textcolor>
								<label>$INFO[VideoPlayer.Year,[B],[/B] ]$INFO[VideoPlayer.Genre]</label>
								<label2>$VAR[TopbarOSDLabel]</label2>
								
								<texturefocus>blank.png</texturefocus>
								<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos)</visible>
							</control>
							<control type="button">
								<left>102</left>
								<top>59</top>
								<width>1715</width>
								<height>45</height>
								<font>topbar</font>
								
								
								<textoffsetx>15</textoffsetx>
								<scroll>true</scroll>
								<scrollspeed>150</scrollspeed>
								<textcolor>$VAR[ColorMenuVar]</textcolor>
								<label>$INFO[VideoPlayer.TVShowTitle]</label>
								<label2>$VAR[TopbarOSDLabel]</label2>
								
								<texturefocus>blank.png</texturefocus>
								<visible>VideoPlayer.Content(episodes)</visible>
							</control>
						</control>
					</control>
				</control>
			</control>
			<control type="group">
				<animation effect="fade" start="100" end="0" delay="0" time="0" easing="out" condition="Window.IsVisible(DialogSettings.xml)" reversible="false">Conditional</animation>
				<top>604</top>
				<visible>![VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos)]</visible>
				<visible>!Window.IsActive(videoosd)</visible>
				<control type="image" id="12347">
					<left>60</left>
					<width>207</width>
					<height>310</height>
					<aspectratio aligny="center" align="center">scale</aspectratio>
					<texture background="true">$VAR[PlayerArtworkVar]</texture>
				</control>
				<control type="textbox">
					<animation effect="slide" end="-237" delay="0" time="0" easing="out" condition="String.IsEmpty(Control.GetLabel(12347))" reversible="false">Conditional</animation>
					<left>297</left>
					<width>1503</width>
					<height>220</height>
					<font>font30</font>
					<aligny>top</aligny>
					<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					<label>$VAR[PlayerPlotVar]</label>
				</control>
				<control type="grouplist">
					<animation effect="slide" end="103" delay="0" time="0" easing="out" condition="!String.IsEmpty(Control.GetLabel(12347))" reversible="false">Conditional</animation>
					<left>70</left>
					<top>220</top>
					<width>1740</width>
					<height>90</height>
					<font>topbar</font>
					<align>center</align>
					
					<itemgap>0</itemgap>
					<orientation>horizontal</orientation>
					<control type="label">
						<width>160</width>
						<height>90</height>
						<align>center</align>
						<label>$INFO[VideoPlayer.Studio]</label>
						<font>topbar</font>
						<wrapmultiline>true</wrapmultiline>
						<visible>String.IsEmpty(Control.GetLabel(800011))</visible>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="image">
						<width>160</width>
						<colordiffuse>$VAR[ColorTextVar]</colordiffuse>
						<include>MediaFlagVars</include>
						<texture>$INFO[VideoPlayer.VideoResolution,flags/resolution/,.png]</texture>
					</control>
					<control type="image">
						<width>160</width>
						<colordiffuse>$VAR[ColorTextVar]</colordiffuse>
						<include>MediaFlagVars</include>
						<texture>$INFO[VideoPlayer.AudioCodec,flags/audio/,.png]</texture>
					</control>
					<control type="image">
						<width>160</width>
						<colordiffuse>$VAR[ColorTextVar]</colordiffuse>
						<include>MediaFlagVars</include>
						<texture>$INFO[VideoPlayer.AudioChannels,flags/channels/,.png]</texture>
						<visible>VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="image">
						<width>160</width>
						<colordiffuse>$VAR[ColorTextVar]</colordiffuse>
						<include>MediaFlagVars</include>
						<texture>$VAR[VideoSourceFlagVar,flags/video/,.png]</texture>
					</control>
					<control type="image">
						<width>160</width>
						<colordiffuse>$VAR[ColorTextVar]</colordiffuse>
						<include>MediaFlagVars</include>
						<texture>$INFO[VideoPlayer.VideoAspect,flags/aspectratio/,.png]</texture>
					</control>
					<control type="image">
						<height>80</height>
						<width>100</width>
						<include>MediaFlagVars</include>
						<texture>flags/cc.png</texture>
						<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
					</control>
					<control type="image" id="800011">
						<colordiffuse>$VAR[ColorTextVar]</colordiffuse>
						<width>160</width>
						<include>MediaFlagVars</include>
						<bordersize>2</bordersize>
						<texture>resource://resource.images.studios.white/$INFO[VideoPlayer.Studio,,.png]</texture>
						<visible>!String.IsEmpty(Control.GetLabel(800011))</visible>
						<visible>!VideoPlayer.Content(livetv) + !VideoPlayer.Content(files)</visible>
					</control>
					<control type="image">
						<width>160</width>
						<colordiffuse>$VAR[ColorTextVar]</colordiffuse>
						<include>MediaFlagVars</include>
						<texture fallback="flags/mpaa/NR.png">$VAR[VideoRatingFlagVar]</texture>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
				</control>
				<!--<control type="image"><left>1590</left><top>25</top><width>400</width><height>45</height><aspectratio>keep</aspectratio><texture colordiffuse="$VAR[ColorHighlightVar]" fallback="rating0.png">$INFO[Player.StarRating]</texture></control>-->
			</control>
			<control type="group">
				<top>780</top>
				<visible>VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos)</visible>
				<visible>!Window.IsActive(videoosd)</visible>
				<control type="image">
					<width>FullScreenWidth</width>
					<height>300</height>
					<texture>background.png</texture>
					<colordiffuse>$VAR[ColorBackgroundVar]</colordiffuse>
				</control>
				<control type="image">
					<left>30</left>
					<top>30</top>
					<width>240</width>
					<height>240</height>
					<aspectratio aligny="center" align="center">keep</aspectratio>
					<texture background="true">$INFO[Player.Art(thumb)]</texture>
				</control>
				<control type="label">
					<left>300</left>
					<top>25</top>
					<width>1585</width>
					<height>40</height>
					<scroll>false</scroll>
					<font>font16_title</font>
					<label>$INFO[VideoPlayer.Artist,, - ]$INFO[VideoPlayer.Title]</label>
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(livetv)</visible>
					<control type="label">
						<left>300</left>
						<top>72</top>
						<width>1585</width>
						<height>40</height>
						<font>font13_title</font>
						<textcolor>$VAR[ColorHighlightVar]</textcolor>
						<label>$INFO[VideoPlayer.ChannelNumber,,: ]$INFO[VideoPlayer.ChannelName]</label>
					</control>
					<control type="label">
						<label>$INFO[VideoPlayer.Plot]</label>
						<left>300</left>
						<top>120</top>
						<width>1585</width>
						<height>40</height>
						<font>font14</font>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<left>300</left>
						<top>170</top>
						<width>1585</width>
						<height>40</height>
						<font>font14</font>
						<label>[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[19031]: [/COLOR]$INFO[VideoPlayer.NextTitle] $INFO[VideoPlayer.NextStartTime,(, - ]$INFO[VideoPlayer.NextEndTime,,)]</label>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(musicvideos)</visible>
					<left>300</left>
					<control type="textbox">
						<top>90</top>
						<width>1600</width>
						<height>108</height>
						<font>font14_textbox2</font>
						<aligny>top</aligny>
						<autoscroll time="2000" delay="2000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
						<label>[COLOR $VAR[ColorHighlightVar]]$INFO[VideoPlayer.Tagline,,[CR]][/COLOR]$INFO[VideoPlayer.Plot]</label>
					</control>
				</control>
				<control type="progress">
					<left>300</left>
					<top>233</top>
					<width>1587</width>
					<height>37</height>
					<info>Player.ProgressCache</info>
					<colordiffuse>$VAR[ColorBackgroundVar]</colordiffuse>
				</control>
				<control type="progress">
					<left>300</left>
					<top>233</top>
					<width>1587</width>
					<height>37</height>
					<info>Player.Progress</info>
				</control>
				<control type="label">
					<top>232</top>
					<left>315</left>
					<width>900</width>
					<height>35</height>
					<font>font13_title</font>
					<label>$INFO[Player.Time]$INFO[Player.Duration, / ]</label>
				</control>
				<control type="label">
					<top>232</top>
					<left>975</left>
					<width>900</width>
					<height>35</height>
					<font>font13_title</font>
					<align>right</align>
					<label>$INFO[Player.TimeRemaining]$INFO[Player.Duration, / ]</label>
				</control>
				<control type="label">
					<top>232</top>
					<left>300</left>
					<width>1587</width>
					<height>35</height>
					<font>font13_title</font>
					<align>center</align>
					<label>$VAR[SeekLabelVar]</label>
				</control>
			</control>
		</control>
	</controls>
</window>