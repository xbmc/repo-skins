<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="AboutTypeout">
		<value>$LOCALIZE[31199]</value>
	</variable>
	<variable name="LogosArt">
		<value condition="!String.IsEmpty(ListItem.Art(characterart))">$INFO[ListItem.Art(characterart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearart)) + String.IsEmpty(ListItem.Art(characterart))">$INFO[ListItem.Art(clearart)]</value>
		<value condition="String.IsEmpty(ListItem.Art(clearart)) + String.IsEmpty(ListItem.Art(characterart)) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Clearart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value>$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo)]</value>
	</variable>
	<variable name="SeekLabel">
		<value condition="Player.Forwarding">[B]$LOCALIZE[31991][/B] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.Rewinding">[B]$LOCALIZE[31990][/B] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">$INFO[Player.CacheLevel,[B],[/B]$LOCALIZE[15107] ,%]</value>
		<value condition="Player.IsTempo">[B]$LOCALIZE[31142]:[/B] ]$INFO[Player.PlaySpeed]</value>
	</variable>
	<variable name="SeekTimeLabelVar">
		<value condition="!String.IsEmpty(Player.SeekNumeric)">[B]$INFO[Player.SeekNumeric(hh:mm:ss)][/B]</value>
		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, / ]</value>
	</variable>
	<variable name="OnOffButton">
		<value condition="String.Contains(Control.GetLabel(416),*)"></value>
		<value></value>
	</variable>
	<variable name="StupidAscDescLabel">
		<value condition="String.IsEqual(Control.GetLabel(19), ascending)">$LOCALIZE[21430]</value>
		<value>$LOCALIZE[21431]</value>
	</variable>
	<variable name="WidgetMultiPath">
		<value condition="!String.IsEmpty(Window(Home).Property(FIVE_daemon_fallback))">$INFO[Window(Home).Property(FIVE_daemon_fallback)]</value>
		<value>fb.jpg</value>
	</variable>
	<variable name="MenuPanelBackground">
		<value condition="Window.IsVisible(SkinSettings.xml) + Container(9990).HasFocus(8)">adonic.jpg</value>
		<value condition="!Window.IsActive(movieinformation) + Control.HasFocus(501) + !String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!Window.IsActive(movieinformation) + Control.HasFocus(501) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Banner))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Banner)]</value>
		<value condition="!String.IsEmpty(Skin.String(View.Panel.Image))">$INFO[Skin.String(View.Panel.Image)]</value>
		<value condition="!Container(9990).HasFocus(8)">background.png</value>
		<value>background.png</value>
	</variable>
	<variable name="DialogSelectItemIcon">
		<value condition="String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[184])">$INFO[Skin.String(MenuDefaultIconsPath)]refresh.png</value>
		<value condition="String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[38023])">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconFavourite.png</value>
		<value>$INFO[Skin.String(MenuDefaultIconsPath)]input.png</value>
	</variable>
	<variable name="DialogSelectItemLabel1">
		<value condition="String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31972])"></value>
		<value condition="String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31973])"></value>
		<value></value>
	</variable>
	<variable name="DialogSelectItemLabel2">
		<value condition="String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31972])"></value>
		<value condition="String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31973])"></value>
		<value></value>
	</variable>
	<variable name="ShowmenuItem-7Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(-7).Art(poster))">$INFO[Container(9000).ListItem(-7).Art(poster)]</value>
		<value condition="Container(9000).ListItem(-7).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(-7).Icon]</value>
	</variable>
	<variable name="ShowmenuItem-6Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(-6).Art(poster))">$INFO[Container(9000).ListItem(-6).Art(poster)]</value>
		<value condition="Container(9000).ListItem(-6).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(-6).Icon]</value>
	</variable>
	<variable name="ShowmenuItem-5Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(-5).Art(poster))">$INFO[Container(9000).ListItem(-5).Art(poster)]</value>
		<value condition="Container(9000).ListItem(-5).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(-5).Icon]</value>
	</variable>
	<variable name="ShowmenuItem-4Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(-4).Art(poster))">$INFO[Container(9000).ListItem(-4).Art(poster)]</value>
		<value condition="Container(9000).ListItem(-4).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(-4).Icon]</value>
	</variable>
	<variable name="ShowmenuItem-3Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(-3).Art(poster))">$INFO[Container(9000).ListItem(-3).Art(poster)]</value>
		<value condition="Container(9000).ListItem(-3).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(-3).Icon]</value>
	</variable>
	<variable name="ShowmenuItem-2Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(-2).Art(poster))">$INFO[Container(9000).ListItem(-2).Art(poster)]</value>
		<value condition="Container(9000).ListItem(-2).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(-2).Icon]</value>
	</variable>
	<variable name="ShowmenuItem-1Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(-1).Art(poster))">$INFO[Container(9000).ListItem(-1).Art(poster)]</value>
		<value condition="Container(9000).ListItem(-1).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(-1).Icon]</value>
	</variable>
	<variable name="ShowmenuItem0Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem.Art(poster))">$INFO[Container(9000).ListItem.Art(poster)]</value>
		<value condition="Container(9000).ListItem.IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem.Icon]</value>
	</variable>
	<variable name="ShowmenuItem1Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(1).Art(poster))">$INFO[Container(9000).ListItem(1).Art(poster)]</value>
		<value condition="Container(9000).ListItem(1).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(1).Icon]</value>
	</variable>
	<variable name="ShowmenuItem2Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(2).Art(poster))">$INFO[Container(9000).ListItem(2).Art(poster)]</value>
		<value condition="Container(9000).ListItem(2).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(2).Icon]</value>
	</variable>
	<variable name="ShowmenuItem3Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(3).Art(poster))">$INFO[Container(9000).ListItem(3).Art(poster)]</value>
		<value condition="Container(9000).ListItem(3).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(3).Icon]</value>
	</variable>
	<variable name="ShowmenuItem4Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(4).Art(poster))">$INFO[Container(9000).ListItem(4).Art(poster)]</value>
		<value condition="Container(9000).ListItem(4).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(4).Icon]</value>
	</variable>
	<variable name="ShowmenuItem5Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(5).Art(poster))">$INFO[Container(9000).ListItem(5).Art(poster)]</value>
		<value condition="Container(9000).ListItem(5).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(5).Icon]</value>
	</variable>
	<variable name="ShowmenuItem6Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(6).Art(poster))">$INFO[Container(9000).ListItem(6).Art(poster)]</value>
		<value condition="Container(9000).ListItem(6).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(6).Icon]</value>
	</variable>
	<variable name="ShowmenuItem7Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(7).Art(poster))">$INFO[Container(9000).ListItem(7).Art(poster)]</value>
		<value condition="Container(9000).ListItem(7).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(7).Icon]</value>
	</variable>
	<variable name="ShowmenuItem8Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(8).Art(poster))">$INFO[Container(9000).ListItem(8).Art(poster)]</value>
		<value condition="Container(9000).ListItem(8).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(8).Icon]</value>
	</variable>
	<variable name="ShowmenuItem9Var">
		<value condition="!String.IsEmpty(Container(9000).ListItem(9).Art(poster))">$INFO[Container(9000).ListItem(9).Art(poster)]</value>
		<value condition="Container(9000).ListItem(9).IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[Container(9000).ListItem(9).Icon]</value>
	</variable>	
	<variable name="OSDStatus">
		<value condition="!String.IsEmpty(Player.SeekStepSize) + !String.Contains(Player.SeekStepSize,-) + Player.Seeking">x</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + Player.Seeking">z</value>
		<value condition="Player.Forwarding">f</value>
		<value condition="Player.Rewinding">r</value>
		<value condition="Player.Caching">z</value>
		<value condition="Player.Paused"></value>
		<value>v</value>
	</variable>
	<variable name="CommunityRatingColour">
		<value condition="Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),59)">green</value>
		<value condition="[Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),39) + !Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),59)]">selectedOrange</value>
		<value condition="Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),0) + !Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating),39)">selectedRed</value>
		<value>$VAR[ColorHighlightVar]</value>
	</variable>
	<variable name="IMDBIcon">
		<value></value>
	</variable>
	<variable name="RottenTomatoesIcon">
		<value condition="Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59)"></value>
		<value condition="!Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59)"></value>
	</variable>
	<variable name="RottenTomatoesIconColour">
		<value condition="Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59)">red</value>
		<value condition="!Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59)">green</value>
	</variable>
	<variable name="ColorUserRating">
		<value condition="Integer.IsGreater(ListItem.Userrating,6)">green</value>
		<value condition="Integer.IsGreater(ListItem.Userrating,3)">yellow</value>
		<value>red</value>
	</variable>
	<variable name="LabelUserRating">
		<value condition="Integer.IsGreater(ListItem.Userrating,5)"></value>
		<value></value>
	</variable>
	<variable name="LabelMenuTop">
		<value>$LOCALIZE[31006]</value>
	</variable>
	<variable name="ColorboxImage">
		<value condition="String.IsEqual(Window(home).Property(cfa_daemon_set),None)">$INFO[ListItem.Art(fanart)]</value>
		<value condition="String.IsEqual(Window(home).Property(DaemonFanartImageUpdating),0)">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[Window(home).Property(ImageFiltercfa)]</value>
	</variable>
	<variable name="GlobalBackgroundVar">
		<value condition="String.IsEqual(ListItem.Label, ..) + !String.IsEmpty(ListItem(1).Art(fanart)) + !Skin.HasSetting(Disable.Fanart)">$INFO[ListItem(1).Art(fanart)]</value>
		<value condition="String.IsEqual(ListItem.Label, ..) + String.IsEqual(ListItem(1).Label, $LOCALIZE[20366]) + !String.IsEmpty(ListItem(2).Art(fanart)) + !Skin.HasSetting(Disable.Fanart)">$INFO[ListItem(2).Art(fanart)]</value>
		<value condition="Skin.HasSetting(ViewFanart.Extra.Fanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart)) + !Skin.HasSetting(Disable.Fanart)">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(set.fanart))">$INFO[Container.Art(set.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Art(thumb),1)">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Art(thumb),2)">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Art(thumb),3)">$INFO[Window(Home).Property(SkinHelper.AllVideosBackground)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Art(thumb),4)">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Art(thumb),5)">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>
		<value condition="String.IsEqual(Container(9033).ListItem.Art(thumb),6)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanartExtension]</value>
		<value condition="!String.IsEmpty(Container(9033).ListItem.Art(thumb))">$INFO[Container(9033).ListItem.Art(thumb)]</value>
	</variable>
	<variable name="HomeBackgroundVar">

		<value condition="!String.IsEmpty(Skin.String(CustomHomeSlideshow))">$INFO[Skin.String(CustomHomeSlideshow)]</value>

		<!-- Fanart backgrounds -->
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),movieFanart)">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),tvFanart)">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),videoFanart)">$INFO[Window(Home).Property(SkinHelper.AllVideosBackground)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),musicFanart)">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),allFanart)">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</value>

		<!-- Weather background -->
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),weatherBackground)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanartExtension]</value>

		<!-- Playlist background -->
		<value condition="String.Contains(Container(9000).ListItem.Property(background),s:playlist)">$INFO[Container(9034).ListItem.Art(fanart)]</value>

		<!-- Single or multi image -->
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(background))">$INFO[Container(9000).ListItem.Property(background)]</value>

		<!-- Custom background -->
		<value condition="Window.IsVisible(MyWeather.xml)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanartExtension]</value>
	</variable>
	<variable name="GlobalFanartSetting">
		<value condition="Skin.HasSetting(Disable.Fanart)">$LOCALIZE[20445]: $LOCALIZE[24023]</value>
		<value>$LOCALIZE[20445]: $LOCALIZE[305]</value>
	</variable>
	<variable name="VizBackgroundLabelVar">
		<value condition="String.IsEqual(Skin.String(musicvis.background),fanart)">$LOCALIZE[20445]</value>
		<value condition="String.IsEqual(Skin.String(musicvis.background),bluralbum)">$LOCALIZE[31310]</value>
		<value condition="System.HasAddon(script.artistslideshow) + String.IsEqual(Skin.String(musicvis.background),artistslideshow)">$INFO[System.AddonTitle(script.artistslideshow)]</value>
		<value condition="String.IsEqual(Skin.String(musicvis.background),pixelfanart)">$LOCALIZE[31168]</value>
		<value condition="String.IsEqual(Skin.String(musicvis.background),posterizefanart)">$LOCALIZE[31169]</value>
		<value condition="String.IsEqual(Skin.String(musicvis.background),albumwall)">$LOCALIZE[31068]</value>
		<value>$LOCALIZE[231]</value>
	</variable>
	<variable name="OverlayVarPercent">
		<value>progress/images/$INFO[Window(home).Property(Show_Percentage),,percent.png]</value>
	</variable>
	<variable name="OverlayVar">
		<value condition="Container.ListItem.IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/images/$INFO[ListItem.PercentPlayed,overlay,.png]</value>
		<value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/images/overlay.png</value>
		<value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)"></value>
	</variable>
	<variable name="OverlayBGVar">
		<value>overlays/overlaybg.png</value>
	</variable>
	<variable name="MusicOSDRepeatButtonVar">
		<value condition="!Playlist.IsRepeat + !Playlist.IsRepeatOne"></value>
		<value condition="Playlist.IsRepeatOne"></value>
		<value condition="Playlist.IsRepeat"></value>
	</variable>
	<!--  List Label Vars -->
	<variable name="ListMainLabelVar">
		<value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
		<value condition="Window.IsActive(videoplaylist) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="ListSubLabelVar">
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Year,[B],[/B]]$INFO[ListItem.Genre, ]</value>
		<value condition="Container.Content(sets)">$INFO[ListItem.Rating]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20453]]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Premiered]</value>
		<value condition="Container.Content(albums) | Container.Content(songs)">$INFO[ListItem.Artist]</value>
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.PictureResolution]</value>
		<value condition="Window.IsActive(videoplaylist) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Premiered]</value>
		<value condition="!Container.Content(genres)">$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="PosterVar">
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(Container.Art(season.poster))">$INFO[Container.Art(season.poster)]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="ListItem.IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="FanartViewThumb">
		<value condition="Skin.HasSetting(Enable.FanartLandscape) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="Skin.HasSetting(Enable.FanartLogo) + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="ListItem.IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFolderBack.png</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="LandscapeArtVar">
		<value condition="ListItem.IsParentFolder + !String.IsEmpty(ListItem(1).Filename) + !String.IsEmpty(ListItem(1).Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem(1).Overlay,OverlayUnWatched.png) | ListItem(1).IsResumable]">$INFO[ListItem(1).Art(tvshow.landscape)]</value>
		<value condition="ListItem.IsParentFolder + !String.IsEmpty(ListItem(1).Filename) + String.IsEmpty(ListItem(1).Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem(1).Overlay,OverlayUnWatched.png) | ListItem(1).IsResumable]">special://skin/extras/misc/empty.jpg</value>
		<value condition="ListItem.IsParentFolder + !String.IsEmpty(ListItem(1).Filename)">$INFO[ListItem(1).Thumb]</value>

		<value condition="!String.IsEmpty(ListItem.Filename) + !String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Filename) + String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">special://skin/extras/misc/empty.jpg</value>
		<!--
		<value condition="!String.IsEmpty(ListItem.Art(landscape)) + Skin.HasSetting(Hide.Spoilers.Movies) + Container.Content(movies) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$INFO[ListItem.Art(landscape)]</value>
		<value condition="String.IsEmpty(ListItem.Art(landscape)) + Skin.HasSetting(Hide.Spoilers.Movies) + Container.Content(movies) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">special://skin/extras/misc/empty.jpg</value>
		-->
		<value condition="!String.IsEmpty(ListItem.Art(landscape)) + !Container.Content(episodes)">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart)) + !Container.Content(episodes)">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value condition="ListItem.IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFolderBack.png</value>
		<value>$INFO[Skin.String(MenuDefaultIconsPath)]fallback.png</value>
	</variable>
	<variable name="FanartVar">
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + !String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">special://skin/extras/misc/empty.jpg</value>
		<!--
		<value condition="!String.IsEmpty(ListItem.Art(landscape)) + Skin.HasSetting(Hide.Spoilers.Movies) + Container.Content(movies) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$INFO[ListItem.Art(landscape)]</value>
		<value condition="String.IsEmpty(ListItem.Art(landscape)) + Skin.HasSetting(Hide.Spoilers.Movies) + Container.Content(movies) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">special://skin/extras/misc/empty.jpg</value>
		-->
		<value condition="!String.IsEmpty(ListItem.Thumb) + Container.Content(episodes)">$INFO[ListItem.Thumb]</value>
		<value condition="ListItem.IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]folder.png</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="LogoVar">
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + !String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">special://skin/extras/misc/empty.jpg</value>
		<value condition="ListItem.IsParentFolder">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFolderBack.png</value>
		<value condition="!String.IsEmpty(ListItem.Thumb) + Container.Content(episodes)">$INFO[ListItem.Thumb]</value>
		<value>$INFO[ListItem.Art(clearlogo)]</value>
	</variable>
	<variable name="ExtraFanartVar">
		<value condition="Skin.HasSetting(Enable.Extra.Fanart) + !String.IsEmpty(ListItem.Art(extrafanart1))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)]</value>
		<value condition="Skin.HasSetting(Enable.Landscape.Art) + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="Skin.HasSetting(Enable.Landscape.Art) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="DurationVar">
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.Runtime))">$INFO[Window(Home).Property(NextAired.Runtime)]</value>
		<value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration]</value>
		<value>?</value>
	</variable>
	<variable name="OneOrMoreSeasonsVar">
		<value condition="String.IsEqual(ListItem.Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
		<value>$LOCALIZE[33054]</value>
	</variable>
	<variable name="OneOrMoreEpisodesVar">
		<value condition="String.IsEqual(ListItem.Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
		<value>$LOCALIZE[20360]</value>
	</variable>
	<variable name="OneOrMoreSeasonsExtVar">
		<value condition="String.IsEqual(Window.Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
		<value>$LOCALIZE[33054]</value>
	</variable>
	<variable name="OneOrMoreEpisodesExtVar">
		<value condition="String.IsEqual(Window.Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
		<value>$LOCALIZE[20360]</value>
	</variable>
	<variable name="VideoInfoPlotVar">
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$LOCALIZE[20370]</value>
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + Skin.HasSetting(Hide.Spoilers.Movies) + Container.Content(movies) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$LOCALIZE[20370]</value>
		<value condition="Skin.HasSetting(VideoInfoPlotToggle) + !String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
    	<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value>$INFO[Window(Home).Property(SkinHelper.ListItem.Plot)]</value>
	</variable>
	<variable name="PlayerPlotVar">
		<value condition="[Skin.HasSetting(Hide.Spoilers.TV) + !String.IsEmpty(VideoPlayer.Episode) + String.IsEmpty(VideoPlayer.EpisodeName)]">$LOCALIZE[20370]</value>
		<value condition="[Skin.HasSetting(Hide.Spoilers.Movies) + String.IsEmpty(VideoPlayer.Episode) + String.IsEmpty(VideoPlayer.EpisodeName)]">$LOCALIZE[20370]</value>
		<value>[COLOR $VAR[ColorHighlightVar]]$INFO[VideoPlayer.Tagline,, ][/COLOR]$INFO[VideoPlayer.Plot]</value>
	</variable>
	<variable name="VideoPlotVar">
		<value condition="Container.Content(seasons)">$INFO[Container.ShowPlot]</value>
		<value condition="Container.Content(sets) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Plot))">$INFO[Window(Home).Property(SkinHelper.ListItem.Plot)]</value>
		<value condition="!String.IsEmpty(ListItem.PlotOutline) + !Skin.HasSetting(VideoInfoPlotToggle)">$INFO[ListItem.PlotOutline]</value>
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + [!String.IsEmpty(ListItem.PlotOutline) | !String.IsEmpty(ListItem.Plot)] + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$LOCALIZE[20370]</value>
		<value condition="!String.StartsWith(Container.FolderPath,plugin) + [!String.IsEmpty(ListItem.PlotOutline) | !String.IsEmpty(ListItem.Plot)] + Skin.HasSetting(Hide.Spoilers.Movies) + Container.Content(movies) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$LOCALIZE[20370]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="OtherPlotVar">
		<value condition="Container.Content(albums) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="Container.Content(albums)">$LOCALIZE[414]</value>
		<value condition="Container.Content(artists) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="Container.Content(artists)">$LOCALIZE[547]</value>
	</variable>
	<variable name="MusicPlotVar">
		<value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]$INFO[ListItem.AddonDisclaimer, -- ]</value>
		<value condition="!String.IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="VideoPlotLocalizeVar">
		<value condition="Skin.HasSetting(VideoInfoPlotToggle)">$LOCALIZE[31045]</value>
		<value>$LOCALIZE[31044]</value>
	</variable>
	<variable name="SourceFlagVar">
		<value condition="[String.Contains(ListItem.filename,PDTV) | String.Contains(ListItem.filename,sdtv) | String.Contains(ListItem.filename,sd tv)]">sdtv</value>
		<value condition="[String.Contains(ListItem.Filename,hdtv) | String.Contains(ListItem.Filename,hd tv)]">hdtv</value>
		<value condition="[String.Contains(ListItem.Filename,hddvd) | String.Contains(ListItem.Filename,hd-dvd)]">hddvd</value>
		<value condition="ListItem.IsStereoscopic">bluray3d</value>
		<value condition="[String.Contains(ListItem.Filename,bluray) | String.Contains(ListItem.Filename,blu-ray) | String.Contains(ListItem.Filename,bdrip) | String.Contains(ListItem.Filename,brrip)]">bluray</value>
		<value condition="String.Contains(ListItem.Filename,dvb)">dvb</value>
		<value condition="String.Contains(ListItem.Filename,web-dl)">web-dl</value>
		<value condition="String.Contains(ListItem.Filename,dvd) | String.IsEqual(ListItem.FileExtension,iso) | String.IsEqual(ListItem.FileExtension,ifo)">dvd</value>
		<value>$INFO[ListItem.VideoCodec]</value>
	</variable>
	<variable name="VideoSourceFlagVar">
		<value condition="[String.Contains(Player.Filenameandpath,PDTV) | String.Contains(Player.Filenameandpath,sdtv)]">sdtv</value>
		<value condition="String.Contains(Player.Filenameandpath,hdtv)">hdtv</value>
		<value condition="[String.Contains(Player.Filenameandpath,hddvd) | String.Contains(Player.Filenameandpath,hd-dvd)]">hddvd</value>
		<value condition="VideoPlayer.IsStereoscopic">bluray3d</value>
		<value condition="[String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,brrip)]">bluray</value>
		<value condition="String.Contains(Player.Filenameandpath,dvb)">dvb</value>
		<value condition="String.Contains(Player.Filenameandpath,web-dl)">web-dl</value>
		<value condition="String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,.iso,Right) | String.Contains(Player.Filenameandpath,.ifo,Right)">dvd</value>
		<value>$INFO[VideoPlayer.VideoCodec]</value>
	</variable>
	<!-- InfoPanel -->
	<variable name="InfoPanelLabel1Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)] + !String.IsEmpty(Window(home).Property(Set.Movies.Director))">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[31000]:[/COLOR][CR]$INFO[Window(home).Property(Set.Movies.Director)]</value>
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[31000]:[/COLOR][CR]$INFO[ListItem.Director]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !String.IsEmpty(Window(Home).Property(NextAired.Status))">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[126]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.Status)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)]">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[515]:[/COLOR][CR]$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="InfoPanelLabel2Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)] + !String.IsEmpty(Window(home).Property(Set.Movies.Writer))">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[31001]:[/COLOR][CR]$INFO[Window(home).Property(Set.Movies.Writer)]</value>
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[31001]:[/COLOR][CR]$INFO[ListItem.Writer]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !String.IsEmpty(Window(Home).Property(NextAired.NextDate))">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[31010]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.NextDate),,: ]$INFO[Window(Home).Property(NextAired.NextTitle)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !String.IsEmpty(Window(Home).Property(NextAired.LatestDate))">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[31011]:[/COLOR][CR]$INFO[Window(Home).Property(NextAired.LatestNumber),, - ]$INFO[Window(Home).Property(NextAired.LatestTitle)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)]">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[31019]:[/COLOR][CR]$INFO[ListItem.Studio]</value>
	</variable>
	<variable name="InfoPanelLabel3Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[563]:[/COLOR][CR]$INFO[ListItem.RatingAndVotes]$INFO[ListItem.Top250, / $LOCALIZE[13409] #]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.Status))">[COLOR $VAR[ColorHighlightVar]]$INFO[ListItem.Property(TotalSeasons)]$VAR[OneOrMoreSeasonsVar, , / ]$INFO[ListItem.Property(TotalEpisodes),, ]$VAR[OneOrMoreEpisodesVar]:[/COLOR][CR]$INFO[ListItem.Property(UnWatchedEpisodes),, $LOCALIZE[16101]]</value>
		<value condition="Container.Content(tvshows)">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[20360]:[/COLOR][CR]$INFO[ListItem.Property(TotalEpisodes)]$INFO[ListItem.Property(UnWatchedEpisodes), (,[LOWERCASE] $LOCALIZE[16101][/LOWERCASE])]</value>
		<value condition="Container.Content(seasons)">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[20360]:[/COLOR][CR]$INFO[ListItem.Property(TotalEpisodes)]</value>
	</variable>
	<variable name="InfoPanelLabel4Var">
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)] + !String.IsEmpty(Window(home).Property(Set.Movies.Runtime))">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[2050]:[/COLOR][CR]$INFO[Window(home).Property(Set.Movies.Runtime),, $LOCALIZE[12391]]</value>
		<value condition="[Container.Content(movies) | Container.Content(episodes) | Container.Content(sets)]">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[2050]:[/COLOR][CR]$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(Window(Home).Property(NextAired.Runtime))">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[2050]:[/COLOR][CR]$VAR[DurationVar,, $LOCALIZE[12391]]</value>
		<value condition="Container.Content(tvshows)">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[33054]:[/COLOR][CR]$INFO[ListItem.Property(TotalSeasons)]</value>
		<value condition="Container.Content(seasons)">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[16101]:[/COLOR][CR]$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
	</variable>
	<variable name="BannerThumb">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(poster)]</value>
	</variable>
	<variable name="FloorLabelVar">
		<value condition="Container.Content(episodes) + String.Contains(Container.FolderPath,/recentlyaddedepisodes)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="FloorSubLabelVar">
		<value condition="Container.Content(episodes)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
		<value condition="Container.Content(musicvideos)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEmpty(ListItem.Genre)">$INFO[Window(Home).Property(Set.Movies.Genre)]</value>
		<value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year,[B],[/B] ]$INFO[ListItem.Genre]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="FloorLabel2Var">
		<value condition="Container.Content(artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Duration,, | ]$INFO[ListItem.Album]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
		<value condition="Container.Content()">$INFO[ListItem.Comment]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="SeekLabelVar">
		<value condition="Player.Paused + !Player.Caching">$LOCALIZE[112]</value>
		<value condition="Player.Playing + !Player.Seeking + !Player.DisplayAfterSeek | [Player.Paused + !Player.Caching]">$INFO[System.Time]$INFO[Player.FinishTime, - ,]</value>
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">$INFO[Player.CacheLevel,$LOCALIZE[15107] ,%]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekOffset]</value>
		<value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[31046]</value>
	</variable>
	<variable name="MusicSeekLabelVar">
		<value condition="Player.Playing + !Player.Seeking + !Player.DisplayAfterSeek">$INFO[System.Time]</value>
		<value condition="Player.Paused + !Player.Caching">$LOCALIZE[112]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekOffset]</value>
		<value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[31046]</value>
	</variable>
	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	<variable name="PlayerArtworkVar">
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.thumb))">$INFO[Player.Art(tvshow.Poster)]</value>
		<value>$INFO[Player.Art(Poster)]</value>
	</variable>
	<variable name="PlayerTitleLabelVar">
		<value condition="Player.ChapterCount">$INFO[Player.Title,[B],[/B] ]$INFO[player.chapter,$LOCALIZE[21396] , ]$INFO[player.chaptercount,[LIGHT]/ ,[/LIGHT]]</value>
		<value>$INFO[Player.Title]</value>
	</variable>
	<variable name="SkinSettingsDescriptionVar">
		<value condition="Control.HasFocus(100)">$LOCALIZE[31912]</value>
		<value condition="Control.HasFocus(101)">$LOCALIZE[31188]</value>
		<value condition="Control.HasFocus(102)">$LOCALIZE[31920]</value>
		<value condition="Control.HasFocus(103)">$LOCALIZE[31921]</value>
		<value condition="Control.HasFocus(104)">$LOCALIZE[31013]</value>
		<value condition="Control.HasFocus(106)">$LOCALIZE[31111]</value>
		<value condition="Control.HasFocus(108)">$LOCALIZE[31020]</value>
		<value condition="Control.HasFocus(109)">$LOCALIZE[31113]</value>
		<value condition="Control.HasFocus(111)">$LOCALIZE[31192]</value>
		<value condition="Control.HasFocus(112)">$LOCALIZE[31203]</value>
		<value condition="Control.HasFocus(113)">$LOCALIZE[31230]</value>
		<value condition="Control.HasFocus(114)">$LOCALIZE[31232]</value>
		<value condition="Control.HasFocus(115)">$LOCALIZE[31241]</value>
		<value condition="Control.HasFocus(200)">$LOCALIZE[31917]</value>
		<value condition="Control.HasFocus(201)">$LOCALIZE[31932]</value>
		<value condition="Control.HasFocus(202)">$LOCALIZE[31239]</value>
		<value condition="Control.HasFocus(203)">$LOCALIZE[31944]</value>
		<value condition="Control.HasFocus(204)">$LOCALIZE[31131]</value>
		<value condition="Control.HasFocus(207)">$LOCALIZE[31252]</value>
		<value condition="Control.HasFocus(208)">$LOCALIZE[31253]</value>
		<value condition="Control.HasFocus(303) | Control.HasFocus(304)">$LOCALIZE[31121]</value>
		<value condition="Control.HasFocus(305)">$LOCALIZE[31938]</value>
		<value condition="Control.HasFocus(306)">$LOCALIZE[31114]</value>
		<value condition="Control.HasFocus(312)">$LOCALIZE[31136]</value>
		<value condition="Control.HasFocus(402)">$LOCALIZE[31942]</value>
		<value condition="Control.HasFocus(403)">$LOCALIZE[36392]</value>
		<value condition="Control.HasFocus(406)">$LOCALIZE[31183]</value>
		<value condition="Control.HasFocus(407)">$LOCALIZE[31105]</value>
		<value condition="Control.HasFocus(408)">$LOCALIZE[31133]</value>
		<value condition="Control.HasFocus(409)">$LOCALIZE[31134]</value>
		<value condition="Control.HasFocus(502)">$LOCALIZE[31206]</value>
		<value condition="Control.HasFocus(503)">$LOCALIZE[31207]</value>
		<value condition="Control.HasFocus(504)">$LOCALIZE[31208]</value>
		<value condition="Control.HasFocus(505)">$LOCALIZE[31209]</value>
		<value condition="Control.HasFocus(506)">$LOCALIZE[31210]</value>
		<value condition="Control.HasFocus(507)">$LOCALIZE[31220]</value>
		<value condition="Control.HasFocus(600)">$LOCALIZE[31946]</value>
		<value condition="Control.HasFocus(601)">$LOCALIZE[31116]</value>
		<value condition="Control.HasFocus(602)">$LOCALIZE[31918]</value>
		<value condition="Control.HasFocus(603)">$LOCALIZE[31919]</value>
		<value condition="Control.HasFocus(605)">$LOCALIZE[31164]</value>
		<value condition="Control.HasFocus(700)">$LOCALIZE[31234]</value>
		<value condition="Control.HasFocus(701)">$LOCALIZE[31916]</value>
		<value condition="Control.HasFocus(702)">$LOCALIZE[31940]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[31968]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[31235]</value>
	</variable>
	<variable name="SkinShortcutsDescriptionVar">
		<value condition="Control.HasFocus(2110)">$LOCALIZE[31984][CR]$LOCALIZE[143]$INFO[Skin.String(MenuDefaultIconsPath), ,]</value>
		<value condition="Control.HasFocus(2111)">$LOCALIZE[31984][CR]$LOCALIZE[143]$INFO[Skin.String(MenuDefaultIconsPath), ,]</value>
		<value condition="Control.HasFocus(401)">$LOCALIZE[31923]</value>
		<value condition="Control.HasFocus(306)">$LOCALIZE[31243]</value>
		<value condition="Control.HasFocus(307)">$LOCALIZE[31126]</value>
		<value condition="Control.HasFocus(405)">$LOCALIZE[31150]</value>
		<value condition="Control.HasFocus(310)">$LOCALIZE[31925]</value>
		<value condition="Control.HasFocus(312)">$LOCALIZE[31149]</value>
		<value condition="Control.HasFocus(500)">$LOCALIZE[31933]</value>
		<value condition="Control.HasFocus(501)">$LOCALIZE[31162]</value>
	</variable>
	
	<variable name="RatingFlagVar">
		<value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">flags/mpaa/G.png</value>
		<value condition="String.Contains(ListItem.mpaa,PG-13)">flags/mpaa/PG-13.png</value>
		<value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">flags/mpaa/PG.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.mpaa,R)">flags/mpaa/R.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:NC-17)| String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">flags/mpaa/NC-17.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.IsEqual(ListItem.mpaa,16) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 16)">flags/mpaa/FSK-16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.IsEqual(ListItem.mpaa,6) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 6)">flags/mpaa/FSK-6.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.IsEqual(ListItem.mpaa,12) | String.Contains(ListItem.mpaa,FSK 12) | String.Contains(ListItem.mpaa,Rated 12)">flags/mpaa/FSK-12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.IsEqual(ListItem.mpaa,18) | String.Contains(ListItem.mpaa,FSK 18) | String.Contains(ListItem.mpaa,Rated 18)">flags/mpaa/FSK-18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany)|String.Contains(ListItem.mpaa,FSK)| String.Contains(ListItem.mpaa,o.A)| String.Contains(ListItem.mpaa,Rated 0)">flags/mpaa/FSK-0.png</value>
		<value condition="String.Contains(ListItem.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
		<value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
		<value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,partir de 3 ans) | String.Contains(ListItem.mpaa,partir de 6 ans)">flags/mpaa/csaU.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
		<value condition="String.Contains(ListItem.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
		<value condition="String.Contains(ListItem.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
		<value condition="String.Contains(ListItem.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Australia:)">$INFO[ListItem.MPAA,flags/mpaa/australia_,.png]</value>
		<value>$INFO[ListItem.MPAA,flags/mpaa/,.png]</value>
	</variable>
	<variable name="VideoRatingFlagVar">
		<value condition="String.Contains(VideoPlayer.mpaa,US:G) | String.Contains(VideoPlayer.mpaa,USA:G) | String.Contains(VideoPlayer.mpaa,Rated G)">flags/mpaa/G.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,PG-13)">flags/mpaa/PG-13.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Rated PG) | String.IsEqual(VideoPlayer.Mpaa,PG)">flags/mpaa/PG.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,US:R) | String.Contains(VideoPlayer.mpaa,USA:R) | String.Contains(VideoPlayer.mpaa,Rated R) | String.IsEqual(VideoPlayer.mpaa,R)">flags/mpaa/R.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,US:NC-17)| String.Contains(VideoPlayer.mpaa,USA:NC-17)| String.Contains(VideoPlayer.mpaa,Rated NC-17)">flags/mpaa/NC-17.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:16) | String.Contains(VideoPlayer.mpaa,ab 16) | String.IsEqual(VideoPlayer.mpaa,16) | String.Contains(VideoPlayer.mpaa,FSK 16) | String.Contains(VideoPlayer.mpaa,Rated 16)">flags/mpaa/FSK-16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:6)| String.Contains(VideoPlayer.mpaa,ab 6) | String.IsEqual(VideoPlayer.mpaa,6) | String.Contains(VideoPlayer.mpaa,FSK 16) | String.Contains(VideoPlayer.mpaa,Rated 6)">flags/mpaa/FSK-6.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:12) | String.Contains(VideoPlayer.mpaa,ab 12) | String.IsEqual(VideoPlayer.mpaa,12) | String.Contains(VideoPlayer.mpaa,FSK 12) | String.Contains(VideoPlayer.mpaa,Rated 12)">flags/mpaa/FSK-12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany:18) | String.Contains(VideoPlayer.mpaa,ab 18) | String.IsEqual(VideoPlayer.mpaa,18) | String.Contains(VideoPlayer.mpaa,FSK 18) | String.Contains(VideoPlayer.mpaa,Rated 18)">flags/mpaa/FSK-18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Germany)|String.Contains(VideoPlayer.mpaa,FSK)| String.Contains(VideoPlayer.mpaa,o.A)| String.Contains(VideoPlayer.mpaa,Rated 0)">flags/mpaa/FSK-0</value>
		<value condition="String.Contains(VideoPlayer.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:U) | String.Contains(VideoPlayer.mpaa,partir de 3 ans) | String.Contains(VideoPlayer.mpaa,partir de 6 ans)">flags/mpaa/csaU.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:-10) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 10 ans) | String.Contains(VideoPlayer.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:-12) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:-16) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,France:-18) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:Livre) | String.Contains(VideoPlayer.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:10) | String.Contains(VideoPlayer.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:12) | String.Contains(VideoPlayer.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:14) | String.Contains(VideoPlayer.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:16) | String.Contains(VideoPlayer.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
		<value condition="String.Contains(VideoPlayer.mpaa,Brazil:18) | String.Contains(VideoPlayer.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
		<value>$INFO[VideoPlayer.MPAA,flags/mpaa/,.png]</value>
	</variable>
	<variable name="VizArtistInfoVar">
		<value condition="Skin.HasSetting(Enable.VizInfo)">$LOCALIZE[31106]</value>
		<value condition="Skin.HasSetting(Enable.VizPersistent)">$LOCALIZE[31107]</value>
		<value>$LOCALIZE[1223]</value>
	</variable>
	<variable name="VideoSubLabelVar">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">$LOCALIZE[20360]: $INFO[ListItem.Property(TotalEpisodes)]$INFO[ListItem.Property(UnWatchedEpisodes), (,[LOWERCASE] $LOCALIZE[16101][/LOWERCASE])]</value>
		<value>$INFO[ListItem.Year,[B],[/B] ]$INFO[ListItem.RatingAndVotes,, ]$INFO[ListItem.Duration,[LIGHT][LOWERCASE], $LOCALIZE[12391][/LOWERCASE][/LIGHT]]</value>
	</variable>
	<variable name="HomeNowPlayingThumbVar">
		<value condition="![[Player.Playing | Player.HasAudio | Player.HasVideo] + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))] + !String.IsEmpty(Window(weather).Property(Current.FanartCode))">$VAR[WeatherIconVar]$INFO[Window(weather).Property(Current.FanartCode),,.png]</value>
		<value condition="[VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos)] + !String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="[Player.Playing | Player.HasVideo | Player.HasAudio] + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia)) + !String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value condition="!String.IsEmpty(Weather.Plugin) + !Weather.IsFetched">$INFO[Skin.String(MenuDefaultIconsPath)]none.png</value>
		<value condition="[Player.Playing | Player.HasAudio | Player.HasVideo] + !String.IsEmpty(Window(weather).Property(Current.FanartCode))">$VAR[WeatherIconVar]$INFO[Window(weather).Property(Current.FanartCode),,.png]</value>
		<value>$INFO[Skin.String(MenuDefaultIconsPath)]clock.png</value>
	</variable>
	<variable name="LibColorHighlightVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None)"></value>
		<value condition="!String.IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
		<value>highlight</value>
	</variable>
	<variable name="ListColorHighlightVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageFilterFIVE))">$INFO[Window(home).Property(ImageColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
		<value>highlight</value>
	</variable>
	<variable name="ColorHighlightVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageColorFIVE))">$VAR[ColorTextVar]</value>
		<value condition="!String.IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
		<value>highlight</value>
	</variable>
	<variable name="ColorHeaderVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageColorFIVE))">$INFO[Window(home).Property(ImageColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(backgroundcolor.name))">$INFO[Skin.String(backgroundcolor.name)]</value>
		<value>background</value>
	</variable>
	<variable name="ColorBackgroundVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + Skin.HasSetting(Colorbox.background) + !String.IsEmpty(Window(home).Property(ImageColorFIVE))">$INFO[Window(home).Property(ImageColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(backgroundcolor.name))">$INFO[Skin.String(backgroundcolor.name)]</value>
		<value>background</value>
	</variable>
	<variable name="ColorDialogVar">
		<value condition="!String.IsEmpty(Skin.String(dialogcolor.name))">$INFO[Skin.String(dialogcolor.name)]</value>
		<value>dialog</value>
	</variable>
	<variable name="ColorTopbarVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorFIVE))">$INFO[Window(home).Property(ImageCColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
		<value>highlight</value>
	</variable>
	<variable name="ColorTextVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorFIVE))">$INFO[Window(home).Property(ImageCColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(textcolor.name))">$INFO[Skin.String(textcolor.name)]</value>
		<value>maintext</value>
	</variable>
	<variable name="ColorBWVar">
		<value condition="Integer.IsGreater(Window(home).Property(BWImageColorFIVE),186)">white</value>
		<value>black</value>
	</variable>


	<variable name="MenuPanelBackgroundColorHighlightVar">
		<value condition="!Window.IsActive(movieinformation) + [[!ControlGroup(97631).HasFocus + Window.IsVisible(MyWeather.xml)] | [!ControlGroup(97631).HasFocus + Window.IsVisible(script-skinshortcuts.xml)] | [!ControlGroup(97631).HasFocus + String.Contains(Window.Property(xmlfile), etting)] | [[Control.HasFocus(8011) | Control.HasFocus(9010) | Control.HasFocus(9000) | Control.HasFocus(9001) | String.StartsWith(Window.Property(xmlfile), Dialog)] + [String.Contains(Window.Property(xmlfile), etting) | Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(home)] + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageColorSEVEN))]] + Skin.HasSetting(Colorbox.header)">$INFO[Window(home).Property(ImageColorSEVEN)]</value>
		<value condition="[!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageFilterFIVE))] + Skin.HasSetting(Colorbox.header)">$INFO[Window(home).Property(ImageColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(highlightcolor.name)) + Skin.HasSetting(Colorbox.header)">$INFO[Skin.String(highlightcolor.name)]</value>
		<value>FFFFFFFF</value>
	</variable>
	<variable name="MenuListColorHighlightVar">
		<value condition="!Window.IsActive(movieinformation) + [[!ControlGroup(97631).HasFocus + Window.IsVisible(MyWeather.xml)] | [!ControlGroup(97631).HasFocus + Window.IsVisible(script-skinshortcuts.xml)] | [!ControlGroup(97631).HasFocus + String.Contains(Window.Property(xmlfile), etting)] | [[Control.HasFocus(8011) | Control.HasFocus(9010) | Control.HasFocus(9000) | Control.HasFocus(9001) | String.StartsWith(Window.Property(xmlfile), Dialog)] + [String.Contains(Window.Property(xmlfile), etting) | Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(home)] + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageColorSEVEN))]]">$INFO[Window(home).Property(ImageColorSEVEN)]</value>
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageFilterFIVE))">$INFO[Window(home).Property(ImageColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
		<value>highlight</value>
	</variable>
	<variable name="ColorMenuVar">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + Window.IsVisible(DialogAddonSettings.xml)">$INFO[Window(home).Property(ImageCColorFIVE)]</value>
		<value condition="!Window.IsActive(movieinformation) + [[!ControlGroup(97631).HasFocus + Window.IsVisible(MyWeather.xml)] | [!ControlGroup(97631).HasFocus + Window.IsVisible(script-skinshortcuts.xml)] | [!ControlGroup(97631).HasFocus + String.Contains(Window.Property(xmlfile), etting)] | [[Control.HasFocus(8011) | Control.HasFocus(9010) | Control.HasFocus(9000) | Control.HasFocus(9001) | String.StartsWith(Window.Property(xmlfile), Dialog)] + [String.Contains(Window.Property(xmlfile), etting) | Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(home)] + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorSEVEN))]]">$INFO[Window(home).Property(ImageCColorSEVEN)]</value>
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorFIVE))">$INFO[Window(home).Property(ImageCColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
		<value>maintext</value>
	</variable>
	<variable name="IconColorVar">
		<value condition="Skin.HasSetting(ColorBox.Icons) + !Window.IsActive(movieinformation) + [[!ControlGroup(97631).HasFocus + Window.IsVisible(MyWeather.xml)] | [!ControlGroup(97631).HasFocus + Window.IsVisible(script-skinshortcuts.xml)] | [!ControlGroup(97631).HasFocus + String.Contains(Window.Property(xmlfile), etting)] | [[Control.HasFocus(8011) | Control.HasFocus(9010) | Control.HasFocus(9000) | Control.HasFocus(9001) | String.StartsWith(Window.Property(xmlfile), Dialog)] + [String.Contains(Window.Property(xmlfile), etting) | Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(MyWeather.xml) | Window.IsVisible(home)] + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorSEVEN))]]">$INFO[Window(home).Property(ImageCColorSEVEN)]</value>
		<value condition="Skin.HasSetting(ColorBox.Icons) + !String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorFIVE))">$INFO[Window(home).Property(ImageCColorFIVE)]</value>
		<value condition="!Skin.HasSetting(ColorBox.Icons)">FFFFFFFF</value>
		<value condition="!String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
		<value>maintext</value>
	</variable>
	<variable name="HeaderIconColorVar">
		<value condition="Skin.HasSetting(ColorBox.Icons)">FFFFFFFF</value>
		<value condition="!Skin.HasSetting(ColorBox.Icons)">FFFFFFFF</value>
		<value condition="!String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
		<value>maintext</value>
	</variable>

	<variable name="MenuListOldColorHighlightVar">
		<value condition="[Control.HasFocus(8011) | Control.HasFocus(9010) | Control.HasFocus(9000) | Control.HasFocus(9001)] + Window.IsActive(home) + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(OldImageColorSEVEN))">$INFO[Window(home).Property(OldImageColorSEVEN)]</value>
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageFilterFIVE))">$INFO[Window(home).Property(ImageColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
		<value>highlight</value>
	</variable>
	<variable name="OldColorMenuVar">
		<value condition="[Control.HasFocus(8011) | Control.HasFocus(9010) | Control.HasFocus(9000) | Control.HasFocus(9001)] + Window.IsActive(home) + !String.IsEqual(Window(home).Property(SEVEN_daemon_set),None) + !String.IsEmpty(Window(home).Property(OldImageCColorSEVEN))">$INFO[Window(home).Property(OldImageCColorSEVEN)]</value>
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageCColorFIVE))">$INFO[Window(home).Property(ImageCColorFIVE)]</value>
		<value condition="!String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
		<value>maintext</value>
	</variable>


	<variable name="ColorRecordingVar">
		<value condition="Player.Recording">ffff0000</value>
		<value condition="!Player.Recording + !String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
		<value>maintext</value>
	</variable>
	<variable name="ArtLabelVar">
		<value condition="Skin.HasSetting(Artwork.Toggle)">$LOCALIZE[20445]</value>
		<value>$LOCALIZE[20021]</value>
	</variable>
	<variable name="Art2LabelVar">
		<value condition="Skin.HasSetting(Enable.Extra.Fanart) + !String.IsEmpty(ListItem.Art(extrafanart1))">$LOCALIZE[31118]</value>
		<value condition="Skin.HasSetting(Enable.Landscape.Art) + !String.IsEmpty(ListItem.Art(landscape))">$LOCALIZE[31100]</value>
		<value>$LOCALIZE[20445]</value>
	</variable>
	<variable name="SortDirection">
		<value condition="Container.SortDirection(Ascending)">$LOCALIZE[31050]</value>
		<value condition="Container.SortDirection(Descending)">$LOCALIZE[31051]</value>
	</variable>
	<variable name="WeatherIconVar">
		<value condition="System.HasAddon(script.image.resource.select) + !String.IsEmpty(Skin.String(weathericons.path))">$INFO[Skin.String(weathericons.path)]</value>
		<value>resource://resource.images.weathericons.default/</value>
	</variable>
	<variable name="WeatherThumbVar">
		<value condition="System.HasAddon(script.image.resource.select) + !String.IsEmpty(Skin.String(weatherfanart.path))">$INFO[Skin.String(weatherfanart.path)]$INFO[Window.Property(Current.FanartCode)]$VAR[WeatherFanartExtension]</value>
		<value>resource://resource.images.weatherfanart.default/</value>
	</variable>
	<variable name="WidgetIconLabel">
		<value condition="!String.IsEmpty(Container(211).ListItem.Property(widgetIcon))">$INFO[Container(211).ListItem.Property(widgetIcon)]</value>
		<value>$LOCALIZE[31016]</value>
	</variable>
    <variable name="WeatherFanartExtension">
        <value condition="Skin.HasSetting(weatherfanart.multi)">/</value>
        <value>.jpg</value>
    </variable>
    <variable name="HeaderIcon">
		<value condition="Window.IsVisible(SkinSettings.xml) + Container(9990).HasFocus(8)">BLOB.png</value>
		<value condition="Control.HasFocus(501) + !String.IsEmpty(ListItem.Art(discart))">$INFO[ListItem.Art(discart)]</value>
        <value condition="Control.HasFocus(501) + Window.IsVisible(MyMusicNav.xml) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.DiscArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.DiscArt)]</value>
		<value condition="String.IsEqual(ListItem.Label, ..)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFolderBack.png</value>
		<value condition="Window.IsVisible(movieinformation)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
		<value condition="Window.IsVisible(musicinformation)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
		<value condition="Window.IsVisible(songinformation)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
		<value condition="Window.IsVisible(script-globalsearch-infodialog.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
		<value condition="Window.IsVisible(script-globalsearch-infodialog.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
    	<value condition="Window.IsVisible(SettingsProfile.xml) + !String.IsEmpty(Container(2).Listitem.Icon)">$INFO[Container(2).Listitem.Icon]</value>
    	<value condition="Window.IsActive(script-The Big Picture-main.xml)">$INFO[System.AddonIcon(script.image.bigpictures)]</value>
        <value condition="Player.Muted">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconMute.png</value>
        <value condition="Window.IsVisible(DialogFavourites.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconFavourite.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.program.super.favourites/)">SuperFavourites.png</value>
        <value condition="Player.HasAudio + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation)]">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMusicAlbums.png</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation)]">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultHardDisk.png</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(movies) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation)]">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultVideo.png</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(episodes) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation)]">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultTVShows.png</value>
        <value condition="Player.HasVideo + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultVideo.png</value>
        <value condition="Window.IsVisible(script-Rom_Collection_Browser-main.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultProgram.png</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-YoutubeList.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]youtube.png</value>
        <value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultHardDisk.png</value>
        <value condition="Window.IsVisible(script-globalsearch-main.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconSearch.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher/) | Window.IsActive(programs)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultProgram.png</value>
        <value condition="String.Contains(Container.FolderPath,sources://)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFile.png</value>
        <value condition="Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultPlaylist.png</value>
        <value condition="String.Contains(Container.FolderPath,special://videoplaylists/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultPlaylist.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultPlaylist.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/video/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFolderBack.png.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/music/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFolderBack.png.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/mixed/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFolderBack.png.png</value>
        <value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMusicAlbums.png</value>
        <value condition="String.Contains(Container.FolderPath,library://video/movies/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="String.Contains(Container.FolderPath,library://video/tvshows/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultTVShows.png</value>
        <value condition="String.Contains(Container.FolderPath,videodb://movies/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="String.Contains(Container.FolderPath,videodb://tvshows/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultTVShows.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="Container.Content(movies)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsVisible(script-lazytv-BigScreenList.xml) | Window.IsVisible(script-lazytv-main.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultTVShows.png</value>
        <value condition="Container.Content(songs)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMusicAlbums.png</value>
        <value condition="Container.Content(livetv)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultHardDisk.png</value>
        <value condition="Container.Content(files)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFile.png</value>
        <value condition="Container.Content(plugins)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="Container.Content(addons)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultAddon.png</value>
        <value condition="String.Contains(Container.FolderPath,videodb://musicvideos/)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMusicAlbums.png</value>
        <value condition="Window.IsVisible(MyPics.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultPicture.png</value>
        <value condition="Window.IsVisible(MyPrograms.xml) | Window.IsVisible(AddonBrowser.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultAddon.png</value>
        <value condition="Window.IsVisible(weather)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultAddonWeather.png</value>
        <value condition="Window.IsVisible(SettingsSystemInfo.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconSettings.png</value>
        <value condition="Window.IsVisible(SettingsCategory.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconSettings.png</value>
        <value condition="Window.IsVisible(settings)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconSettings.png</value>
        <value condition="Window.IsVisible(SkinSettings.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultAddonSkin.png</value>
        <value condition="Window.IsVisible(EventLog.xml) | Window.IsVisible(profiles)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconSettings.png</value>
        <value condition="Window.IsVisible(FileManager.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultFile.png</value>
        <value condition="Window.IsVisible(MyVideoNav.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultMovies.png</value>
        <value condition="Window.IsVisible(movieinformation)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
        <value condition="Window.IsVisible(DialogMusicInfo.xml)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
        <value condition="Window.IsActive(home)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconHome.png</value>
        <value>$INFO[Skin.String(MenuDefaultIconsPath)]DefaultActor.png</value>
    </variable>
	<variable name="BreadcrumbsVar">
    	<value condition="Window.IsVisible(DialogSubtitles.xml)">[B]$LOCALIZE[24012][/B]</value>
    	<value condition="Window.IsVisible(VideoOSD.xml) | Window.IsVisible(MusicOSD.xml)">$VAR[TopbarFadeLabel1]</value>
    	<value condition="[Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogKeyboard.xml) | Window.IsVisible(DialogNumeric.xml)] + [String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31973]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31972]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31999]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[32000]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[32002]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[32001]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[742]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[353]) | String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[31974])]">$INFO[Window(Home).Property(RefreshItem),[B],[/B]]</value>
    	<value condition="String.IsEqual(Window(Home).Property(RefreshItem),$LOCALIZE[184])">$INFO[ListItem.Label,[B],[/B]]$INFO[Window(Home).Property(RefreshItem), [LIGHT],[/LIGHT]]</value>
    	<value condition="Window.IsVisible(shutdownmenu)">[B]$LOCALIZE[13005][/B]</value>
		<value condition="Window.IsActive(script-script.extendedinfo-DialogInfo.xml)">$INFO[Window.Property(label),[B],[/B]]</value>
 		<value condition="Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml)">$INFO[Window.Property(title),[B],[/B]]</value>
		<value condition="Window.IsActive(movieinformation) + String.IsEqual(ListItem.DBTYPE,episode)">$INFO[ListItem.Season,[B],[/B]x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title,[LIGHT],[/LIGHT]]</value>
		<value condition="Window.IsActive(movieinformation)">$INFO[ListItem.Label,[B],[/B]]</value>
		<value condition="Window.IsActive(DialogMusicInfo.xml)">$VAR[MusicInfoHeading]</value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(songinformation)">$VAR[MusicInfoHeading]</value>
		<value condition="Window.IsActive(favourites)">[B]$LOCALIZE[1036][/B]</value>
		<value condition="String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher/)">$INFO[System.AddonTitle(plugin.program.advanced.launcher),[B],[/B]]</value>
		<value condition="Window.IsActive(script-The Big Picture-main.xml)">$INFO[Container(100).ListItem.Property(album_title),[B],[/B]]</value>
		<value condition="Window.IsActive(addoninformation) + !Window.IsActive(textviewer)">$INFO[ListItem.AddonName,[B],[/B]]</value>
		<value condition="Window.IsActive(script-lazytv-BigScreenList.xml) | Window.IsActive(script-lazytv-main.xml)">$INFO[System.AddonTitle(script.lazytv),[B],[/B]]</value>
		<value condition="Window.IsActive(script-Rom_Collection_Browser-main.xml)">$INFO[System.AddonTitle(service.rom.collection.browser),[B],[/B]]</value>
		<value condition="Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)">$INFO[System.AddonTitle(script.tv.show.next.aired),[B],[/B]]</value>
		<value condition="Window.IsActive(script-script.extendedinfo-VideoList.xml)">$INFO[System.AddonTitle(script.extendedinfo),[B],[/B]]</value>
		<value condition="Window.IsActive(script-script.extendedinfo-YoutubeList.xml)">[B]$LOCALIZE[31132][/B]</value>
		<value condition="Window.IsActive(script-globalsearch-main.xml)">$INFO[System.AddonTitle(script.globalsearch),[B],[/B]]</value>
		<value condition="Window.IsActive(settings) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(profiles) | Window.IsActive(skinsettings)">[B]$LOCALIZE[5][/B]</value>
		<value condition="Window.IsActive(TVGuide) | Window.IsActive(RadioGuide)">[B]$LOCALIZE[19069][/B]</value>
		<value condition="Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)">[B]$LOCALIZE[19163][/B]</value>
		<value condition="Window.IsActive(TVTimers) | Window.IsActive(RadioTimers)">[B]$LOCALIZE[19040][/B]</value>
		<value condition="Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)">[B]$LOCALIZE[137][/B]</value>
		<value condition="Window.IsActive(eventlog)">[B]$LOCALIZE[14111][/B]$INFO[Control.GetLabel(21),[B] - ,[/B]]</value>
		<value condition="Window.IsActive(home)">[B]$LOCALIZE[10000][/B]</value>
		<value condition="Window.IsActive(MyWeather.xml)">[B]$LOCALIZE[8][/B]</value>
		<value condition="!Window.IsActive(home) + String.StartsWith(System.CurrentControlID, 8011) + Control.IsVisible(50) + !String.IsEmpty(Container.Content)">$INFO[Container.Content,[B],[/B]]</value>
		<value condition="!Window.IsActive(home) + String.StartsWith(System.CurrentControlID, 9010) + Control.IsVisible(50) + !String.IsEmpty(Container.Content)">$INFO[Container.Content,[B],[/B]]</value>
		<value condition="!Window.IsActive(home) + String.StartsWith(System.CurrentControlID, 8011) + !Window.IsActive(addonbrowser) + !String.IsEmpty(Container(9000).ListItem.Label)">$INFO[Container(9000).ListItem.Label,[B],[/B]]</value>
		<value condition="!Window.IsActive(home) + String.StartsWith(System.CurrentControlID, 9010) + !Window.IsActive(addonbrowser) + !String.IsEmpty(Container(9000).ListItem.Label)">$INFO[Container(9000).ListItem.Label,[B],[/B]]</value>
		<value condition="!String.IsEmpty(Container.Content)">$INFO[Container.Content,[B],[/B]]</value>
		<value condition="!String.IsEmpty(System.CurrentWindow)">$INFO[System.CurrentWindow,[B],[/B]]</value>
		<value>$LOCALIZE[31004,[B],[/B]]</value>
	</variable>
    <variable name="HeaderSubLabel">
    	<!-- 
    	<value condition="Control.HasFocus(50) + String.IsEmpty(Window(Home).Property(RefreshItem)">$INFO[Container.NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="!Window.IsActive(movieinformation) +  + String.IsEmpty(Window(Home).Property(RefreshItem) + !Window.IsActive(home) + [!String.StartsWith(System.CurrentControlID, 90) | String.StartsWith(System.CurrentControlID, 80) | String.StartsWith(System.CurrentControlID, 9010)]">$INFO[Container.NumItems,, $LOCALIZE[31025]]</value>
		-->
    	<value condition="Window.IsActive(script-script.extendedinfo-DialogInfo.xml)">$INFO[Window.Property(AlsoKnownAs)]</value>
     	<value condition="Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) + !String.IsEmpty(Window.Property(tagline))">$INFO[Window.Property(tagline)]</value>
     	<value condition="Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) + String.IsEmpty(Window.Property(tagline))">$INFO[Window.Property(originaltitle)]</value>
		<!--
    	<value condition="Window.IsActive(movieinformation) + String.IsEqual(ListItem.DBTYPE,movie) + !String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
    	<value condition="Window.IsActive(movieinformation) + String.IsEqual(ListItem.DBTYPE,movie) + String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.OriginalTitle]</value>
		<value condition="Window.IsActive(movieinformation) + String.IsEqual(ListItem.DBTYPE,tvshow) + !String.IsEmpty(Window(Home).Property(NextAired.Status))">$INFO[Window(Home).Property(NextAired.Status),[I],[/I]]</value>
    	<value condition="Window.IsActive(movieinformation) + String.IsEqual(ListItem.DBTYPE,episode) + !String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		-->
		<value condition="!Window.IsActive(movieinformation) + Control.HasFocus(501) + !String.IsEmpty(ListItem.Label)">$INFO[ListItem.Label]</value>
    	<value condition="Window.IsActive(movieinformation) + String.IsEqual(ListItem.DBTYPE,musicvideo) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
    	<value condition="Window.IsActive(DialogMusicInfo.xml) + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))">$VAR[MusicInfoSubheading]</value>
		<value condition="Window.IsActive(songinformation) + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))">$VAR[MusicInfoSubheading]</value>
    	<value condition="Window.IsVisible(home) + Window.IsActive(DialogContextMenu.xml)">$LOCALIZE[31246]</value>
    	<value condition="Window.IsActive(script-The Big Picture-main.xml)">$INFO[Container(100).ListItem.Label]</value>
    	<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(1)">$INFO[Container(200).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(2)">$INFO[Container(201).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(3)">$INFO[Container(202).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(4)">$INFO[Container(203).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(5)">$INFO[Container(204).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(6)">$INFO[Container(205).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(7)">$INFO[Container(206).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(8)">$INFO[Container(207).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(9)">$INFO[Container(208).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(10)">$INFO[Container(209).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(11)">$INFO[Container(210).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(12)">$INFO[Container(211).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(13)">$INFO[Container(212).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(14)">$INFO[Container(213).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(15)">$INFO[Container(214).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(16)">$INFO[Container(215).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsVisible(script-lazytv-BigScreenList.xml) | Window.IsVisible(script-lazytv-main.xml)">$INFO[Container(655).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(filemanager) + [Control.HasFocus(20) | Control.HasFocus(30)]">$INFO[Container(20).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(filemanager) + [Control.HasFocus(21) | Control.HasFocus(31)]">$INFO[Container(21).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsVisible(DialogMediaSource.xml)">$LOCALIZE[1022]</value>
    	<value condition="Window.IsActive(script-globalsearch-main.xml)">$LOCALIZE[31186] "$INFO[Window.Property(GlobalSearch.SearchString)]"</value>
    	<value condition="Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-YouTubeList.xml)">$INFO[Window.Property(TotalItems),, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(profiles) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[13200]</value>
    	<value condition="Window.IsActive(systeminfo) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$INFO[Control.GetLabel(52)]</value>
    	<value condition="Window.IsActive(favourites) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$INFO[Container(450).NumItems,, $LOCALIZE[31025]]</value>
    	<value condition="Window.IsActive(systemsettings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[13000]</value>
    	<value condition="Window.IsActive(servicesettings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[13279]</value>
    	<value condition="Window.IsActive(pvrsettings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[19020]</value>
    	<value condition="Window.IsActive(skinsettings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[166]</value>
    	<value condition="Window.IsActive(playersettings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[16003]</value>
    	<value condition="Window.IsActive(mediaSettings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[14022]</value>
    	<value condition="Window.IsActive(interfacesettings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$LOCALIZE[14206]</value>
    	<value condition="Window.IsActive(settings) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$INFO[System.FriendlyName]</value>
    	<value condition="Window.IsActive(weather) + !ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)">$INFO[Window(weather).Property(Location)]</value>
    	<value condition="Window.IsActive(home) + Window.IsVisible(virtualkeyboard)">$LOCALIZE[137]</value>
    	<value condition="Window.IsActive(home) + Window.IsVisible(busydialog)">$LOCALIZE[503]</value>
    	<!-- 
    	<value condition="[!ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)]">$VAR[LibraryStatsVar]</value>
		-->
    	<value condition="!Window.IsActive(movieinformation) + String.StartsWith(ListItem.Path, plugin:) + !String.IsEmpty(Container.FolderName)">$INFO[Container.FolderName]</value>
    	<value condition="Container.Content(songs) + !Window.IsActive(DialogButtonMenu.xml)">$INFO[ListItem.Album,, ]$INFO[ListItem.Year,[LIGHT],[/LIGHT]]</value>
    	<value condition="!Window.IsActive(home) + ControlGroup(97631).HasFocus + !Window.IsActive(DialogButtonMenu.xml)">$INFO[Container(9000).ListItem.Label]</value>
    	<value condition="Window.IsActive(home) | ControlGroup(97631).HasFocus + !Window.IsActive(DialogButtonMenu.xml)">$INFO[Container(9000).ListItem.Label]</value>
    	<value condition="[!ControlGroup(97631).HasFocus + Window.IsActive(DialogPictureInfo.xml)] + !Window.IsActive(DialogButtonMenu.xml)">$INFO[ListItem.Label,, ]$INFO[Container(50).ListItem.Date,[LIGHT],[/LIGHT]]</value>
    	<value condition="Skin.HasSetting(Enable.Library.Stats) + [!ControlGroup(97631).HasFocus + !Window.IsActive(movieinformation)] + !Window.IsActive(DialogButtonMenu.xml)">$INFO[ListItem.Genre,, ]$INFO[ListItem.Year,[LIGHT],[/LIGHT]]</value>
    	<!-- 
		<value condition="!Window.IsActive(movieinformation) + String.IsEmpty(Window(Home).Property(RefreshItem)">$INFO[Container.NumItems,, $LOCALIZE[31025]]</value>
		-->
	</variable>
    <variable name="TopbarFadeLabel1">
    	<value condition="Window.IsVisible(shutdownmenu) + Window.IsVisible(VideoOSD.xml)">[B]$LOCALIZE[13005][/B]</value>
    	<value condition="[![[Player.Playing | Player.HasAudio | Player.HasVideo] + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))] | Window.IsActive(tvchannels)] + !String.IsEmpty(Weather.Plugin)">$INFO[Weather.Temperature,[B],[/B]]</value>
    	<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Season,[B],[/B]]$INFO[VideoPlayer.Episode,X,. ]$INFO[Player.Title,[LIGHT],[/LIGHT]]</value>
    	<value>$INFO[Player.Title,[B],[/B]]</value>
    </variable>
    <variable name="TopbarFadeLabel2">
    	<value condition="![[Player.Playing | Player.HasAudio | Player.HasVideo] + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))] | Window.IsActive(tvchannels)">$INFO[System.Time]</value>
    	<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelNumber,, ]$INFO[VideoPlayer.ChannelName,[B],[/B]]</value>
    	<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Premiered,, ]$INFO[VideoPlayer.TvShowTitle,[B],[/B]]</value>
    	<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Genre,[B],[/B]]</value>
    	<value condition="VideoPlayer.Content(musicvideos)">$INFO[VideoPlayer.Artist,[B],[/B]]</value>
    	<value condition="Player.HasAudio + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia)) + !String.IsEmpty(MusicPlayer.Artist)">$INFO[MusicPlayer.Artist,, ]$INFO[MusicPlayer.Album,[B],[/B]]</value>
    	<value condition="!String.IsEmpty(Player.Title) + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))">$INFO[Player.Time,, / ]$INFO[Player.Duration,[B],[/B]]</value>
    </variable>
    <variable name="TopbarOSDLabel">
    	<value condition="!String.IsEmpty(Player.Title) + String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia))">$INFO[Player.Time,[LIGHT],[/LIGHT]] $INFO[Player.TimeRemaining,[,]] $INFO[Player.Duration,[B],[/B]]</value>
    </variable>
	<variable name="WidgetNameLabelVar">
    	<value condition="!ControlGroup(97631).HasFocus + Window.IsVisible(shutdownmenu)">$INFO[System.CurrentControl,[B],[/B]]</value>
    	<value condition="!ControlGroup(97631).HasFocus + Window.IsVisible(custom_1121_Dependencies.xml) + !Window.IsVisible(DialogConfirm.xml)">$INFO[System.CurrentControl,[B],[/B]]</value>
		<value condition="Window.IsVisible(DialogConfirm.xml)">$INFO[Container(9010).ListItem.Label,[B],[/B]]</value>
    	<value condition="Skin.String(NotifyLevelChange,1)">$INFO[Control.GetLabel(20),[B]$LOCALIZE[31142][/B] ,]</value>
		<value condition="!ControlGroup(97631).HasFocus + Window.IsActive(MyWeather.xml)">$INFO[Window.Property(Updated),[B]$LOCALIZE[31301][/B] ,]</value>
    	<value condition="Window.IsVisible(DialogSubtitles.xml) + !ControlGroup(97632).HasFocus">$INFO[Player.Filename,[B]$LOCALIZE[561]:[/B] , ]$INFO[Control.GetLabel(1401),[LIGHT],[/LIGHT]]</value>
    	<value condition="Window.IsActive(DialogSettings.xml) + ControlGroup(9001).HasFocus">$INFO[Window(Home).Property(RefreshItem),[B],[/B]]</value>
    	<value condition="Window.IsActive(DialogSettings.xml) + !ControlGroup(9001).HasFocus">$INFO[Window(Home).Property(RefreshItem),[B],[/B] ]$INFO[System.CurrentControl]</value>
    	<value condition="[!Window.IsVisible(shutdownmenu) + [Window.IsActive(VideoOSD.xml) | Window.IsActive(MusicOSD.xml)] + !Player.Forwarding + !Player.Rewinding] | [Window.IsVisible(DialogSubtitles.xml) + ControlGroup(97632).HasFocus]">$INFO[Container(9000).ListItem.Label2,[B],[/B]]</value>
    	<value condition="[Control.HasFocus(2110) | Control.HasFocus(2111)] + Window.IsVisible(script-skinshortcuts.xml)">[B]$LOCALIZE[31983][/B] $LOCALIZE[31984]</value>
    	<value condition="!ControlGroup(97631).HasFocus + Window.IsVisible(script-skinshortcuts.xml)">$INFO[Container(211).ListItem.Label,[B],[/B] ]$INFO[Skin.String(SS_Helper)]</value>
    	<value condition="String.IsEqual(System.CurrentControlID, 6) + Window.IsVisible(MyWeather.xml)">$INFO[Skin.String(SS_Helper),[B],[/B]]</value>
    	<value condition="Window.IsVisible(shutdownmenu)">$INFO[System.CurrentControl,[B],[/B]]</value>
    	<value condition="Window.IsVisible(script-skinshortcuts.xml) + !ControlGroup(97631).HasFocus">$VAR[SkinShortcutsDescriptionVar]</value>
    	<value condition="Window.IsVisible(Settings.xml) + !ControlGroup(97631).HasFocus">$INFO[Container(9990).ListItem.Label,[B],[/B]]</value>
    	<value condition="Window.IsVisible(SettingsSystemInfo.xml) + !ControlGroup(97631).HasFocus">[B]$LOCALIZE[13271][/B]$INFO[System.CPUUsage,, [B]$LOCALIZE[31309][/B] ]$INFO[system.memory(used)]</value>
    	<value condition="Window.IsVisible(SkinSettings.xml) + !ControlGroup(97631).HasFocus">$INFO[Container(9990).ListItem.Label,[B],[/B] ]$VAR[SkinSettingsDescriptionVar]</value>
    	<value condition="Window.IsVisible(SettingsProfile.xml) + !ControlGroup(97631).HasFocus">$INFO[Container(2).ListItem.Label,[B],[/B] ]$VAR[SkinSettingsDescriptionVar]</value>
    	<value condition="Window.IsVisible(SettingsCategory.xml) + !ControlGroup(97631).HasFocus">$INFO[Control.GetLabel(6),[B],[/B]]</value>
		<value condition="ControlGroup(97631).HasFocus + String.IsEqual(System.CurrentControlID, 6) + Window.IsActive(script-skinshortcuts.xml)">$INFO[Container(90001).ListItem.Label,[B],[/B]]</value>
		<value condition="String.IsEqual(System.CurrentControlID, 6) + !Window.IsActive(script-skinshortcuts.xml)">$INFO[Container(9010).ListItem.Label,[B],[/B]]</value>
		<value condition="String.IsEqual(System.CurrentControlID, 3) + !Window.IsActive(script-skinshortcuts.xml)">$INFO[Container(9010).ListItem.Label,[B],[/B]]</value>
		<value condition="Control.HasFocus(9010)">$INFO[Container(9010).ListItem.Label,[B],[/B]]</value>
		<value condition="!String.IsEqual(Container(9000).ListItem.Property(widgetName),weather) + !String.IsEmpty(Container(9000).ListItem.Property(widgetName)) + ControlGroup(97631).HasFocus">$INFO[Container(9000).ListItem.Property(widgetName),[B],[/B]]</value>
    	<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetName),weather) + Weather.IsFetched">$INFO[Window(weather).Property(Location),[B],[/B]]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetName),weather) + !Weather.IsFetched">[B]$LOCALIZE[31909][/B]</value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(songinformation)"></value>
		<value condition="Window.IsVisible(SmartPlaylistRule.xml)">[B]$LOCALIZE[21422][/B] $INFO[System.CurrentControl]</value>
		<value condition="Window.IsVisible(MyPlaylist.xml)">[B]$LOCALIZE[559][/B] $INFO[Playlist.Length,, $LOCALIZE[31025]]</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml)">$INFO[Control.GetLabel(12),[B],[/B]]</value>
		<!--<value>WNVL-fail-report-bug</value>-->
	</variable>
    <variable name="HomeHeaderSubline">
		<value condition="Window.IsVisible(DialogButtonMenu.xml)"></value>
		<value condition="String.IsEqual(System.CurrentControlID, 6) + Window.IsVisible(script-skinshortcuts.xml)">$INFO[System.CurrentControl,[LIGHT],[/LIGHT]]</value>
		<value condition="String.IsEqual(System.CurrentControlID, 3) + Window.IsVisible(script-skinshortcuts.xml)">$INFO[System.CurrentControl,[LIGHT],[/LIGHT]]</value>
		<value condition="String.IsEqual(System.CurrentControlID, 6)">$INFO[System.CurrentControl]</value>
		<value condition="String.IsEqual(System.CurrentControlID, 3)">$INFO[System.CurrentControl]</value>
		<value condition="Control.Hasfocus(9010)"></value>
		<value condition="String.StartsWith(System.CurrentControlID, 8011)">$INFO[Skin.String(WidgetLine)]</value>
		<value condition="String.StartsWith(System.CurrentControlID, 90919)">$INFO[Container(90919).ListItem.Label,,]$INFO[Container(90919).ListItem.Label2, [LIGHT][LOWERCASE]$LOCALIZE[20347] [/LOWERCASE],[/LIGHT]]</value>
		<value condition="String.StartsWith(System.CurrentControlID, 90920)">$INFO[Container(90920).ListItem.Label]</value>
		<value condition="String.StartsWith(System.CurrentControlID, 90921)">$INFO[Container(90921).ListItem.Label]</value>
		<value condition="String.StartsWith(System.CurrentControlID, 90922)">$INFO[Container(90922).ListItem.Label]</value>
    	<value condition="Window.IsActive(movieinformation) + !String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml)">$INFO[Control.GetLabel(101)]</value>
    	<value>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Consensus),[I]","[/I] ]$VAR[LabelNextAiredDetails,[LIGHT],[/LIGHT]]</value>
    </variable>
    <variable name="HeaderSubTagline">
    	<value condition="Window.IsActive(movieinformation) + !String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
    	<value condition="!Window.IsActive(movieinformation) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Consensus)) + !String.IsEqual(ListItem.DBTYPE,tvshow) + !String.IsEqual(ListItem.DBTYPE,season) + !String.IsEqual(ListItem.DBTYPE,episodes) + !String.IsEqual(ListItem.DBTYPE,episode) + !String.IsEmpty(ListItem.DBTYPE)">$INFO[Window(Home).Property(SkinHelper.ListItem.Plot),[I],[/I]]</value>
    	<value condition="!String.IsEmpty(ListItem.DBTYPE)">$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Consensus),[I]","[/I]  ]$VAR[LabelNextAiredDetails]</value>
    	<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription,[B],[/B]]</value>
    </variable>
	<variable name="LabelNextAiredDetails">
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.NextEpisode.Airdate)) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">$INFO[Window(Home).Property(SkinHelper.ListItem.NextEpisode.Title),[B],[/B] ]$INFO[Window(Home).Property(SkinHelper.ListItem.AirDayTime.label.short),, ]$INFO[Window(Home).Property(SkinHelper.ListItem.NextEpisode.Airdate),[LIGHT],[/LIGHT]]</value>
		<value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$INFO[Window(Home).Property(SkinHelper.ListItem.LastEpisode.Title),[B],[/B] ]$INFO[Window(Home).Property(SkinHelper.ListItem.Network),- $LOCALIZE[145] , ]$INFO[Window(Home).Property(SkinHelper.ListItem.LastEpisode.Airdate),, ]$INFO[Window(Home).Property(SkinHelper.ListItem.Status),[I][LIGHT],[/I][/LIGHT]]</value>
	</variable>
    <variable name="MovieInfoIconThumbImage">
    	<value condition="Window.IsVisible(home) + String.StartsWith(ListItem.Path, plugin://)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
    	<value condition="String.StartsWith(ListItem.Path, plugin://script.extended)">$INFO[Skin.String(MenuDefaultIconsPath)]DefaultIconInfo.png</value>
    	<value>$INFO[Skin.String(MenuDefaultIconsPath)]play.png</value>
    </variable>
    <variable name="ListIcon">
    	<value condition="Container.Content(episodes) + Control.HasFocus(501)">$INFO[ListItem.Art(tvshow.poster)]</value>
    	<value condition="!String.StartsWith(Container.FolderPath,plugin) + !String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">$INFO[ListItem.Art(tvshow.landscape)]</value>
    	<value condition="!String.StartsWith(Container.FolderPath,plugin) + String.IsEmpty(ListItem.Art(tvshow.landscape)) + Skin.HasSetting(Hide.Spoilers.TV) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]">special://skin/extras/misc/empty.jpg</value>
    	<value condition="ControlGroup(9050).HasFocus">$INFO[Window(Home).Property(ImageFilterFIVE)]</value>
        <value>$INFO[Window(Home).Property(ImageFIVE)]</value>
    </variable>
	<variable name="FocusImage">
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageFilterFIVE))">$INFO[Window(home).Property(ImageFilterFIVE)]</value>
		<value></value>
	</variable>
	<variable name="FocusImageList">
		<value condition="!Window.Previous(videos) + !Window.IsActive(videos) + !String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageFilterFIVE))">$INFO[Window(home).Property(ImageFilterFIVE)]</value>
		<value condition="!String.IsEqual(Window(home).Property(FIVE_daemon_set),None) + !String.IsEmpty(Window(home).Property(ImageFilterFIVE_Backup))">$INFO[Window(home).Property(ImageFilterFIVE_Backup)]</value>
		<value></value>
	</variable>
	<variable name="ThumbVar">
		<value condition="Window.IsActive(MyPlaylist.xml) + String.IsEmpty(Container(9000).ListItem.Property(widgetName)) + !String.IsEmpty(Listitem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Window.IsActive(MyPlaylist.xml) + String.IsEmpty(Container(9000).ListItem.Property(widgetName)) + !String.IsEmpty(Listitem.Art(thumb)) + !String.StartsWith(Listitem.thumb, Default)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="Window.IsActive(MyPlaylist.xml) + String.IsEmpty(Container(9000).ListItem.Property(widgetName)) + !String.IsEmpty(Listitem.Art(thumb)) + String.StartsWith(Listitem.thumb, Default)">$INFO[Skin.String(MenuDefaultIconsPath)]$INFO[ListItem.Art(thumb)]</value>
		<value condition="Window.IsActive(MyPlaylist.xml) + String.IsEmpty(Container(9000).ListItem.Property(widgetName)) + !String.IsEmpty(Listitem.Icon) + !String.StartsWith(Listitem.Icon, Default)">$INFO[ListItem.Icon]</value>
		<value condition="Window.IsActive(MyPlaylist.xml) + String.IsEmpty(Container(9000).ListItem.Property(widgetName)) + !String.IsEmpty(Listitem.Icon) + String.StartsWith(Listitem.Icon, Default)">$INFO[Skin.String(MenuDefaultIconsPath)]$INFO[ListItem.Icon]</value>

    	<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + Container.Content(countries) + !String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[ListItem(1).Label,special://skin/extras/countries/,.png]</value>
    	<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + Container.Content(genres) + !String.IsEqual(ListItem(1).Label, $LOCALIZE[20366]) + String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem(1).Label,special://skin/extras/genres/,.png]</value>
    	<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + Container.Content(genres) + !String.IsEqual(ListItem(1).Label, $LOCALIZE[20366]) + !String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem(1).Label,special://skin/extras/genres/,.jpg]</value>
		<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + !String.IsEmpty(Listitem(1).Art(poster)) + !String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + !String.IsEmpty(Listitem(1).thumb) + !String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[ListItem(1).thumb]</value>
		<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + !String.IsEmpty(Listitem(1).Icon) + !String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[Skin.String(MenuDefaultIconsPath)]$INFO[ListItem(1).Icon]</value>

    	<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + Container.Content(countries) + String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[ListItem(2).Label,special://skin/extras/countries/,.png]</value>
    	<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + Container.Content(genres) + String.IsEqual(ListItem(1).Label, $LOCALIZE[20366]) + String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem(2).Label,special://skin/extras/genres/,.png]</value>
    	<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + Container.Content(genres) + String.IsEqual(ListItem(1).Label, $LOCALIZE[20366]) + !String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem(2).Label,special://skin/extras/genres/,.jpg]</value>
		<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + !String.IsEmpty(Listitem(2).Art(poster)) + String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + !String.IsEmpty(Listitem(2).thumb) + String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[ListItem(2).thumb]</value>
		<value condition="Control.HasFocus(50) + String.IsEqual(Listitem.Label, ..) + !String.IsEmpty(Listitem(2).Icon) + String.IsEqual(ListItem(1).Label, $LOCALIZE[20366])">$INFO[Skin.String(MenuDefaultIconsPath)]$INFO[ListItem(2).Icon]</value>


    	<value condition="Control.HasFocus(50) + Container.Content(countries) + String.IsEqual(ListItem.Label, $LOCALIZE[20366])">$INFO[ListItem(1).Label,special://skin/extras/countries/,.png]</value>
    	<value condition="Control.HasFocus(50) + Container.Content(genres) + String.IsEqual(ListItem.Label, $LOCALIZE[20366]) + String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem(1).Label,special://skin/extras/genres/,.png]</value>
    	<value condition="Control.HasFocus(50) + Container.Content(genres) + String.IsEqual(ListItem.Label, $LOCALIZE[20366]) + !String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem(1).Label,special://skin/extras/genres/,.jpg]</value>

		<value condition="Control.HasFocus(50) + !String.IsEmpty(Listitem(1).Art(poster)) + String.IsEqual(ListItem.Label, $LOCALIZE[20366])">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Control.HasFocus(50) + !String.IsEmpty(Listitem(1).thumb) + String.IsEqual(ListItem.Label, $LOCALIZE[20366])">$INFO[ListItem(1).thumb]</value>
		<value condition="Control.HasFocus(50) + !String.IsEmpty(Listitem(1).Icon) + String.IsEqual(ListItem.Label, $LOCALIZE[20366])">$INFO[Skin.String(MenuDefaultIconsPath)]$INFO[ListItem(1).Icon]</value>


    	<value condition="Container.Content(genres) + String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem.Label,special://skin/extras/genres/,.png]</value>
    	<value condition="Container.Content(genres) + !String.StartsWith(Container.FolderPath,musicdb://)">$INFO[ListItem.Label,special://skin/extras/genres/,.jpg]</value>

    	<value condition="Container.Content(countries)">$INFO[ListItem.Label,special://skin/extras/countries/,.png]</value>
		<value condition="Control.HasFocus(51)">$INFO[Container(51).ListItem.thumb]</value>
		<value condition="ControlGroup(9003).HasFocus + !String.IsEqual(Container(9000).ListItem.Property(widget),weather)">$INFO[Window(Home).Property(FIVE_daemon_fallback)]</value>
		<value condition="!String.IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Listitem.Thumb) + !String.StartsWith(Listitem.Thumb, Default)">$INFO[ListItem.Thumb]</value>
		<value condition="!String.IsEmpty(Listitem.Thumb) + String.StartsWith(Listitem.Thumb, Default)">$INFO[Skin.String(MenuDefaultIconsPath)]$INFO[ListItem.Thumb]</value>
		<value condition="!String.IsEmpty(Listitem.Icon) + String.StartsWith(Listitem.Icon, Default)">$INFO[Skin.String(MenuDefaultIconsPath)]$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(Listitem.Icon) + !String.StartsWith(Listitem.Icon, Default)">$INFO[ListItem.Icon]</value>
		<value>special://skin/extras/misc/empty.jpg</value>
	</variable>
	<variable name="ThumbVarInfo">
		<!--
		<value condition="Window.IsActive(addonbrowser)">$INFO[Window(Home).Property(FIVE_daemon_fallback)]</value>
		-->
		<value condition="ControlGroup(9003).HasFocus + !String.IsEqual(Container(9000).ListItem.Property(widget),weather)">$INFO[Window(Home).Property(FIVE_daemon_fallback)]</value>
		<value condition="!String.IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Listitem.Icon)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="HomeThumbVar">
		<value condition="!String.IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Listitem.Icon)">$INFO[ListItem.Icon]</value>
		<value>special://skin/extras/misc/empty.jpg</value>
	</variable>
    <variable name="AddonDisclaimer">
    	<value condition="!String.IsEmpty(ListItem.AddonDisclaimer)">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[24052]: [/COLOR][CR]$INFO[ListItem.AddonDisclaimer]</value>
    </variable>
    <variable name="AddonNews">
    	<value condition="!String.IsEmpty(ListItem.AddonNews)">[COLOR $VAR[ColorHighlightVar]]$LOCALIZE[24054]: [/COLOR][CR]$INFO[ListItem.AddonNews][CR]</value>
    </variable>
    <variable name="ContentStats">
    	<value condition="Container.Content(tvshow) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(season)">$INFO[ListItem.Property(TotalEpisodes)]</value>
		<value>$INFO[ListItem.Duration,,m]</value>
    </variable>
    <variable name="LibraryStatsVar">
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [Container.Content(movie) | Container.Content(movies)]">$INFO[Window(Home).Property(Movies.Count),, ]$INFO[Window(Home).Property(Movies.Watched),[I][LIGHT], $LOCALIZE[16102][/LIGHT][/I]]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [Container.Content(tvshow) | Container.Content(tvshows)]">$INFO[Window(Home).Property(TVShows.Count),, ]$INFO[Window(Home).Property(Episodes.UnWatched),[I][LIGHT],]$INFO[Window(Home).Property(Episodes.Count), / , $LOCALIZE[20360] $LOCALIZE[16101][/LIGHT][/I]]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [Container.Content(seasons) | Container.Content(season)]">$INFO[ListItem.Property(TotalSeasons),, ]$INFO[ListItem.Property(UnWatchedEpisodes),[I][LIGHT], $LOCALIZE[20360] $LOCALIZE[16101][/LIGHT][/I]]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [Container.Content(episodes)]">$INFO[ListItem.Property(TotalSeasons),, ]$INFO[ListItem.Property(UnWatchedEpisodes),[I][LIGHT], $LOCALIZE[20360] $LOCALIZE[16101][/LIGHT][/I]]</value>
		
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [String.StartsWith(Container.FolderPath,musicdb://)]">$INFO[Window(Home).Property(Music.ArtistsCount),, [LIGHT]$LOCALIZE[133][/LIGHT] ]$INFO[Window(Home).Property(Music.AlbumsCount),, [LIGHT]$LOCALIZE[132][/LIGHT] ]$INFO[Window(Home).Property(Music.SongsCount),, [LIGHT]$LOCALIZE[134][/LIGHT]]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31061])]">$LOCALIZE[20161] $LOCALIZE[24001]: $INFO[Window(Home).Property(SkinHelper.TotalAddons)] - $LOCALIZE[1036]: $INFO[Window(Home).Property(SkinHelper.TotalFavourites)]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31082])]">$LOCALIZE[20389]: $INFO[Window(Home).Property(MusicVideos.Count)] - $LOCALIZE[16102]: $INFO[Window(Home).Property(MusicVideos.Watched)] - $LOCALIZE[16101]: $INFO[Window(Home).Property(MusicVideos.UnWatched)]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[130])]">$LOCALIZE[31309] $INFO[System.memory(used.percent)] - $LOCALIZE[13271] $INFO[System.CPUUsage]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31130])]">$LOCALIZE[20342]: $INFO[Window(Home).Property(PlaylistCount)] - $LOCALIZE[16102]: $INFO[Window(Home).Property(PlaylistWatched)] - $LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistUnWatched)] - $LOCALIZE[575]: $INFO[Window(Home).Property(PlaylistInProgress)]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31131])]">$LOCALIZE[20343]: $INFO[Window(Home).Property(PlaylistTVShowCount)] - $LOCALIZE[20360]: $INFO[Window(Home).Property(PlaylistEpisodes)] - $LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistEpisodesUnWatched)]</value>
		<value condition="Skin.HasSetting(Enable.Library.Stats) + [String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31132])]">$LOCALIZE[20389]: $INFO[Window(Home).Property(PlaylistCount)] - $LOCALIZE[16102]: $INFO[Window(Home).Property(PlaylistWatched)] - $LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistUnWatched)] - $LOCALIZE[575]: $INFO[Window(Home).Property(PlaylistInProgress)]</value>
	</variable>
	<variable name="WidgetLimit">
		<value condition="Skin.HasSetting(Enable.WidgetLimit)">20</value>
		<value condition="!Skin.HasSetting(Enable.WidgetLimit)">1000</value>
	</variable>
	<variable name="Settings.Viewmode">
		<value condition="Skin.HasSetting(Enable.SettingsPanelView)">$LOCALIZE[21371]</value>
		<value condition="!Skin.HasSetting(Enable.SettingsPanelView)">$LOCALIZE[535]</value>
	</variable>
	<variable name="LowPanelLogoVar">
		<value condition="Container.Content(sets) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.0.Art.ClearLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.0.Art.ClearLogo)]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value>blank.png</value>
	</variable>
	<variable name="LandscapeWidgetArt">
		<value condition="!String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) + [!String.IsEmpty(ListItem.Art(fanart)) | [Skin.HasSetting(Hide.Spoilers.TV) + String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) + [stringcompare(Container(9000).ListItem.Overlay,OverlayUnWatched.png) | Container(9000).ListItem.IsResumable]]]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value>$INFO[Skin.String(MenuDefaultIconsPath)]fallback.png</value>
	</variable>
	<variable name="VerticalWidgetArt">
		<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100]) + !String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31313]) + !String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100]) + String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<!--<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>-->
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="WidgetArt">
		<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20445]) + !String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20445]) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
 		<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20021]) + String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
 		<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20021]) + String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
 		<value>$INFO[ListItem.Icon]</value>
 	</variable>
	<variable name="MusicInfoDescription">
		<value condition="String.IsEqual(ListItem.DBTYPE,artist) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="[String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,song)] + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,artist) + String.IsEmpty(ListItem.Property(Artist_Description))">$LOCALIZE[547]</value>
		<value condition="[String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,song)] + String.IsEmpty(ListItem.Property(Album_Description))">$LOCALIZE[414]</value>
		<value>$LOCALIZE[547]</value>
	</variable>
	<variable name="MusicInfoHeading">
		<value condition="String.IsEqual(ListItem.DBTYPE,artist) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist,[B],[/B]]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album) + !String.IsEmpty(ListItem.Album)">$INFO[ListItem.Album,[B],[/B]]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,song) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.TrackNumber,[B],[/B]. ]$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Album)">$INFO[ListItem.Album]</value>
		<value condition="!String.IsEmpty(ListItem.Title) + Integer.IsGreaterThan(ListItem.TrackNumber,0)">$INFO[ListItem.TrackNumber,[B],[/B]. ]$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title,[B],[/B]]</value>
		<value condition="!String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist,[B],[/B]]</value>
		<value>$INFO[ListItem.Label,[B],[/B]]</value>
	</variable>
	<variable name="MusicInfoSubheading">
		<value condition="String.IsEqual(ListItem.DBTYPE,artist)">$INFO[ListItem.Genre]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,song)">$INFO[ListItem.Artist]$INFO[ListItem.Album, - ]</value>
		<value>$INFO[ListItem.Artist]</value>
	</variable>
	<variable name="MusicInfoYoutubePath">
		<value condition="String.IsEqual(ListItem.DBTYPE,artist)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $LOCALIZE[2]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $ESCINFO[ListItem.Label] $LOCALIZE[558]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,song)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $ESCINFO[ListItem.Title]</value>
	</variable>
	<variable name="VideoInfoYoutubePath">
		<value condition="String.IsEqual(ListItem.DBTYPE,movie)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Title] $LOCALIZE[31958] $LOCALIZE[20410]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Title] $LOCALIZE[20364]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,episode)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.TVShowTitle] $LOCALIZE[20364]</value>
		<value condition="!String.IsEqual(ListItem.DBType,song)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $ESCINFO[ListItem.Album]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $ESCINFO[ListItem.Title]</value>
		<value>plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Label]</value>
	</variable>
	<variable name="StarRatingVar">
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsLess(ListItem.UserRating,1)">rating0.png</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,2)">rating1.png</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,4)">rating2.png</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,6)">rating3.png</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,8)">rating4.png</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,10)">rating5.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,1)">rating0.png</value>
		<value condition="Integer.IsLessOrEqual(ListItem.Rating,2)">rating1.png</value>
		<value condition="Integer.IsLessOrEqual(ListItem.Rating,4)">rating2.png</value>
		<value condition="Integer.IsLessOrEqual(ListItem.Rating,6)">rating3.png</value>
		<value condition="Integer.IsLessOrEqual(ListItem.Rating,8)">rating4.png</value>
		<value condition="Integer.IsLessOrEqual(ListItem.Rating,10)">rating5.png</value>
	</variable>
	<variable name="StarRatingPlayerVar">
		<value condition="Integer.IsLess(MusicPlayer.UserRating,1)">rating0.png</value>
		<value condition="Integer.IsLessOrEqual(MusicPlayer.UserRating,2)">rating1.png</value>
		<value condition="Integer.IsLessOrEqual(MusicPlayer.UserRating,4)">rating2.png</value>
		<value condition="Integer.IsLessOrEqual(MusicPlayer.UserRating,6)">rating3.png</value>
		<value condition="Integer.IsLessOrEqual(MusicPlayer.UserRating,8)">rating4.png</value>
		<value condition="Integer.IsLessOrEqual(MusicPlayer.UserRating,10)">rating5.png</value>
	</variable>
	<variable name="VerticalWidgetThumbnailLabel">
		<value condition="String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="AdvancedLauncherPlotVar">
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value>$LOCALIZE[15063].</value>
	</variable>
	<variable name="MenuOrientationVar">
		<value condition="Skin.HasSetting(Enable.HorizontalMenu)">Horizontal</value>
		<value>Vertical</value>
	</variable>
	<variable name="VolumeIconVar">
		<value condition="Integer.IsGreater(Control.GetLabel(20),66)"></value>
		<value condition="Integer.IsGreater(Control.GetLabel(20),33)"></value>
		<value condition="player.passthrough"></value>
		<value condition="Player.Muted"></value>
		<value></value>
	</variable>
	<variable name="InfoWallSubLabelVar">
		<value condition="!String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
</includes>
