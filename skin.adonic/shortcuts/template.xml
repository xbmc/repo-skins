<?xml version="1.0" encoding="UTF-8"?>
<template>
    <other include="widget-fixed">
        <property name="id" tag="mainmenuid" />
        <property name="path" tag="property" attribute="name|widgetPath" />
        <property name="target" tag="property" attribute="name|widgetTarget" />
        <property name="path"></property>
        <property name="target"></property>
        <controls>
            <include content="WidgetBusyAnimation">
                <param name="id">8011$SKINSHORTCUTS[id]</param>
            </include>
            <control type="fixedlist" id="8011$SKINSHORTCUTS[id]">
            	<skinshortcuts>visibility</skinshortcuts>
				<include content="FixedWrapWidgetContent">
                    <param name="id">8011$SKINSHORTCUTS[id]</param>
                </include>
				<content limit="$VAR[WidgetLimit]" target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[path]</content>
			</control>
        </controls>
        <variables>
            <variable name="widgetLine1$SKINSHORTCUTS[id]">
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Episode)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Season,,x]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Episode,,. ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Title]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Title)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Title]</value>
                <value>$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Label]</value>
            </variable>
            <variable name="widgetLine2$SKINSHORTCUTS[id]">
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Episode)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.TvShowTitle,, ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Premiered]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Artist)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Artist,, ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Year]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Year)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Year]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Label2)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Label2]</value>
            </variable>
        </variables>
    </other>

    <other include="widget-wrapped">
        <property name="id" tag="mainmenuid" />
        <property name="path" tag="property" attribute="name|widgetPath" />
        <property name="target" tag="property" attribute="name|widgetTarget" />
        <property name="path"></property>
        <property name="target"></property>
        <controls>
            <include content="WidgetBusyAnimation">
                <param name="id">8011$SKINSHORTCUTS[id]</param>
            </include>
            <control type="wraplist" id="8011$SKINSHORTCUTS[id]">
            	<skinshortcuts>visibility</skinshortcuts>
				<include content="FixedWrapWidgetContent">
                    <param name="id">8011$SKINSHORTCUTS[id]</param>
                </include>
				<content limit="$VAR[WidgetLimit]" target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[path]</content>
			</control>
        </controls>
        <variables>
            <variable name="widgetLine1$SKINSHORTCUTS[id]">
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Episode)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Season,,x]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Episode,,. ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Title]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Title)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Title]</value>
                <value>$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Label]</value>
            </variable>
            <variable name="widgetLine2$SKINSHORTCUTS[id]">
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Episode)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.TvShowTitle,, ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Premiered]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Artist)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Artist,, ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Year]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Year)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Year]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Label2)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Label2]</value>
            </variable>
        </variables>
    </other>

    <other include="widget-defaultpanel">
        <property name="id" tag="mainmenuid" />
        <property name="path" tag="property" attribute="name|widgetPath" />
        <property name="target" tag="property" attribute="name|widgetTarget" />
        <property name="path"></property>
        <property name="target"></property>
        <controls>
            <include content="WidgetBusyAnimation">
                <param name="id">8011$SKINSHORTCUTS[id]</param>
            </include>
			<control type="multiimage" id="7975">
				<left>-1920</left>
                <width>219</width>
                <height>316</height>
				<imagepath background="true">$VAR[WidgetMultiPath]</imagepath>
			</control>
            <control type="image">
                <visible>!String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31313]) + !String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100]) + !String.IsEqual(Container(9000).ListItem.Property(widget),weather) + Control.HasFocus(8011$SKINSHORTCUTS[id]) + !Container(8011$SKINSHORTCUTS[id]).IsUpdating</visible>
                <left>23</left>
                <top>604</top>
                <width>219</width>
                <height>316</height>
                <animation effect="fade" time="320" delay="200">Visible</animation>
                <animation effect="fade" time="200">Hidden</animation>
				<fadetime>2000</fadetime>
                <texture colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,8)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,7)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,6)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,5)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,4)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,3)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,2)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,1)">Conditional</animation>
                <animation effect="slide" end="207,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,0)">Conditional</animation>
            </control>
            <control type="image">
                <visible>String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31313]) + Control.HasFocus(8011$SKINSHORTCUTS[id]) + !Container(8011$SKINSHORTCUTS[id]).IsUpdating</visible>
                <left>23</left>
                <top>604</top>
                <width>322</width>
                <height>316</height>
                <animation effect="fade" time="320" delay="200">Visible</animation>
                <animation effect="fade" time="200">Hidden</animation>
				<fadetime>2000</fadetime>
                <texture colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
                <animation effect="slide" end="310,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,4)">Conditional</animation>
                <animation effect="slide" end="310,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,3)">Conditional</animation>
                <animation effect="slide" end="310,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,2)">Conditional</animation>
                <animation effect="slide" end="310,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,1)">Conditional</animation>
                <animation effect="slide" end="310,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,0)">Conditional</animation>
            </control>
            <control type="image">
                <visible>String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100]) + Control.HasFocus(8011$SKINSHORTCUTS[id]) + !Container(8011$SKINSHORTCUTS[id]).IsUpdating</visible>
                <left>23</left>
                <top>604</top>
                <width>478</width>
                <height>316</height>
                <animation effect="fade" time="320" delay="200">Visible</animation>
                <animation effect="fade" time="200">Hidden</animation>
				<fadetime>2000</fadetime>
                <texture colordiffuse="$VAR[LibColorHighlightVar]">$VAR[FocusImage]</texture>
                <animation effect="slide" end="466,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,2)">Conditional</animation>
                <animation effect="slide" end="466,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,1)">Conditional</animation>
                <animation effect="slide" end="466,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(8011$SKINSHORTCUTS[id]).Column,0)">Conditional</animation>
            </control>
            <control type="panel" id="8011$SKINSHORTCUTS[id]">
                <skinshortcuts>visibility</skinshortcuts>
                <animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Container(8011$SKINSHORTCUTS[id]).IsUpdating | Window.IsVisible(favourites) | Window.IsVisible(script-globalsearch-main.xml)">Conditional</animation>
                <left>29</left>
                <top>610</top>
                <width>1864</width>
                <height>310</height>
				<onup condition="Window.IsVisible(MyWeather.xml)">97632</onup>
				<onup condition="Control.IsVisible(9990)">9990</onup>
				<onup condition="Window.IsVisible(SettingsCategory.xml)">3</onup>
				<onup condition="Window.IsVisible(script-skinshortcuts.xml)">211</onup>
				<onup condition="!Window.IsVisible(home)">50</onup>
                <onup>9000</onup>
                <ondown>9000</ondown>
                <onback>9000</onback>
                <viewtype label="535">list</viewtype>
                <focusposition>0</focusposition>
                <pagecontrol>-</pagecontrol>
                <preloaditems>2</preloaditems>
                <scrolltime tween="quadratic">400</scrolltime>
                <orientation>Horizontal</orientation>
                <visible>!String.IsEmpty(Container(9000).ListItem.Property(widgetPath))</visible>
                <autoscroll time="10000" delay="10000" repeat="10000">[Control.IsVisible(9003) + !Control.HasFocus(8011$SKINSHORTCUTS[id])] + !Skin.HasSetting(Disable.WidgetAutoScroll)</autoscroll>

                <!-- Poster -->
                <itemlayout height="304" width="207" condition="!String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31313]) + !String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100])">
                    <control type="group">
                        <control type="image">
                            <visible>String.IsEmpty(ListItem.Art(tvshow.poster))</visible>
							<bordersize>6</bordersize>
                            <aspectratio aligny="center" align="center">scale</aspectratio>
                            <texture fallback="adonic.jpg" background="true">$INFO[ListItem.Art(poster)]</texture>
                        </control>
                        <control type="image">
                            <visible>!String.IsEmpty(ListItem.Art(tvshow.poster))</visible>
							<bordersize>6</bordersize>
                            <aspectratio aligny="center" align="center">scale</aspectratio>
                            <texture background="true" fallback="adonic.jpg">$INFO[ListItem.Art(tvshow.poster)]</texture>
                        </control>
                    </control>
                </itemlayout>
                <focusedlayout height="304" width="207" condition="!String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31313]) + !String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100])">
                    <control type="group">
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<!--
							<onfocus>SetProperty(NINE_image_set,$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Art(poster)],home)</onfocus>
							<onfocus>SetProperty(NINE_manual_set,blur,home)</onfocus>
							<onfocus>SetProperty(NINE_prefix_set,cbx,home)</onfocus>
							-->
							<onfocus condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Art(tvshow.poster))">SetProperty(FIVE_daemon_fallback,$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Art(tvshow.poster)],home)</onfocus>
							<onfocus condition="String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Art(tvshow.poster))">SetProperty(FIVE_daemon_fallback,$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Art(poster)],home)</onfocus><onfocus>Skin.SetString(WidgetLine,$VAR[widgetLine1$SKINSHORTCUTS[id],, ]$VAR[widgetLine2$SKINSHORTCUTS[id],[LIGHT],[/LIGHT]])</onfocus>
						</control>
                        <include>PanelFocusedItemZoom</include>
                        <control type="image">
                            <visible>String.IsEmpty(ListItem.Art(tvshow.poster))</visible>
							<bordersize>6</bordersize>
                            <aspectratio aligny="center" align="center">scale</aspectratio>
                            <texture fallback="adonic.jpg" background="true">$INFO[ListItem.Art(poster)]</texture>
                        </control>
                        <control type="image">
                            <visible>!String.IsEmpty(ListItem.Art(tvshow.poster))</visible>
							<bordersize>6</bordersize>
                            <aspectratio aligny="center" align="center">scale</aspectratio>
                            <texture fallback="adonic.jpg" background="true">$INFO[ListItem.Art(tvshow.poster)]</texture>
                        </control>
                    </control>
                </focusedlayout>

                <!-- Square -->
                <itemlayout height="304" width="310" condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31313])">
                    <control type="group">
                        <control type="image">
							<bordersize>6</bordersize>
                            <aspectratio aligny="center" align="center">scale</aspectratio>
                            <texture background="true" fallback="adonic.jpg">$INFO[ListItem.Icon]</texture>
                        </control>
                    </control>
                </itemlayout>
                <focusedlayout height="304" width="310" condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31313])">
                    <control type="group">
                        <include>PanelFocusedItemZoom</include>
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus>SetProperty(FIVE_daemon_fallback,$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Icon],home)</onfocus>
							<onfocus>Skin.SetString(WidgetLine,$VAR[widgetLine1$SKINSHORTCUTS[id],, ]$VAR[widgetLine2$SKINSHORTCUTS[id],[LIGHT],[/LIGHT]])</onfocus>
						</control>
                        <control type="image">
							<bordersize>6</bordersize>
                            <aspectratio aligny="center" align="center">scale</aspectratio>
                            <texture background="true" fallback="adonic.jpg">$INFO[ListItem.Icon]</texture>
                        </control>
                    </control>
                </focusedlayout>

                <!-- Landscape -->
                <itemlayout height="304" width="466" condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100])">
                    <control type="image">
				<bordersize>6</bordersize>
                        <aspectratio aligny="center" align="center">scale</aspectratio>
                        <texture background="true" fallback="adonic.jpg">$VAR[LandscapeWidgetArt]</texture>
                    </control>
                </itemlayout>
                <focusedlayout height="304" width="466" condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100])">
                    <include>PanelFocusedItemZoom</include>
					<control type="button">
						<texturefocus>-</texturefocus>
						<texturenofocus>-</texturenofocus>
						<onfocus condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Art(thumb))">SetProperty(FIVE_daemon_fallback,$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Art(thumb)],home)</onfocus>
						<onfocus condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Art(poster))">SetProperty(FIVE_daemon_fallback,$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Art(poster)],home)</onfocus><onfocus>Skin.SetString(WidgetLine,$VAR[widgetLine1$SKINSHORTCUTS[id],, ]$VAR[widgetLine2$SKINSHORTCUTS[id],[LIGHT],[/LIGHT]])</onfocus>
						<onfocus condition="String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Art(thumb)) + String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Art(poster))">SetProperty(FIVE_daemon_fallback,$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Icon],home)</onfocus><onfocus>Skin.SetString(WidgetLine,$VAR[widgetLine1$SKINSHORTCUTS[id],, ]$VAR[widgetLine2$SKINSHORTCUTS[id],[LIGHT],[/LIGHT]])</onfocus>
					</control>
                    <control type="image">
						<bordersize>6</bordersize>
                        <aspectratio aligny="center" align="center">scale</aspectratio>
                        <texture background="true" fallback="adonic.jpg">$VAR[LandscapeWidgetArt]</texture>
                    </control>
                </focusedlayout>
                <content limit="$VAR[WidgetLimit]" target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[path]</content>
            </control>
        </controls>
        <variables>
            <variable name="widgetLine1$SKINSHORTCUTS[id]">
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Episode)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Season,,x]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Episode,,. ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Title]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Title)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Title]</value>
                <value>$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Label]</value>
            </variable>
            <variable name="widgetLine2$SKINSHORTCUTS[id]">
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Episode)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.TvShowTitle,, ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Premiered]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Artist)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Artist,, ]$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Year]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Year)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Year]</value>
                <value condition="!String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Label2)">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Label2]</value>
            </variable>
        </variables>
    </other>

    <other include="WidgetFanart">
        <property name="id" tag="mainmenuid" />
        <property name="visible">Control.HasFocus(8011$SKINSHORTCUTS[id]) + !String.IsEmpty(Container(8011$SKINSHORTCUTS[id]).ListItem.Art(fanart))</property>
        <property name="imagepath">$INFO[Container(8011$SKINSHORTCUTS[id]).ListItem.Art(fanart)]</property>
        <controls>
             <control type="multiimage">
                <animation effect="fade" time="300" start="0" end="100" delay="300">Visible</animation>
                <animation effect="fade" time="0" start="100" end="0">Hidden</animation>
                <visible>$SKINSHORTCUTS[visible]</visible>
                <description>Widget Background Image</description>
                <fadetime>300</fadetime>
                <include>VisibleFadeEffect</include>
                <include>FullscreenDimensions</include>
                <imagepath background="true">$SKINSHORTCUTS[imagepath]</imagepath>
            </control>
        </controls>
    </other>
</template>