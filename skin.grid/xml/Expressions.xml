<includes>

	<!-- Art -->

	<expression name="Content.HasLandscape">[Container.Content(files) + Container.HasFiles] | Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(files) | Container.Content(videos) | Container.Content(musicvideos) | Container.Content(addons) | [String.IsEmpty(Container.Content) + String.StartsWith(Container.FolderPath,plugin://)]</expression>


	<expression name="Art.IsPortrait">![Container.Content(episodes)] + [Container.Content(files) + !Container.HasFiles]</expression>	
	
	
	<expression name="Art.IsLandscape">!String.IsEqual(Skin.String(view.list.art),posters)</expression>

	<!--<expression name="Art.IsLandscape">Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(images) | Container.Content(artists) | Container.Content(addons) | String.StartsWith(Container.FolderPath,pvr://recordings/) | [Container.Content(files) + Container.HasFiles] | [!String.IsEqual(Skin.String(view.list.art),posters) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons)] | String.StartsWith(Container.FolderPath,plugin://plugin.video)] | Container.Content(favourites)</expression>-->

	<expression name="Art.IsSquare">Container.Content(albums) | Container.Content(songs)</expression>
	<expression name="Art.IsThumb">Container.Content(videos)</expression>

	<!-- Content -->
	<expression name="Content.IsAudio">Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(roles)</expression>
	<expression name="Content.IsMusic">Window.IsActive(music) | String.Contains(Container.FolderPath,special://musicplaylists)</expression>
	<expression name="Content.IsPVR">Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml) | Window.IsActive(MyPVRTimers.xml)</expression>
	<expression name="!Content.IsPVR">!Window.IsActive(MyPVRChannels.xml) +!Window.IsActive(MyPVRRecordings.xml) +!Window.IsActive(MyPVRGuide.xml) +!Window.IsActive(MyPVRTimers.xml) +!Window.IsActive(MyPVRSearch.xml) +!Window.IsActive(MyPVRTimers.xml)</expression>
	<expression name="Content.IsVideo">Container.Content(videos) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(files)</expression>

	<!-- Folderpath -->
	<expression name="FolderPath.IsTMDB">String.IsEqual(Container.FolderPath,plugin://script.extendedinfo/tmdb) | String.IsEqual(Container.FolderPath,plugin://script.extendedinfo/?info=incinemamovies) | String.StartsWith(ListItem.Icon,http://image.tmdb.org/) | String.Contains(ListItem.FilenameAndPath,tmdb)</expression>

	<!-- Player -->
	<expression name="IsPlaying">![Player.Paused | Player.Caching | Player.Seeking | Player.Rewinding | Player.Forwarding | Player.DisplayAfterSeek]</expression>
	<expression name="!IsPlaying">Player.Paused | Player.Caching | Player.Seeking | Player.Rewinding | Player.Forwarding | Player.DisplayAfterSeek</expression>

	<expression name="VolumeBarMuted">![VideoPlayer.IsFullscreen + Window.IsVisible(volumebar) + Player.Muted]</expression>

	<!-- Ratings -->
	<expression name="HasRatingOverlay">[String.IsEqual(Skin.String(ratings.music),user) + String.IsEqual(ListItem.DBTYPE,musicvideo) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,song)] | [String.IsEqual(Skin.String(ratings.video),default) + !String.IsEmpty(ListItem.Rating)] | [String.IsEqual(Skin.String(ratings.video),user) + !String.IsEmpty(ListItem.UserRating)] | [String.IsEqual(Skin.String(ratings.video),imdb) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.IMDB))] | [String.IsEqual(Skin.String(ratings.video),imdbpercent) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.percent.IMDB))] | [String.IsEqual(Skin.String(ratings.video),mc) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.MC))] | [String.IsEqual(Skin.String(ratings.video),rt) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Rating))] | [String.IsEqual(Skin.String(ratings.video),tmdb) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TMDB))]</expression>
	
	<!-- Listitems -->
	<expression name="ListItem.IsParent">[ListItem.IsParentFolder | String.StartsWith(ListItem.Label,* All)] + !String.StartsWith(Container.FolderPath,videodb://movies/sets)</expression>
	<expression name="!ListItem.IsParent">!ListItem.IsParentFolder + !String.StartsWith(ListItem.Label,* All) + !String.StartsWith(Container.FolderPath,videodb://movies/sets)</expression>	
	<expression name="ListItem.HasInfo">[!String.IsEmpty(ListItem.DBID) + !String.IsEmpty(ListItem.Label2)] | [String.IsEmpty(ListItem.DBID) + !String.IsEmpty(ListItem.Label2)] | Container.Content(artists) | String.StartsWith(Container.FolderPath,pvr://) | Container.Content(addons)</expression>
	
	<expression name="!ListItem.HasInfo">[[String.IsEmpty(ListItem.DBID) + String.IsEmpty(ListItem.Label2)] | [!String.IsEmpty(ListItem.DBID) + String.IsEmpty(ListItem.Label2)]] + !Container.Content(artists) + !String.StartsWith(Container.FolderPath,pvr://) + !Container.Content(addons)</expression>

	<!--<expression name="!ListItem.HasInfo">String.IsEmpty(ListItem.DBID) + String.IsEmpty(ListItem.Label2) + !Container.Content(addons) + !String.StartsWith(ListItem.FolderPath,pvr://)</expression>-->

	<!-- Viewtypes -->
	<expression name="Thumbview.ShowInfo">Container.Content(episodes) | [String.IsEqual(Skin.String(views.landscape.art),fanart) + !Skin.HasSetting(logos.enable)] | [String.IsEqual(Skin.String(views.landscape.art),fanart) + Skin.HasSetting(logos.enable) + String.IsEmpty(ListItem.Art(clearlogo))] | [String.IsEqual(Skin.String(views.landscape.art),landscape) + String.IsEmpty(ListItem.Art(landscape)) + !Skin.HasSetting(logos.enable)]</expression>

	<expression name="Views.ListHasFocus">![Window.IsActive(contextmenu) | Control.HasFocus(6000) | ControlGroup(7000).HasFocus() | Control.HasFocus(8000) | Control.HasFocus(7100) | ControlGroup(8000).HasFocus() | ControlGroup(9000).HasFocus() | ControlGroup(8999).HasFocus() | ControlGroup(8998).HasFocus() | ControlGroup(8997).HasFocus()]</expression>
	<expression name="!Views.ListHasFocus">Window.IsVisible(virtualkeyboard) | Window.IsActive(contextmenu) | Control.HasFocus(6500) | Control.HasFocus(6000) | ControlGroup(7000).HasFocus() | Control.HasFocus(7100) | Control.HasFocus(8000) | ControlGroup(8000).HasFocus() | ControlGroup(9000).HasFocus() | ControlGroup(8999).HasFocus() | ControlGroup(8998).HasFocus() | ControlGroup(8997).HasFocus()</expression>

	<expression name="Views.ShowLogo">[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,set) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.Contains(Container.FolderName,$LOCALIZE[20387]) | String.Contains(Container.FolderPath,special://skin/playlists/) | String.Contains(Container.FolderPath,special://profile/playlists/) | String.IsEqual(Container.FolderPath,plugin://script.watchlist/?type=episodes) | String.IsEqual(Container.FolderPath,plugin://script.skin.helper.service/?action=nextepisodes) | String.IsEqual(Container.FolderPath,plugin://service.library.data.provider?type=recommendedepisodes)] + [String.IsEqual(Skin.String(views.landscape.art),fanart) + Skin.HasSetting(logos.enable)] | [String.IsEqual(Skin.String(views.landscape.art),landscape) + Skin.HasSetting(logos.enable) + String.IsEmpty(ListItem.Art(landscape))]</expression>

	<expression name="Views.CanHaveLogo">[String.IsEqual(Container.FolderPath,videodb://recentlyaddedepisodes/) | String.Contains(Container.FolderPath,special://skin/playlists/) | String.Contains(Container.FolderPath,special://profile/playlists/) | String.IsEqual(Container.FolderPath,plugin://script.watchlist/?type=episodes) | String.IsEqual(Container.FolderPath,plugin://script.skin.helper.service/?action=nextepisodes) | String.IsEqual(Container.FolderPath,plugin://service.library.data.provider?type=recommendedepisodes)]</expression>

	<!-- Window -->
	<expression name="Window.HasOverlay">Window.IsActive(1105) | Window.IsActive(notification) | Library.IsScanningVideo | Library.IsScanningMusic | Window.IsVisible(extendedprogressdialog) | Player.HasMedia</expression>
	<expression name="!Window.HasOverlay">!Window.IsActive(1105) + !Window.IsActive(notification) + !Library.IsScanningVideo + !Library.IsScanningMusic + !Window.IsVisible(extendedprogressdialog) + !Player.HasMedia</expression>
	<expression name="Window.IsInfo">Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(addoninformation) | Window.IsVisible(pvrguideinfo)</expression>
	<expression name="!Window.IsInfo">![Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(addoninformation) | Window.IsVisible(pvrguideinfo)]</expression>

</includes>