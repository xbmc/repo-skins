<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="HomeBackground">
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(thumb)) + [String.IsEqual(Skin.String(WidgetBackgroundOrder),thumb) | String.IsEmpty(Skin.String(WidgetBackgroundOrder))]">$INFO[Container(8000).ListItem.Art(thumb)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(fanart)) + [String.IsEqual(Skin.String(WidgetBackgroundOrder),thumb) | String.IsEmpty(Skin.String(WidgetBackgroundOrder))]">$INFO[Container(8000).ListItem.Art(fanart)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(landscape)) + [String.IsEqual(Skin.String(WidgetBackgroundOrder),thumb) | String.IsEmpty(Skin.String(WidgetBackgroundOrder))]">$INFO[Container(8000).ListItem.Art(landscape)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(fanart)) + String.IsEqual(Skin.String(WidgetBackgroundOrder),fanart)">$INFO[Container(8000).ListItem.Art(fanart)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(landscape)) + String.IsEqual(Skin.String(WidgetBackgroundOrder),fanart)">$INFO[Container(8000).ListItem.Art(landscape)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(thumb)) + String.IsEqual(Skin.String(WidgetBackgroundOrder),fanart)">$INFO[Container(8000).ListItem.Art(thumb)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(landscape)) + String.IsEqual(Skin.String(WidgetBackgroundOrder),landscape)">$INFO[Container(8000).ListItem.Art(landscape)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(fanart)) + String.IsEqual(Skin.String(WidgetBackgroundOrder),landscape)">$INFO[Container(8000).ListItem.Art(fanart)]</value>
		<value condition="Control.HasFocus(8000) + !String.IsEmpty(Container(8000).ListItem.Art(thumb)) + String.IsEqual(Skin.String(WidgetBackgroundOrder),landscape)">$INFO[Container(8000).ListItem.Art(thumb)]</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\dvd\)">home_art/playdisc.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\movies\)">home_art/movies.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\tvshows\)">home_art/tvshows.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\videos\)">home_art/videos.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\games\)">home_art/games.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\trailers\)">home_art/trailers.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\livetv\)">home_art/livetv.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\music\)">home_art/music.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\musicvideos\)">home_art/musicvideos.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\radio\)">home_art/radio.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\pictures\)">home_art/pictures.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\programs\)">home_art/programs.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\weather\)">home_art/weather.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\favourites\)">home_art/favourites.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\search\)">home_art/search.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\settings\)">home_art/settings.jpg</value>
		<value condition="String.IsEqual(Container(9000).ListItem.Property(background),home\shutdown\)">home_art/shutdown.jpg</value>
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(background)) + !String.StartsWith(Container(9000).ListItem.Property(background),home\)">$INFO[Container(9000).ListItem.Property(background)]</value>
	</variable>
	<variable name="HomeBackgroundSkinShortcuts">
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\dvd\)">home_art/playdisc.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\movies\)">home_art/movies.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\tvshows\)">home_art/tvshows.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\videos\)">home_art/videos.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\games\)">home_art/games.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\trailers\)">home_art/trailers.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\livetv\)">home_art/livetv.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\music\)">home_art/music.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\musicvideos\)">home_art/musicvideos.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\radio\)">home_art/radio.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\pictures\)">home_art/pictures.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\programs\)">home_art/programs.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\weather\)">home_art/weather.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\favourites\)">home_art/favourites.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\search\)">home_art/search.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\settings\)">home_art/settings.jpg</value>
		<value condition="String.IsEqual(Container(211).ListItem.Property(background),home\shutdown\)">home_art/shutdown.jpg</value>
		<value>$INFO[Container(211).ListItem.Property(background)] + !String.StartsWith(Container(9000).ListItem.Property(background),home\)</value>
	</variable>

	<variable name="MusicDiscArt">
		<value condition="!String.IsEmpty(Player.Art(album.discart))">$INFO[Player.Art(album.discart)]</value>
		<value condition="!String.IsEmpty(Player.Art(discart))">$INFO[Player.Art(discart)]</value>
		<value condition="!String.IsEmpty(SkinHelper.Player.Music.DiscArt)">$INFO[SkinHelper.Player.Music.DiscArt]</value>
		<value>$INFO[ListItem.Art(discart)]</value>
	</variable>
	<variable name="WidgetBackgroundOrderLabel">
		<value condition="String.IsEqual(Skin.String(WidgetBackgroundOrder),thumb) | String.IsEmpty(Skin.String(WidgetBackgroundOrder))">Thumbnail-Fanart-Landscape</value>
		<value condition="String.IsEqual(Skin.String(WidgetBackgroundOrder),fanart)">Fanart-Landscape-Thumbnail</value>
		<value condition="String.IsEqual(Skin.String(WidgetBackgroundOrder),landscape)">Landscape-Fanart-Thumbnail</value>
	</variable>
	<variable name="ListItemTitle">
		<value condition="Container.Content(albums) | Container.Content(songs)">$INFO[ListItem.Label]$INFO[ListItem.Label2, - ]</value>
		<value condition="String.Contains(Container.FolderPath,plugin)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Label]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>

	<variable name="NextAiredFanart">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Fanart)]</value>
	</variable>

	<variable name="GlobalDialogIcon">
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(poster))">$INFO[Container(8000).ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(actor))">$INFO[Container(8000).ListItem.Art(actor)]</value>
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(discart))">$INFO[Container(8000).ListItem.Art(discart)]</value>
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(Fanart))">$INFO[Container(8000).ListItem.Art(fanart)]</value>
		<value condition="![String.IsEmpty(Container(8000).ListItem.Icon) | String.StartsWith(Container(8000).ListItem.Icon, default)]">$INFO[Container(8000).ListItem.Icon]</value>
		<value>DefaultThumb.png</value>
	</variable>

	<variable name="GlobalFanart">
		<value condition="Window.IsActive(pictures) + String.IsEmpty(ListItem.Art(fanart)) + [String.IsEqual(ListItem.FileExtension,png) | String.IsEqual(ListItem.FileExtension,jpg) | String.IsEqual(ListItem.FileExtension,jpeg) | String.IsEqual(ListItem.FileExtension,bmp) | String.IsEqual(ListItem.FileExtension,gif) | String.IsEqual(ListItem.FileExtension,ico) | String.IsEqual(ListItem.FileExtension,tif) | String.IsEqual(ListItem.FileExtension,tiff) | String.IsEqual(ListItem.FileExtension,tga) | String.IsEqual(ListItem.FileExtension,pcx) | String.IsEqual(ListItem.FileExtension,cbz) | String.IsEqual(ListItem.FileExtension,zip) | String.IsEqual(ListItem.FileExtension,cbr) | String.IsEqual(ListItem.FileExtension,rar) | String.IsEqual(ListItem.FileExtension,m3u)]">$INFO[listitem.filenameandpath]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="GlobalExtraFanart">
		<!-- XXX: This is such a kludge.  It sucks having to see the first image first all the time -->
		<value condition="!String.IsEmpty(ListItem.Art(fanart)) + !System.IdleTime(5)"></value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.ExtraFanArtPath))">$INFO[Window(Home).Property(SkinHelper.ExtraFanArtPath)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.Music.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.Music.ExtraFanArt)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.PVR.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.PVR.ExtraFanArt)]</value>
		<value></value>
	</variable>
	<variable name="GlobalFanartDiffuse">
		<value condition="Skin.HasSetting(GlobalFanartLight)">FanartDiffuseLight</value>
		<value>FanartDiffuse</value>
	</variable>


	<variable name="GlobalWidgetIcon">
		<value condition="!String.IsEmpty(Container(8000).ListItem.Art(poster))">$INFO[Container(8000).ListItem.Art(poster)]</value>
		<value condition="![String.IsEmpty(Container(8000).ListItem.Icon) | String.StartsWith(Container(8000).ListItem.Icon, default)]">$INFO[Container(8000).ListItem.Icon]</value>
		<value>DefaultThumb.png</value>
		</variable>
	<variable name="GlobalWidgetLabel">
		<value condition="String.IsEqual(ListItem.DBTYPE, movie)">$INFO[ListItem.Title]$INFO[ListItem.Year, (,)]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE, episode)">$INFO[ListItem.TVShowTitle] - $INFO[ListItem.Season]x$INFO[ListItem.Episode,, - ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE, album)">$INFO[ListItem.Artist] - $INFO[ListItem.Title]$INFO[ListItem.Year, (,)]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE, song)">$INFO[ListItem.Artist] - $INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE, artist)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE, musicvideo)">$INFO[ListItem.Artist] - $INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>

	<variable name="RatingColor">
		<value condition="!String.Contains(ListItem.Votes,$COMMA)">FFFF0000</value>
		<value condition="String.StartsWith(ListItem.Votes,1$COMMA)">FFFF5555</value>
		<value condition="String.StartsWith(ListItem.Votes,2$COMMA)">FFFFFF00</value>
		<value condition="String.StartsWith(ListItem.Votes,3$COMMA)">FFFFFF00</value>
		<value condition="String.StartsWith(ListItem.Votes,4$COMMA)">FFFFFF00</value>
		<value condition="String.StartsWith(ListItem.Votes,5$COMMA)">FFFFFF00</value>
		<value condition="String.Contains(ListItem.Votes,$COMMA)">FF00FF00</value>
	</variable>

	<variable name="Language_Icons">
		<value condition="!String.IsEmpty(Skin.String(LanguageIcons.name))">$INFO[Skin.String(LanguageIcons.path)]/$INFO[ListItem.AudioLanguage]$INFO[Skin.String(LanguageIcons.ext)]</value>
		<value>resource://resource.images.languageflags.colour/$INFO[ListItem.AudioLanguage].png</value>
	</variable>

	<variable name="Player_RecordLabel_Icons">
		<value condition="!String.IsEmpty(Skin.String(RecordLabelIcons.name))">$INFO[Skin.String(RecordLabelIcons.path)]/$INFO[MusicPlayer.Property(Album_Label)]$INFO[Skin.String(RecordLabelIcons.ext)]</value>
		<value>resource://resource.images.recordlabels.white/$INFO[MusicPlayer.Property(Album_Label)].png</value>
	</variable>

	<variable name="Studio_Icons">
		<value condition="!String.IsEmpty(Skin.String(StudioIcons.name)) + !String.Contains(Container.FolderPath,advanced.launcher)">$INFO[Skin.String(StudioIcons.path)]/$INFO[ListItem.Studio]$INFO[Skin.String(StudioIcons.ext)]</value>
		<value condition="String.Contains(Container.FolderPath,advanced.launcher)">special://skin/extras/games/studios/$INFO[ListItem.Studio,,.png]</value>
		<value>resource://resource.images.studios.coloured/$INFO[ListItem.Studio].png</value>
	</variable>

	<variable name="Weather_Fanart">
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(background)) + !String.StartsWith(Container(9000).ListItem.Property(background),home\)">$INFO[Container(9000).ListItem.Property(background)]</value>
		<value condition="!String.IsEmpty(Skin.String(WeatherFanart.name)) + !Skin.HasSetting(WeatherFanart.multi)">$INFO[Skin.String(WeatherFanart.path)]/$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(WeatherFanart.name)) + Skin.HasSetting(WeatherFanart.multi)">$INFO[Skin.String(WeatherFanart.path)]/$INFO[Window(Weather).Property(Current.FanartCode)]</value>
		<value>resource://resource.images.weatherfanart.prairie/$INFO[Window(Weather).Property(Current.FanartCode)].jpg</value>
	</variable>
	<variable name="WeatherIconsPath">
		<value condition="!String.IsEmpty(Skin.String(WeatherIcons.name))">$INFO[Skin.String(WeatherIcons.path)]</value>
		<value>resource://resource.images.weathericons.coloured</value>
	</variable>
	<variable name="WeatherIconsExt">
		<value condition="!String.IsEmpty(Skin.String(WeatherIcons.name)) + !Skin.HasSetting(WeatherIcons.multi)">$INFO[Skin.String(WeatherIcons.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(WeatherIcons.name)) + Skin.HasSetting(WeatherIcons.multi)">/</value>
		<value>.png</value>
	</variable>
	<variable name="Weather_Icons_Current">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Day0">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Day0.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Day1">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Day1.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Day2">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Day2.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Day3">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Day3.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Day4">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Day4.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Day5">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Day5.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Day6">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Day6.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour1">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.1.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour2">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.2.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour3">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.3.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour4">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.4.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour5">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.5.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour6">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.6.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour7">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.7.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour8">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.8.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour9">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.9.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour10">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.10.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour11">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.11.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour12">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.12.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour13">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.13.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour14">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.14.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour15">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.15.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour16">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.16.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour17">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.17.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour18">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.18.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour19">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.19.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour20">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.20.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour21">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.21.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour22">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.22.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour23">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.23.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour24">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.24.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour25">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.25.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour26">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.26.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour27">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.27.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour28">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.28.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour29">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.29.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour30">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.30.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour31">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.31.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour32">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.32.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour33">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.33.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour34">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.34.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour35">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.35.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Hour36">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Hourly.36.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_36Hr1">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(36Hour.1.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_36Hr2">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(36Hour.2.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_36Hr3">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(36Hour.3.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Weekend1">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Weekend.1.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<variable name="Weather_Icons_Weekend2">
		<value>$VAR[WeatherIconsPath]/$INFO[Window(Weather).Property(Weekend.2.FanartCode)]$VAR[WeatherIconsExt]</value>
	</variable>
	<constant name="WeatherHomeLeft">275</constant>
	<constant name="WeatherHomeTop">555</constant>
	<constant name="WeatherHomeHeight">160</constant>
	<constant name="WeatherHomeWidth">150</constant>
	<constant name="WeatherPanelLeft">210</constant>
	<constant name="Weather7DayWidth">147</constant>
	<constant name="Weather7DayHeight">485</constant>
	<constant name="Weather12HourWidth">172</constant>
	<constant name="Weather12HourHeight">235</constant>
	<constant name="Weather36HourPanelLeft">300</constant>
	<constant name="Weather36HourWidth">103</constant>
	<constant name="Weather36HourHeight">120</constant>
	<constant name="WeatherWeekendWidth">525</constant>
	<constant name="WeatherWeekendHeight">485</constant>
	<constant name="WeatherMapHeight">490</constant>
	<constant name="WeatherMapWidth">1080</constant>
	<variable name="PlotBox_Text">
		<!-- Skin Shortcuts help text -->
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(302)">$LOCALIZE[31720]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(313)">$LOCALIZE[31733]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(303)">$LOCALIZE[31721]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(304)">$LOCALIZE[31722]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(401)">$LOCALIZE[31723]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(306)">$LOCALIZE[31724]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(305)">$LOCALIZE[31725]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(309)">$LOCALIZE[31726]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(307)">$LOCALIZE[31727]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(405)">$LOCALIZE[31728]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(10)">$LOCALIZE[31729]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(301)">$LOCALIZE[31730]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + Control.HasFocus(308)">$LOCALIZE[31731]</value>
		<!-- Videos -->
		<value condition="[Container.Content(Movies) + [!Skin.HasSetting(Show_PlotOutline) | String.IsEmpty(ListItem.PlotOutline)]] | Container.Content(TVShows) | Container.Content(Episodes) | Container.Content(MusicVideos) | String.Contains(Container.FolderPath,plugin)">$INFO[ListItem.Plot]</value>
		<value condition="Container.Content(Movies) + Skin.HasSetting(Show_PlotOutline) + !String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value condition="Container.Content(Seasons)">$INFO[Container.ShowPlot]</value>
		<!-- Music -->
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description)) + String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<!-- Addons -->
		<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
		<!-- Video Genres -->
		<value condition="String.IsEqual(ListItem.Label,Action)">$LOCALIZE[31343]</value>
		<value condition="String.IsEqual(ListItem.Label,Adventure)">$LOCALIZE[31344]</value>
		<value condition="String.IsEqual(ListItem.Label,Action And Adventure)">$LOCALIZE[31345]</value>
		<value condition="String.IsEqual(ListItem.Label,Adult)">$LOCALIZE[31346]</value>
		<value condition="String.IsEqual(ListItem.Label,Animation)">$LOCALIZE[31347]</value>
		<value condition="String.IsEqual(ListItem.Label,Anime)">$LOCALIZE[31348]</value>
		<value condition="String.IsEqual(ListItem.Label,Biography)">$LOCALIZE[31349]</value>
		<value condition="String.IsEqual(ListItem.Label,Bollywood)">$LOCALIZE[31350]</value>
		<value condition="String.IsEqual(ListItem.Label,Children)">$LOCALIZE[31351]</value>
		<value condition="String.IsEqual(ListItem.Label,Christmas)">$LOCALIZE[31352]</value>
		<value condition="String.IsEqual(ListItem.Label,Comedy)">$LOCALIZE[31353]</value>
		<value condition="String.IsEqual(ListItem.Label,Concert)">$LOCALIZE[31354]</value>
		<value condition="String.IsEqual(ListItem.Label,Crime)">$LOCALIZE[31355]</value>
		<value condition="String.IsEqual(ListItem.Label,Disaster)">$LOCALIZE[31356]</value>
		<value condition="String.IsEqual(ListItem.Label,Documentary)">$LOCALIZE[31357]</value>
		<value condition="String.IsEqual(ListItem.Label,Drama)">$LOCALIZE[31358]</value>
		<value condition="String.IsEqual(ListItem.Label,Epic)">$LOCALIZE[31397]</value>
		<value condition="String.IsEqual(ListItem.Label,Family)">$LOCALIZE[31359]</value>
		<value condition="String.IsEqual(ListItem.Label,Fantasy)">$LOCALIZE[31360]</value>
		<value condition="String.IsEqual(ListItem.Label,Film Noir) | String.IsEqual(ListItem.Label,Neo-Noir)">$LOCALIZE[31361]</value>
		<value condition="String.IsEqual(ListItem.Label,Foreign)">$LOCALIZE[31466]</value>
		<value condition="String.IsEqual(ListItem.Label,Game Show)">$LOCALIZE[31362]</value>
		<value condition="String.IsEqual(ListItem.Label,Hentai)">$LOCALIZE[31364]</value>
		<value condition="String.IsEqual(ListItem.Label,History)">$LOCALIZE[31365]</value>
		<value condition="String.IsEqual(ListItem.Label,Holiday)">$LOCALIZE[31467]</value>
		<value condition="String.IsEqual(ListItem.Label,Horror)">$LOCALIZE[31367]</value>
		<value condition="String.IsEqual(ListItem.Label,Independent) | String.IsEqual(ListItem.Label,Indie)">$LOCALIZE[31368]</value>
		<value condition="String.IsEqual(ListItem.Label,Interview)">$LOCALIZE[31369]</value>
		<value condition="String.IsEqual(ListItem.Label,Martial Arts)">$LOCALIZE[31370]</value>
		<value condition="String.IsEqual(ListItem.Label,Mini-Series) | String.IsEqual(ListItem.Label,Mini-TV-Series)">$LOCALIZE[31371]</value>
		<value condition="String.IsEqual(ListItem.Label,Monster)">$LOCALIZE[31372]</value>
		<value condition="String.IsEqual(ListItem.Label,Music)">$LOCALIZE[31373]</value>
		<value condition="String.IsEqual(ListItem.Label,Musical)">$LOCALIZE[31374]</value>
		<value condition="String.IsEqual(ListItem.Label,Mystery)">$LOCALIZE[31375]</value>
		<value condition="String.IsEqual(ListItem.Label,Nature)">$LOCALIZE[31376]</value>
		<value condition="String.IsEqual(ListItem.Label,News)">$LOCALIZE[31377]</value>
		<value condition="String.IsEqual(ListItem.Label,Post-Apocalypse)">$LOCALIZE[31378]</value>
		<value condition="String.IsEqual(ListItem.Label,Reality)">$LOCALIZE[31379]</value>
		<value condition="String.IsEqual(ListItem.Label,Romance)">$LOCALIZE[31381]</value>
		<value condition="String.IsEqual(ListItem.Label,Sci-Fi) | String.IsEqual(ListItem.Label,Science Fiction) | String.IsEqual(ListItem.Label,Science-Fiction)">$LOCALIZE[31382]</value>
		<value condition="String.IsEqual(ListItem.Label,Short)">$LOCALIZE[31383]</value>
		<value condition="String.IsEqual(ListItem.Label,Silent)">$LOCALIZE[31398]</value>
		<value condition="String.IsEqual(ListItem.Label,Soap)">$LOCALIZE[31384]</value>
		<value condition="String.IsEqual(ListItem.Label,Sport)">$LOCALIZE[31386]</value>
		<value condition="String.IsEqual(ListItem.Label,Spy)">$LOCALIZE[31387]</value>
		<value condition="String.IsEqual(ListItem.Label,Stageplay)">$LOCALIZE[31388]</value>
		<value condition="String.IsEqual(ListItem.Label,Stand-Up)">$LOCALIZE[31389]</value>
		<value condition="String.IsEqual(ListItem.Label,Superhero) | String.IsEqual(ListItem.Label,Comics)">$LOCALIZE[31390]</value>
		<value condition="String.IsEqual(ListItem.Label,Supernatural)">$LOCALIZE[31391]</value>
		<value condition="String.IsEqual(ListItem.Label,Talk Show)">$LOCALIZE[31392]</value>
		<value condition="String.IsEqual(ListItem.Label,Thriller) | String.IsEqual(ListItem.Label,Suspense)">$LOCALIZE[31393]</value>
		<value condition="String.IsEqual(ListItem.Label,War)">$LOCALIZE[31394]</value>
		<value condition="String.IsEqual(ListItem.Label,Western)">$LOCALIZE[31395]</value>
		<value condition="String.IsEqual(ListItem.Label,Wrestling)">$LOCALIZE[31396]</value>
	</variable>
	<variable name="MediaFlag_VideoResolution">
		<value condition="String.IsEmpty(ListItem.VideoResolution)">$INFO[VideoPlayer.VideoResolution,flags/VideoResolution/,.png]</value>
		<value>$INFO[ListItem.VideoResolution,flags/VideoResolution/,.png]</value>
	</variable>
	<variable name="MediaFlag_VideoAspect">
		<value condition="String.IsEmpty(ListItem.VideoAspect)">$INFO[VideoPlayer.VideoAspect,flags/VideoAspect/,.png]</value>
		<value>$INFO[ListItem.VideoAspect,flags/VideoAspect/,.png]</value>
	</variable>
	<variable name="MediaFlag_VideoCodec">
		<value condition="String.IsEmpty(ListItem.VideoCodec)">$INFO[VideoPlayer.VideoCodec,flags/VideoCodec/,.png]</value>
		<value>$INFO[ListItem.VideoCodec,flags/VideoCodec/,.png]</value>
	</variable>
	<variable name="MediaFlag_AudioCodec">
		<value condition="String.IsEmpty(ListItem.AudioCodec)">$INFO[VideoPlayer.AudioCodec,flags/AudioCodec/,.png]</value>
		<value>$INFO[ListItem.AudioCodec,flags/AudioCodec/,.png]</value>
	</variable>
	<variable name="MediaFlag_AudioChannels">
		<value condition="String.IsEmpty(ListItem.AudioChannels)">$INFO[VideoPlayer.AudioChannels,flags/AudioChannels/,ch.png]</value>
		<value>$INFO[ListItem.AudioChannels,flags/AudioChannels/,ch.png]</value>
	</variable>
	<variable name="MediaFlag_MPAA">
		<!-- US (IMDB) -->
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.StartsWith(ListItem.mpaa,Rated R)] | [String.IsEmpty(ListItem.mpaa) + String.StartsWith(VideoPlayer.mpaa,Rated R)]">flags/MPAA/mpaa_r.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.StartsWith(ListItem.mpaa,Rated PG-13)] | [String.IsEmpty(ListItem.mpaa) + String.StartsWith(VideoPlayer.mpaa,Rated PG-13)]">flags/MPAA/mpaa_pg13.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.StartsWith(ListItem.mpaa,Rated PG)] | [String.IsEmpty(ListItem.mpaa) + String.StartsWith(VideoPlayer.mpaa,Rated PG)]">flags/MPAA/mpaa_pg.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.StartsWith(ListItem.mpaa,Rated NC)] | [String.IsEmpty(ListItem.mpaa) + String.StartsWith(VideoPlayer.mpaa,Rated NC)]">flags/MPAA/mpaa_nc17.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.StartsWith(ListItem.mpaa,Rated G)] | [String.IsEmpty(ListItem.mpaa) + String.StartsWith(VideoPlayer.mpaa,Rated G)]">flags/MPAA/mpaa_general.png</value>
		<!-- US (TMDB) -->
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.IsEqual(ListItem.mpaa,R)] | [String.IsEmpty(ListItem.mpaa) + String.IsEqual(VideoPlayer.mpaa,R)]">flags/MPAA/mpaa_r.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.IsEqual(ListItem.mpaa,PG-13)] | [String.IsEmpty(ListItem.mpaa) + String.IsEqual(VideoPlayer.mpaa,PG-13)]">flags/MPAA/mpaa_pg13.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.IsEqual(ListItem.mpaa,PG)] | [String.IsEmpty(ListItem.mpaa) + String.IsEqual(VideoPlayer.mpaa,PG)]">flags/MPAA/mpaa_pg.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.IsEqual(ListItem.mpaa,NC-17)] | [String.IsEmpty(ListItem.mpaa) + String.IsEqual(VideoPlayer.mpaa,NC-17)]">flags/MPAA/mpaa_nc17.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.IsEqual(ListItem.mpaa,G)] | [String.IsEmpty(ListItem.mpaa) + String.IsEqual(VideoPlayer.mpaa,G)]">flags/MPAA/mpaa_general.png</value>
		<!-- US (TV) -->
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.EndsWith(ListItem.mpaa,TV-14)] | [String.IsEmpty(ListItem.mpaa) + String.EndsWith(VideoPlayer.mpaa,TV-14)]">flags/MPAA/TV-14.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.EndsWith(ListItem.mpaa,TV-G)] | [String.IsEmpty(ListItem.mpaa) + String.EndsWith(VideoPlayer.mpaa,TV-G)]">flags/MPAA/TV-G.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.EndsWith(ListItem.mpaa,TV-MA)] | [String.IsEmpty(ListItem.mpaa) + String.EndsWith(VideoPlayer.mpaa,TV-MA)]">flags/MPAA/TV-MA.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.EndsWith(ListItem.mpaa,TV-PG)] | [String.IsEmpty(ListItem.mpaa) + String.EndsWith(VideoPlayer.mpaa,TV-PG)]">flags/MPAA/TV-PG.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.EndsWith(ListItem.mpaa,TV-Y7)] | [String.IsEmpty(ListItem.mpaa) + String.EndsWith(VideoPlayer.mpaa,TV-Y7)]">flags/MPAA/TV-Y7.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.EndsWith(ListItem.mpaa,TV-Y)] | [String.IsEmpty(ListItem.mpaa) + String.EndsWith(VideoPlayer.mpaa,TV-Y)]">flags/MPAA/TV-Y.png</value>
		<!-- Germany -->
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Germany:0)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Germany:0)]">flags/MPAA/germany_0.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Germany:6)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Germany:6)]">flags/MPAA/germany_6.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Germany:12)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Germany:12)]">flags/MPAA/germany_12.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Germany:16)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Germany:16)]">flags/MPAA/germany_16.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Germany:18)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Germany:18)]">flags/MPAA/germany_18.png</value>
		<!-- Australia -->
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Australia:R)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Australia:R)]">flags/MPAA/australia_r.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Australia:MA)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Australia:MA)]">flags/MPAA/australia_ma.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Australia:M)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Australia:M)]">flags/MPAA/australia_m.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Australia:PG)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Australia:PG)]">flags/MPAA/australia_pg.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Australia:G)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Australia:G)]">flags/MPAA/australia_g.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Australia:E)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Australia:E)]">flags/MPAA/australia_e.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,Australia:X)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,Australia:X)]">flags/MPAA/australia_x.png</value>
		<!-- United Kingdom -->
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,UK:U)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,UK:U)]">flags/MPAA/bbfc_u.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,UK:PG)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,UK:PG)]">flags/MPAA/bbfc_pg.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,UK:12A)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,UK:12A)]">flags/MPAA/bbfc_12a.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,UK:12)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,UK:12)]">flags/MPAA/bbfc_12.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,UK:15)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,UK:15)]">flags/MPAA/bbfc_15.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,UK:18)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,UK:18)]">flags/MPAA/bbfc_18.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,UK:X)] | [String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,UK:X)]">flags/MPAA/bbfc_r18.png</value>
		<!-- France -->
		<value condition="[String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,France:U) | String.Contains(VideoPlayer.mpaa,partir de 3 ans) | String.Contains(VideoPlayer.mpaa,partir de 6 ans)]] | [!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,partir de 3 ans) | String.Contains(ListItem.mpaa,partir de 6 ans)]]">flags/MPAA/csaU.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,France:-10) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 10 ans) | String.Contains(VideoPlayer.mpaa,des propos ou des images peuvent heurter)]] | [!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,France:-10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)]]">flags/MPAA/csa10.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,France:-12) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 12 ans)]] | [!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,France:-12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)]]">flags/MPAA/csa12.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,France:-16) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 16 ans)]] | [!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,France:-16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)]]">flags/MPAA/csa16.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,France:-18) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 18 ans)]] | [!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,France:-18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)]]">flags/MPAA/csa18.png</value>
		<!-- Korean -->
		<value condition="[String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,전체)] | [!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,전체)]">flags/MPAA/KR_Certificate_All.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,12세)] | [!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,12세)]">flags/MPAA/KR_Certificate_12.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,15세)] | [!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,15세)]">flags/MPAA/KR_Certificate_15.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,불가)] | [!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,불가)]">flags/MPAA/KR_Certificate_18.png</value>
		<value condition="[String.IsEmpty(ListItem.mpaa) + String.Contains(VideoPlayer.mpaa,제한)] | [!String.IsEmpty(ListItem.mpaa) + String.Contains(ListItem.mpaa,제한)]">flags/MPAA/KR_Certificate_R.png</value>
		<!-- Brazil -->
		<value condition="[!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)]] | [String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,Brazil:Livre) | String.Contains(VideoPlayer.mpaa,Livre)]]">flags/MPAA/MPAA_Brazil_Livre.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)]] | [String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,Brazil:10) | String.Contains(VideoPlayer.mpaa,10 anos)]]">flags/MPAA/MPAA_Brazil_10.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)]] | [String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,Brazil:12) | String.Contains(VideoPlayer.mpaa,12 anos)]]">flags/MPAA/MPAA_Brazil_12.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)]] | [String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,Brazil:14) | String.Contains(VideoPlayer.mpaa,14 anos)]]">flags/MPAA/MPAA_Brazil_14.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)]] | [String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,Brazil:16) | String.Contains(VideoPlayer.mpaa,16 anos)]]">flags/MPAA/MPAA_Brazil_16.png</value>
		<value condition="[!String.IsEmpty(ListItem.mpaa) + [String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)]] | [String.IsEmpty(ListItem.mpaa) + [String.Contains(VideoPlayer.mpaa,Brazil:18) | String.Contains(VideoPlayer.mpaa,18 anos)]]">flags/MPAA/MPAA_Brazil_18.png</value>
		<value>flags/MPAA/NoRating.png</value>
	</variable>
	<variable name="MediaFlag_Rating">
		<value condition="[!Skin.HasSetting(Show_MediaFlagUserRating) + !String.IsEmpty(ListItem.Rating)] | [Skin.HasSetting(Show_MediaFlagUserRating) + String.IsEmpty(ListItem.UserRating)]">$INFO[ListItem.Rating]</value>
		<value condition="Skin.HasSetting(Show_MediaFlagUserRating) + !String.IsEmpty(ListItem.UserRating)">$INFO[ListItem.UserRating]</value>
		<value>NA</value>
	</variable>
	<variable name="PosterThumb">
		<value condition="!String.Contains(Container.FolderPath,plugin) + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="SquarePosterThumb">
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="LandscapeFanart">
		<!-- control 52 is the Landscape Viewtype, where Landscape images are always preferred -->
		<value condition="!String.IsEmpty(ListItem.Art(landscape)) + !String.IsEqual(ListItem.Art(landscape),-) + [Skin.HasSetting(ViewPreferLandscape) | Control.IsVisible(52)]">$INFO[ListItem.Art(landscape)]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="ListClearartClearlogo">
		<value condition="[!String.IsEmpty(ListItem.Art(clearlogo)) + !String.IsEqual(ListItem.Art(clearlogo),-) + Skin.HasSetting(ViewPreferClearLogo)] | String.IsEmpty(ListItem.Art(clearart)) | String.IsEqual(ListItem.Art(clearart),-)">$INFO[ListItem.Art(clearlogo)]</value>
		<value>$INFO[ListItem.Art(clearart)]</value>
	</variable>
	<variable name="PlayerTVShowClearartClearlogo">
		<value condition="[!String.IsEmpty(Player.Art(tvshow.clearlogo)) + !String.IsEqual(Player.Art(tvshow.clearlogo),-) + Skin.HasSetting(ViewPreferClearLogo)] | String.IsEmpty(Player.Art(tvshow.clearart)) | String.IsEqual(Player.Art(tvshow.clearart),-)">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value>$INFO[Player.Art(tvshow.clearart)]</value>
	</variable>
	<variable name="VideoPlayerTitle">
		<value condition="!String.IsEmpty(VideoPlayer.Year) + !VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Season,,x]$INFO[VideoPlayer.Episode,,. ]$INFO[VideoPlayer.TVShowTitle,, - ]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, (,)]</value>
		<value condition="String.IsEmpty(VideoPlayer.Year) + !VideoPlayer.Content(MusicVideos) + !Window.IsActive(GameOSD)">$INFO[VideoPlayer.Season,,x]$INFO[VideoPlayer.Episode,,. ]$INFO[VideoPlayer.TVShowTitle,, - ]$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(Game.Title) + Window.IsActive(GameOSD)">$INFO[Game.Title]</value>
		<value condition="!String.IsEmpty(Player.Title) + Window.IsActive(GameOSD)">$INFO[Player.Title]</value>
	<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="VideoPlayerTitle2">
		<value condition="!String.IsEmpty(VideoPlayer.Year) + [!String.IsEmpty(VideoPlayer.Artist) | !String.IsEmpty(VideoPlayer.Album)] + VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist]$INFO[VideoPlayer.Album, - ]$INFO[VideoPlayer.Year, (,)]</value>
		<value condition="String.IsEmpty(VideoPlayer.Year) + [!String.IsEmpty(VideoPlayer.Artist) | !String.IsEmpty(VideoPlayer.Album)] + VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist]$INFO[VideoPlayer.Album, - ]</value>
		<value condition="Integer.IsGreater(Player.ChapterCount,1) + !VideoPlayer.Content(LiveTV)">$INFO[Player.Chapter,$LOCALIZE[21396]: ]$INFO[Player.ChapterCount, / ]$INFO[Player.ChapterName,[COLOR=TitleText] - (,)[/COLOR]]</value>
		<value>$INFO[VideoPlayer.Tagline]</value>
	</variable>
	<variable name="SeekTimeLabel">
 		<value condition="!String.IsEmpty(Player.SeekNumeric)">[B]$INFO[Player.SeekNumeric(hh:mm:ss)][/B]</value>
 		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, [COLOR TextNF]/[/COLOR] ]</value>
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, [COLOR TextNF]/[/COLOR] ]</value>
 		<value>$INFO[Player.Time(hh:mm:ss)]$INFO[Player.Duration(hh:mm:ss), [COLOR TextNF]/[/COLOR] ]</value>
 	</variable>
	<variable name="GoPlaylist">
		<value condition="Window.IsActive(videos) + !String.IsEqual(Playlist.Length(video),0)">ActivateWindow(videoplaylist)</value>
		<value condition="Window.IsActive(music) + !String.IsEqual(Playlist.Length(music),0)">ActivateWindow(musicplaylist)</value>
	</variable>

	<!-- Next Aired for Videoinfo -->
	<variable name="TVShowStatus">
		<value condition="!String.IsEmpty(Window(Home).Property(NextAired.Label))">$INFO[Window(Home).Property(NextAired.Status)]</value>
		<value>$LOCALIZE[31472]</value>
	</variable>

	<!-- Next Aired Center Sub-Heading -->
	<variable name="GlobalSubHeadingCenter">
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(Window(Home).Property(NextAired.NextDate)) + !String.IsEmpty(Window(Home).Property(NextAired.NextTitle))">Show Status: $INFO[Window(Home).Property(NextAired.Status)],  Next Episode: $INFO[Window(Home).Property(NextAired.NextDate),,: ]$INFO[Window(Home).Property(NextAired.NextNumber),, - ]$INFO[Window(Home).Property(NextAired.NextTitle)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(Window(Home).Property(NextAired.NextDate))">Show Status: $INFO[Window(Home).Property(NextAired.Status)],  Next Episode: $INFO[Window(Home).Property(NextAired.NextDate),,: ]$INFO[Window(Home).Property(NextAired.NextNumber),, - ]TBA</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(Window(Home).Property(NextAired.Label)) + String.Contains(Window(Home).Property(NextAired.Status),Continuing)">Show Status: $INFO[Window(Home).Property(NextAired.Status)],  Next Episode: TBA</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + String.Contains(Window(Home).Property(NextAired.Status),Ended) + !String.IsEmpty(Window(Home).Property(NextAired.LatestDate))">Show Status: $LOCALIZE[31472], Aired: $INFO[Window(Home).Property(NextAired.Started)] to $INFO[Window(Home).Property(NextAired.LatestDate)], Last Episode: $INFO[Window(Home).Property(NextAired.LatestNumber),, - ]$INFO[Window(Home).Property(NextAired.LatestTitle)]</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(Window(Home).Property(NextAired.Label)) + String.Contains(Window(Home).Property(NextAired.Status),Returning Series)">Show Status: $INFO[Window(Home).Property(NextAired.Status)], Last Episode: $INFO[Window(Home).Property(NextAired.LatestNumber),, - ]$INFO[Window(Home).Property(NextAired.LatestTitle)],  Next Episode: TBA</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(Window(Home).Property(NextAired.Label)) + String.Contains(Window(Home).Property(NextAired.Status),New Series)">Show Status: $INFO[Window(Home).Property(NextAired.Status)], Last Episode: $INFO[Window(Home).Property(NextAired.LatestNumber),, - ]$INFO[Window(Home).Property(NextAired.LatestTitle)],  Next Episode: TBA</value>
		<!--String.Contains(Window(Home).Property(NextAired.Status),Final Season) + -->
		<value>$INFO[Window(Home).Property(NextAired.Status)]</value>
    </variable>

	<variable name="VideoHWDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>

	<variable name="GlobalHeadingLeft">
		<value condition="[String.EndsWith(System.CurrentWindow, Videos) | String.EndsWith(System.CurrentWindow, Music) | String.EndsWith(System.CurrentWindow, Programs) | String.EndsWith(System.CurrentWindow, Pictures)] + String.IsEmpty(Container.FolderPath)">$INFO[System.CurrentWindow]</value>
		<value condition="[String.EndsWith(Container.FolderPath, library://video/movies/) | String.EndsWith(Container.FolderPath, library://video/tvshows/) | String.EndsWith(Container.FolderPath, sources://video/) | String.EndsWith(Container.FolderPath, special://videoplaylists/) | String.EndsWith(Container.FolderPath, addons://sources/video) | String.EndsWith(Container.FolderPath, addons://sources/executable) | String.EndsWith(Container.FolderPath, addons://sources/image)]">$INFO[System.CurrentWindow]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, special://videoplaylists/) + !String.EndsWith(Container.FolderPath, special://videoplaylists/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20011]$INFO[Container.FolderName, · ]</value>

		<!-- Left side movie titles -->
		<value condition="String.EndsWith(Container.FolderPath, videodb://movies/genres/) | String.EndsWith(Container.FolderPath, videodb://movies/years/) | String.EndsWith(Container.FolderPath, videodb://movies/actors/) | String.EndsWith(Container.FolderPath, videodb://movies/directors/) | String.EndsWith(Container.FolderPath, videodb://movies/studios/) | String.EndsWith(Container.FolderPath, videodb://movies/sets/) | String.EndsWith(Container.FolderPath, videodb://movies/countries/) | String.EndsWith(Container.FolderPath, videodb://movies/tags/) | String.StartsWith(Container.FolderPath, videodb://recentlyaddedmovies/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/genres/) + !String.EndsWith(Container.FolderPath, videodb://movies/genres/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[135]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/years/) + !String.EndsWith(Container.FolderPath, videodb://movies/years/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[345]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/actors/) + !String.EndsWith(Container.FolderPath, videodb://movies/actors/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[344]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/directors/) + !String.EndsWith(Container.FolderPath, videodb://movies/directors/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[20348]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/studios/) + !String.EndsWith(Container.FolderPath, videodb://movies/studios/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[20388]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/sets/) + !String.EndsWith(Container.FolderPath, videodb://movies/sets/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[20434]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/countries/) + !String.EndsWith(Container.FolderPath, videodb://movies/countries/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[20451]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/tags/) + !String.EndsWith(Container.FolderPath, videodb://movies/tags/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342] · $LOCALIZE[20459]$INFO[Container.FolderName, · ]</value>
		<!-- fallbacks -->
		<value condition="String.StartsWith(Container.FolderPath, videodb://movies/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[342]</value>

		<!-- Left side tvshows titles -->
		<value condition="String.EndsWith(Container.FolderPath, videodb://tvshows/genres/) | String.EndsWith(Container.FolderPath, videodb://tvshows/years/) | String.EndsWith(Container.FolderPath, videodb://tvshows/actors/) | String.EndsWith(Container.FolderPath, videodb://inprogresstvshows/) | String.EndsWith(Container.FolderPath, videodb://tvshows/studios/) | String.EndsWith(Container.FolderPath, videodb://tvshows/tags/) | String.StartsWith(Container.FolderPath, videodb://recentlyaddedepisodes/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343]$INFO[Container.FolderName, · ]</value>
		<!-- These do not show the Genre in the title due to most titles having multiple genres and Kodi not keeping track of which singular genre you got here with -->
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/genres/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/genres/) + String.StartsWith(ListItem.DBType, tvshow)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[135]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/genres/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/genres/) + [String.StartsWith(ListItem.DBType, season) | [String.StartsWith(ListItem.DBType, episode) + !String.Contains(Container.FolderName, Season)]]">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[135] · ...$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/genres/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/genres/) + String.StartsWith(ListItem.DBType, episode) + String.Contains(Container.FolderName, Season)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[135] · ...$INFO[Container.ShowTitle, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/titles/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/titles/) + !String.Contains(Container.FolderName, Season)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/titles/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/titles/) + String.Contains(Container.FolderName, Season)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343]$INFO[ListItem.TVShowTitle, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/years/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/years/) + String.StartsWith(ListItem.DBType, tvshow)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[345]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/years/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/years/) + [String.StartsWith(ListItem.DBType, season) | [String.StartsWith(ListItem.DBType, episode) + !String.Contains(Container.FolderName, Season)]]">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[345]$INFO[ListItem.Year, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/years/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/years/) + String.StartsWith(ListItem.DBType, episode) + String.Contains(Container.FolderName, Season)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[345]$INFO[ListItem.Year, · ]$INFO[Container.ShowTitle, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/actors/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/actors/) + String.StartsWith(ListItem.DBType, tvshow)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[344]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/actors/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/actors/) + [String.StartsWith(ListItem.DBType, season) | [String.StartsWith(ListItem.DBType, episode) + !String.Contains(Container.FolderName, Season)]]">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[344] · ...$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/actors/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/actors/) + String.StartsWith(ListItem.DBType, episode) + String.Contains(Container.FolderName, Season)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[344] · ...$INFO[ListItem.TVShowTitle, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/studios/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/studios/) + String.StartsWith(ListItem.DBType, tvshow)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[20388]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/studios/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/studios/) + [String.StartsWith(ListItem.DBType, season) | [String.StartsWith(ListItem.DBType, episode) + !String.Contains(Container.FolderName, Season)]]">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[20388] · ...$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/studios/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/studios/) + String.StartsWith(ListItem.DBType, episode) + String.Contains(Container.FolderName, Season)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[20388] · ...$INFO[ListItem.TVShowTitle, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/tags/) + !String.EndsWith(Container.FolderPath, videodb://tvshows/tags/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343] · $LOCALIZE[20459]$INFO[Container.FolderName, · ]</value>
		<!-- fallbacks -->
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/) + String.StartsWith(ListItem.DBType, episode) + String.Contains(Container.FolderName, Season)">$INFO[Container.ShowTitle]$INFO[Container.FolderName,: ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://tvshows/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20343]</value>

		<!-- Left side files titles -->
		<value condition="[System.CurrentWindow(Videos) + Container.Content(files)]">$INFO[System.CurrentWindow],, · ]$LOCALIZE[744]$INFO[Container.FolderName, · ]</value>

		<!-- Left side playlist titles -->
		<value condition="[String.StartsWith(Container.FolderPath, special://profile/playlists/) + !String.EndsWith(Container.FolderPath, special://profile/playlists/)]">$INFO[System.CurrentWindow,, · ]$LOCALIZE[136]$INFO[Container.FolderName, · ]</value>

		<!-- Left side pictures titles -->
		<value condition="String.StartsWith(System.CurrentWindow, Pictures) + !String.IsEmpty(Container.FolderPath) + !String.EndsWith(Container.FolderPath, addons://sources/image) + !String.StartsWith(Container.FolderPath, plugin)">$INFO[System.CurrentWindow] · $INFO[Container.FolderPath]</value>

		<!-- Left side roles titles -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://roles/?)">$INFO[System.CurrentWindow,, · ] $LOCALIZE[38046]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://roles/)">$INFO[System.CurrentWindow,, · ] $LOCALIZE[38046] · $INFO[Container.FolderName]</value>
		<!-- Role Composer -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/?role=Composer)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29903]</value>
		<value condition="String.Contains(Container.FolderPath, &amp;role=Composer) + !String.IsEmpty(Container.ListItem.Property(Role.Composer))">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29903] · $INFO[Container.ListItem.Property(Role.Composer)] · $INFO[Container.FolderName]</value>
		<value condition="String.EndsWith(Container.FolderPath, &amp;role=Composer)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29903] · $INFO[Container.FolderName]</value>
		<!-- Role Conductor -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/?role=Conductor)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29990]</value>
		<value condition="String.Contains(Container.FolderPath, &amp;role=Conductor) + !String.IsEmpty(Container.ListItem.Property(Role.Conductor))">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29990] · $INFO[Container.ListItem.Property(Role.Conductor)] · $INFO[Container.FolderName]</value>
		<value condition="String.EndsWith(Container.FolderPath, &amp;role=Conductor)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29990] · $INFO[Container.FolderName]</value>
		<!-- Role Lyricist -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/?role=Lyricist)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29992]</value>
		<value condition="String.Contains(Container.FolderPath, &amp;role=Lyricist) + !String.IsEmpty(Container.ListItem.Property(Role.Lyricist))">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29992] · $INFO[Container.ListItem.Property(Role.Lyricist)] · $INFO[Container.FolderName]</value>
		<value condition="String.EndsWith(Container.FolderPath, &amp;role=Lyricist)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29992] · $INFO[Container.FolderName]</value>
		<!-- Role Remixer -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/?role=Remixer)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29987]</value>
		<value condition="String.Contains(Container.FolderPath, &amp;role=Remixer) + !String.IsEmpty(Container.ListItem.Property(Role.Remixer))">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29987] · $INFO[Container.ListItem.Property(Role.Remixer)] · $INFO[Container.FolderName]</value>
		<value condition="String.EndsWith(Container.FolderPath, &amp;role=Remixer)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[29987] · $INFO[Container.FolderName]</value>
		<!-- Roles -Album Artist -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/?albumartistsonly=true)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38043]</value>
		<value condition="String.EndsWith(Container.FolderPath, ?albumartistsonly=true) + !String.IsEmpty(Container.ListItem.AlbumArtist)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38043] · $INFO[Container.ListItem.AlbumArtist]</value>
		<value condition="String.Contains(Container.FolderPath, ?albumartistsonly=true) + !String.IsEmpty(Container.ListItem.AlbumArtist)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38043] · $INFO[Container.ListItem.AlbumArtist] · $INFO[Container.FolderName]</value>
		<value condition="String.Contains(Container.FolderPath, ?albumartistsonly=true) + String.IsEmpty(Container.ListItem.AlbumArtist)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38043] · $INFO[Container.FolderName]</value>
		<!-- Roles -All Roles -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/?albumartistsonly=false)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38044]</value>
		<!-- Roles -All Contributors -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/?roleid=-1000)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38045]</value>
		<value condition="String.EndsWith(Container.FolderPath, roleid=-1000) + !String.IsEmpty(Container.ListItem.Contributors)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38045] · $INFO[Container.ListItem.Contributors] · $INFO[Container.FolderName]</value>
		<value condition="String.EndsWith(Container.FolderPath, roleid=-1000)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994] · $LOCALIZE[38045] · $INFO[Container.FolderName]</value>
		<value condition="String.StartsWith(Container.FolderPath, library://music/musicroles/) + !String.EndsWith(Container.FolderPath, library://music/musicroles/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[29994]$INFO[Container.FolderName, · ]</value>

		<!-- Left side music titles -->
		<value condition="String.EndsWith(Container.FolderPath, musicdb://genres/) | String.EndsWith(Container.FolderPath, musicdb://artists/) | String.EndsWith(Container.FolderPath, musicdb://albums/) | String.EndsWith(Container.FolderPath, musicdb://songs/) | String.EndsWith(Container.FolderPath, musicdb://years/) | String.EndsWith(Container.FolderPath, library://music/top100/) | String.EndsWith(Container.FolderPath, musicdb://recentlyaddedalbums/) | String.EndsWith(Container.FolderPath, musicdb://recentlyplayedalbums/) | String.EndsWith(Container.FolderPath, musicdb://compilations/) | String.EndsWith(Container.FolderPath, special://musicplaylists/) | String.EndsWith(Container.FolderPath, library://music/musicroles/) | String.EndsWith(Container.FolderPath, sources://music/)">$INFO[System.CurrentWindow]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://genres/) + !String.EndsWith(Container.FolderPath, musicdb://genres/) + !String.StartsWith(ListItem.DBType, album) + !String.StartsWith(ListItem.DBType,song)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[135]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://genres/) + !String.EndsWith(Container.FolderPath, musicdb://genres/) + String.StartsWith(ListItem.DBType, album)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[135]$INFO[ListItem.Genre, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://genres/) + !String.EndsWith(Container.FolderPath, musicdb://genres/) + String.StartsWith(ListItem.DBType, song)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[135]$INFO[ListItem.Genre, · ] · ...$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/) + !String.EndsWith(Container.FolderPath, musicdb://artists/) + !String.StartsWith(ListItem.DBType, song)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[133]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://artists/) + !String.EndsWith(Container.FolderPath, musicdb://artists/) + String.StartsWith(ListItem.DBType, song)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[133] · ...$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://albums/) + !String.EndsWith(Container.FolderPath, musicdb://albums/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[132]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://songs/) + !String.EndsWith(Container.FolderPath, musicdb://songs/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[134]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://years/) + !String.EndsWith(Container.FolderPath, musicdb://years/) + !String.StartsWith(ListItem.DBType, song)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[652]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://years/) + !String.EndsWith(Container.FolderPath, musicdb://years/) + String.StartsWith(ListItem.DBType, song)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[652]$INFO[ListItem.Year, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, library://music/top100/) + !String.EndsWith(Container.FolderPath, library://music/top100/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[271]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://recentlyaddedalbums/) + !String.EndsWith(Container.FolderPath, musicdb://recentlyaddedalbums/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[359]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://recentlyplayedalbums/) + !String.EndsWith(Container.FolderPath, musicdb://recentlyplayedalbums/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[517]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, musicdb://compilations/) + !String.EndsWith(Container.FolderPath, musicdb://compilations/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[521]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, special://musicplaylists/) + !String.EndsWith(Container.FolderPath, special://musicplaylists/)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[20011]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(System.CurrentWindow, Music) + String.EndsWith(Container.Content, files)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[744]$INFO[Container.FolderPath, · ]</value>
		<!-- fallbacks -->
		<value condition="String.StartsWith(Container.FolderPath, musicdb://)">$INFO[System.CurrentWindow]</value>

		<!-- Left side musicvideo titles -->
		<value condition="String.EndsWith(Container.FolderPath, videodb://musicvideos/genres/) | String.EndsWith(Container.FolderPath, videodb://musicvideos/years/) | String.EndsWith(Container.FolderPath, videodb://musicvideos/artists/) | String.EndsWith(Container.FolderPath, videodb://musicvideos/albums/) | String.EndsWith(Container.FolderPath, videodb://musicvideos/directors/) | String.EndsWith(Container.FolderPath, videodb://musicvideos/studios/) | String.EndsWith(Container.FolderPath, videodb://musicvideos/tags/) | String.EndsWith(Container.FolderPath, videodb://musicvideos/recentlyaddedmusicvideos/)">$LOCALIZE[20389]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/genres/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/genres/) + !String.StartsWith(ListItem.DBType, album) + !String.StartsWith(ListItem.DBType, song)">$LOCALIZE[20389] · $LOCALIZE[135]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/years/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/years/) + String.StartsWith(ListItem.DBType, musicvideo)">$LOCALIZE[20389] · $LOCALIZE[652]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/artists/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/artists/) + !String.StartsWith(ListItem.DBType, musicvideo)">$LOCALIZE[20389] · $LOCALIZE[133]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/artists/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/artists/) + String.StartsWith(ListItem.DBType, musicvideo)">$LOCALIZE[20389] · $LOCALIZE[133]$INFO[ListItem.Artist, · ]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/albums/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/albums/)">$LOCALIZE[20389] · $LOCALIZE[132]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/directors/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/directors/)">$LOCALIZE[20389] · $LOCALIZE[20348]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/studios/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/studios/)">$LOCALIZE[20389] · $LOCALIZE[20388]$INFO[Container.FolderName, · ]</value>
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/tags/) + !String.EndsWith(Container.FolderPath, videodb://musicvideos/tags/)">$LOCALIZE[20389] · $LOCALIZE[20459]$INFO[Container.FolderName, · ]</value>
		<!-- fallbacks -->
		<value condition="String.StartsWith(Container.FolderPath, videodb://musicvideos/)">$LOCALIZE[20389]</value>

		<!-- Left side addons titles -->
		<value condition="String.StartsWith(Container.FolderPath, plugin)">$INFO[System.CurrentWindow,, · ]$LOCALIZE[24001]$INFO[Container.FolderName, · ]</value>

		<!-- remaining old Left side titles-->
		<value condition="Window.IsActive(MusicPlaylist)">$LOCALIZE[2] $LOCALIZE[559]</value>
		<value condition="Window.IsActive(SystemInfo)">$LOCALIZE[130]</value>
		<value condition="Window.IsActive(LoginScreen)">$LOCALIZE[20096]</value>
		<value condition="String.IsEmpty(Container.FolderPath)">$INFO[System.CurrentWindow]</value>
		<value>$INFO[Container.FolderName]</value>
	</variable>
</includes>
