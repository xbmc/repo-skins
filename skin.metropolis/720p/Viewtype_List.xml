<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="Viewtype_List">
		<control type="group">
			<visible>Control.IsVisible(55)</visible>
			<!-- Browser -->
			<control type="list" id="55">
				<animation type="Conditional" condition="Window.IsActive(addoninformation)">
					<effect type="zoom" time="600" center="640,360" start="100" end="50" tween="cubic" easing="out" />
					<effect type="fade" time="400" start="100" end="0" />
				</animation>
				<posx>360</posx>
				<posy>140</posy>
				<height>350</height>
				<width>860</width>
				<onup>55</onup>
				<ondown>55</ondown>
				<include condition="!Skin.HasSetting(ViewLockdown)">OnLeft7000</include>
				<onright>997</onright>
				<scrolltime>160</scrolltime>
				<viewtype label="31285">list</viewtype>
				<orientation>vertical</orientation>
				<preloaditems>2</preloaditems>
				<aligny>top</aligny>
				<pagecontrol>998</pagecontrol>
				<include>Animation_OpenCloseFade</include>
				<include>Animation_FadedByMenu</include>
				<include>Animation_HiddenByInfo</include>
				<itemlayout width="0" height="35">
					<!-- List Line Item Divider -->
					<control type="image">
						<posx>35</posx>
						<posy>33</posy>
						<width>815</width>
						<height>2</height>
						<aligny>center</aligny>
						<texture>VideoInfoLine.png</texture>
						<colordiffuse>FilesDividerDiffuse</colordiffuse>
					</control>
					<!-- Items in Video Library -->
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>708</width>
						<height>35</height>
						<aligny>center</aligny>
						<font>METF_TitleText</font>
						<textcolor>TextNF</textcolor>
						<selectedcolor>TextFO</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<scroll>false</scroll>
						<visible>Window.IsActive(videos) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(movies)]</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>635</width>
						<height>35</height>
						<aligny>center</aligny>
						<font>METF_TitleText</font>
						<textcolor>TextNF</textcolor>
						<selectedcolor>TextFO</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<scroll>false</scroll>
						<visible>Window.IsActive(videos) + [Container.Content(movies) | Container.Content(sets) | Container.Content(episodes)]</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>576</width>
						<height>35</height>
						<aligny>center</aligny>
						<font>METF_TitleText</font>
						<textcolor>TextNF</textcolor>
						<selectedcolor>TextFO</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<scroll>false</scroll>
						<visible>Window.IsActive(videos) + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
					</control>
					<!-- Watched Overlay for Items in Video Library -->
					<control type="image">
						<posx>4</posx>
						<posy>5</posy>
						<width>24</width>
						<height>24</height>
						<texture>$INFO[ListItem.Overlay]</texture>
						<colordiffuse>WatchedOverlay</colordiffuse>
						<visible>!ListItem.IsResumable + Window.IsActive(videos) + [[[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideMovieWatchedOverlays)] | [![Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideTVWatchedOverlays)]]</visible>
					</control>
					<!-- Watched Overlay for In-Progress Items in Video Library -->
					<control type="image">
						<posx>-2</posx>
						<posy>0</posy>
						<width>35</width>
						<height>35</height>
						<texture>flags/Progress/$INFO[ListItem.PercentPlayed].png</texture>
						<colordiffuse>WatchedOverlay</colordiffuse>
						<visible>ListItem.IsResumable + Window.IsActive(videos) + [[[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideMovieWatchedOverlays)] | [![Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideTVWatchedOverlays)]]</visible>
					</control>
					<!-- Items in Music Library -->
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>708</width>
						<height>35</height>
						<aligny>center</aligny>
						<font>METF_TitleText</font>
						<textcolor>TextNF</textcolor>
						<selectedcolor>TextFO</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<scroll>false</scroll>
						<visible>Window.IsActive(music)</visible>
					</control>
					<!-- Items NOT in Video or Music Library -->
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>740</width>
						<height>35</height>
						<aligny>center</aligny>
						<font>METF_TitleText</font>
						<textcolor>TextNF</textcolor>
						<selectedcolor>TextFO</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<scroll>false</scroll>
						<visible>!Window.IsActive(videos) + !Window.IsActive(music)</visible>
					</control>
					<!-- Watched Overlay for Items NOT in Video Library -->
					<control type="image">
						<posx>4</posx>
						<posy>5</posy>
						<width>24</width>
						<height>24</height>
						<texture>$INFO[ListItem.Overlay]</texture>
						<colordiffuse>WatchedOverlay</colordiffuse>
						<visible>!Window.IsActive(videos) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<!-- Addon Progress/state -->
					<control type="label">
						<posx>630</posx>
						<posy>-2</posy>
						<width>220</width>
						<height>35</height>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(Addon.Status)]</label>
						<font>METF_InfoText</font>
						<textcolor>MediaDetailsEpisodes</textcolor>
						<visible>Window.IsActive(addonbrowser)</visible>
					</control>
					<!-- HD/SD icons -->
					<control type="image">
						<posx>768</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>$INFO[ListItem.VideoResolution,flags/VideoResolutionIcons/,.png]</texture>
						<visible>Window.IsActive(videos) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(movies)] + !String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
					<control type="image">
						<posx>695</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>$INFO[ListItem.VideoResolution,flags/VideoResolutionIcons/,.png]</texture>
						<visible>Window.IsActive(videos) + Container.Content(seasons) + String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + !String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
					<control type="image">
						<posx>695</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>$INFO[ListItem.VideoResolution,flags/VideoResolutionIcons/,.png]</texture>
						<visible>Window.IsActive(videos) + [Container.Content(movies) | Container.Content(episodes)] + !String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
					<!-- 3D icon -->
					<control type="image">
						<posx>745</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>flags/3d.png</texture>
						<visible>Window.IsActive(videos) + [Container.Content(movies) | Container.Content(episodes)] + [ListItem.IsStereoscopic | String.Contains(ListItem.FilenameAndPath,.3d.) | String.Contains(ListItem.FilenameAndPath,hsbs) | String.Contains(ListItem.FilenameAndPath,sbs) | String.Contains(ListItem.FilenameAndPath,half-sbs)]</visible>
					</control>
					<!-- Sets icon -->
					<control type="image">
						<posx>795</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>flags/set.png</texture>
						<visible>Window.IsActive(videos) + !String.StartsWith(Container.FolderPath, videodb://movies/sets/) + !String.IsEmpty(ListItem.Set)</visible>
					</control>
					<!-- Episode Count for TVShows -->
					<control type="label">
						<posx>715</posx>
						<posy>-2</posy>
						<width>145</width>
						<height>35</height>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(NumEpisodes)] $LOCALIZE[20360]</label>
						<font>METF_InfoText</font>
						<textcolor>MediaDetailsEpisodes</textcolor>
						<visible>Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(NumEpisodes))</visible>
					</control>
					<!-- Episode Count for Seasons -->
					<control type="label">
						<posx>715</posx>
						<posy>-2</posy>
						<width>145</width>
						<height>35</height>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(NumEpisodes)] $LOCALIZE[20360]</label>
						<font>METF_InfoText</font>
						<textcolor>MediaDetailsEpisodes</textcolor>
						<visible>[Container.Content(seasons) + !String.IsEmpty(ListItem.Property(NumEpisodes))] + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<!-- Star Rating -->
					<control type="group">
						<!-- XXX: temporarily commented out for videos until I figure out exactly how I'd like to implement this
						<visible>!Window.IsActive(videos) | [Window.IsActive(videos) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)]]</visible>
						<include>VisibleIfNotMovieSet</include>
						-->
						<visible>!Window.IsActive(videos) + !String.Contains(Container.FolderPath,plugin)</visible>
						<control type="label">
							<posx>775</posx>
							<posy>-2</posy>
							<width>45</width>
							<height>35</height>
							<align>right</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Rating]</label>
							<font>METF_InfoText</font>
							<textcolor>TextNF</textcolor>
							<visible>!String.IsEmpty(ListItem.Rating)</visible>
						</control>
						<control type="image">
							<posx>772</posx>
							<posy>6</posy>
							<width>20</width>
							<height>20</height>
							<texture>Star.png</texture>
							<colordiffuse>FFFFFFFF</colordiffuse>
							<visible>!String.IsEmpty(ListItem.Rating)</visible>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="0" height="35">
					<!-- List Line Item Divider -->
					<control type="image">
						<posx>35</posx>
						<posy>33</posy>
						<width>815</width>
						<height>2</height>
						<aligny>center</aligny>
						<texture>VideoInfoLine.png</texture>
						<colordiffuse>FilesDividerDiffuse</colordiffuse>
					</control>
					<!-- Focus Bar -->
					<control type="image">
						<posx>35</posx>
						<posy>0</posy>
						<width>815</width>
						<height>33</height>
						<aligny>center</aligny>
						<texture>FocusLine.png</texture>
						<colordiffuse>FocusBar</colordiffuse>
					</control>
					<!-- Items in Video Library -->
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>708</width>
						<height>35</height>
						<aligny>center</aligny>
						<scrollout>false</scrollout>
						<pauseatend>1800</pauseatend>
						<scrollspeed>40</scrollspeed>
						<scroll>true</scroll>
						<font>METF_TitleText</font>
						<textcolor>FocusBarText</textcolor>
						<selectedcolor>FocusBarText</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<visible>Window.IsActive(videos) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(movies) | Container.Content(sets)]</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>635</width>
						<height>35</height>
						<aligny>center</aligny>
						<scrollout>false</scrollout>
						<pauseatend>1800</pauseatend>
						<scrollspeed>40</scrollspeed>
						<scroll>true</scroll>
						<font>METF_TitleText</font>
						<textcolor>FocusBarText</textcolor>
						<selectedcolor>FocusBarText</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<visible>Window.IsActive(videos) + [Container.Content(movies) | Container.Content(sets) | Container.Content(episodes)]</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>576</width>
						<height>35</height>
						<aligny>center</aligny>
						<scrollout>false</scrollout>
						<pauseatend>1800</pauseatend>
						<scrollspeed>40</scrollspeed>
						<scroll>true</scroll>
						<font>METF_TitleText</font>
						<textcolor>FocusBarText</textcolor>
						<selectedcolor>FocusBarText</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<visible>Window.IsActive(videos) + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
					</control>
					<!-- Watched Overlay -->
					<control type="image">
						<posx>4</posx>
						<posy>5</posy>
						<width>24</width>
						<height>24</height>
						<texture>$INFO[ListItem.Overlay]</texture>
						<colordiffuse>WatchedOverlay</colordiffuse>
						<visible>!ListItem.IsResumable + Window.IsActive(videos) + [[[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideMovieWatchedOverlays)] | [![Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideTVWatchedOverlays)]]</visible>
					</control>
					<!-- Watched Overlay for In-Progress Items in Video Library -->
					<control type="image">
						<posx>-2</posx>
						<posy>0</posy>
						<width>35</width>
						<height>35</height>
						<texture>flags/Progress/$INFO[ListItem.PercentPlayed].png</texture>
						<colordiffuse>WatchedOverlay</colordiffuse>
						<visible>ListItem.IsResumable + Window.IsActive(videos) + [[[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideMovieWatchedOverlays)] | [![Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(HideTVWatchedOverlays)]]</visible>
					</control>
					<!-- Items in Music Library -->
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>708</width>
						<height>35</height>
						<scrollout>false</scrollout>
						<pauseatend>1800</pauseatend>
						<scrollspeed>40</scrollspeed>
						<scroll>true</scroll>
						<aligny>center</aligny>
						<font>METF_TitleText</font>
						<label>$VAR[ListItemTitle]</label>
						<textcolor>FocusBarText</textcolor>
						<selectedcolor>FocusBarText</selectedcolor>
						<visible>Window.IsActive(music)</visible>
					</control>
					<!-- Items NOT in Video or Music Library -->
					<control type="label">
						<posx>45</posx>
						<posy>-2</posy>
						<width>740</width>
						<height>35</height>
						<aligny>center</aligny>
						<scrollout>false</scrollout>
						<pauseatend>1800</pauseatend>
						<scrollspeed>40</scrollspeed>
						<scroll>true</scroll>
						<font>METF_TitleText</font>
						<textcolor>FocusBarText</textcolor>
						<selectedcolor>FocusBarText</selectedcolor>
						<label>$VAR[ListItemTitle]</label>
						<visible>!Window.IsActive(videos) + !Window.IsActive(music)</visible>
					</control>
					<!-- Watched Overlay for Items NOT in Video Library -->
					<control type="image">
						<posx>4</posx>
						<posy>5</posy>
						<width>24</width>
						<height>24</height>
						<texture>$INFO[ListItem.Overlay]</texture>
						<colordiffuse>WatchedOverlay</colordiffuse>
						<visible>!Window.IsActive(videos) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<!-- Addon Progress/state -->
					<control type="label">
						<posx>630</posx>
						<posy>-2</posy>
						<width>220</width>
						<height>35</height>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(Addon.Status)]</label>
						<font>METF_InfoText</font>
						<textcolor>MediaDetailsEpisodes</textcolor>
						<visible>Window.IsActive(addonbrowser)</visible>
					</control>
					<!-- HD/SD icons -->
					<control type="image">
						<posx>768</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>$INFO[ListItem.VideoResolution,flags/VideoResolutionIcons/,.png]</texture>
						<visible>Window.IsActive(videos) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(movies) | Container.Content(episodes)] + !String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
					<control type="image">
						<posx>695</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>$INFO[ListItem.VideoResolution,flags/VideoResolutionIcons/,.png]</texture>
						<visible>Window.IsActive(videos) + Container.Content(seasons) + String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + !String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
					<control type="image">
						<posx>695</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>$INFO[ListItem.VideoResolution,flags/VideoResolutionIcons/,.png]</texture>
						<visible>Window.IsActive(videos) + [Container.Content(movies) | Container.Content(episodes)] + !String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
					<!-- 3D icon -->
					<control type="image">
						<posx>745</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>flags/3d.png</texture>
						<visible>Window.IsActive(videos) + [Container.Content(movies) | Container.Content(episodes)] + [ListItem.IsStereoscopic | String.Contains(ListItem.FilenameAndPath,.3d.) | String.Contains(ListItem.FilenameAndPath,hsbs) | String.Contains(ListItem.FilenameAndPath,sbs) | String.Contains(ListItem.FilenameAndPath,half-sbs)]</visible>
					</control>
					<!-- Sets icon -->
					<control type="image">
						<posx>795</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>flags/set.png</texture>
						<visible>Window.IsActive(videos) + !String.StartsWith(Container.FolderPath, videodb://movies/sets/) + !Control.HasFocus(997) + !String.IsEmpty(ListItem.Set)</visible>
					</control>
					<control type="image">
						<posx>795</posx>
						<posy>5</posy>
						<width>32</width>
						<height>24</height>
						<texture>flags/setFO.png</texture>
						<visible>Window.IsActive(videos) + !String.StartsWith(Container.FolderPath, videodb://movies/sets/) + Control.HasFocus(997) + !String.IsEmpty(ListItem.Set)</visible>
					</control>
					<!-- Episode Count for TVShows -->
					<control type="label">
						<posx>715</posx>
						<posy>-2</posy>
						<width>145</width>
						<height>35</height>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(NumEpisodes)] $LOCALIZE[20360]</label>
						<font>METF_InfoText</font>
						<textcolor>MediaDetailsEpisodes</textcolor>
						<visible>Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(NumEpisodes))</visible>
					</control>
					<!-- Episode Count for Seasons -->
					<control type="label">
						<posx>715</posx>
						<posy>-2</posy>
						<width>145</width>
						<height>35</height>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(NumEpisodes)] $LOCALIZE[20360]</label>
						<font>METF_InfoText</font>
						<textcolor>MediaDetailsEpisodes</textcolor>
						<visible>[Container.Content(seasons) + !String.IsEmpty(ListItem.Property(NumEpisodes))] + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<!-- Star Rating -->
					<control type="group">
						<!-- XXX: temporarily commented out for videos until I figure out exactly how I'd like to implement this
						<visible>!Window.IsActive(videos) | [Window.IsActive(videos) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)]]</visible>
						<include>VisibleIfNotMovieSet</include>
						-->
						<visible>!Window.IsActive(videos) + !String.Contains(Container.FolderPath,plugin)</visible>
						<control type="label">
							<posx>775</posx>
							<posy>-2</posy>
							<width>45</width>
							<height>35</height>
							<align>right</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Rating]</label>
							<font>METF_InfoText</font>
							<textcolor>TextNF</textcolor>
							<visible>!String.IsEmpty(ListItem.Rating)</visible>
						</control>
						<control type="image">
							<posx>772</posx>
							<posy>6</posy>
							<width>20</width>
							<height>20</height>
							<texture>Star.png</texture>
							<colordiffuse>$VAR[RatingColor]</colordiffuse>
							<visible>!String.IsEmpty(ListItem.Rating)</visible>
						</control>
					</control>
				</focusedlayout>
			</control>
			<!-- Thumbnails -->
			<control type="group">
				<animation type="Conditional" condition="Window.IsActive(addoninformation)">
					<effect type="zoom" time="600" center="640,360" start="100" end="50" tween="cubic" easing="out" />
					<effect type="fade" time="400" start="100" end="0" />
				</animation>
				<include>Animation_OpenCloseFade</include>
				<include>Animation_FadedByMenu</include>
				<include>Animation_HiddenByInfo</include>
				<!-- Movie, TVShow and Season Posters -->
					<control type="group">
						<visible>Window.IsActive(videos) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)]</visible>
						<posx>20</posx>
						<posy>65</posy>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<texture>frames/ClassicFrame_Background.png</texture>
							<colordiffuse>FrameBackgroundDiffuse</colordiffuse>
							<visible>!String.IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<fadetime>100</fadetime>
							<texture background="true" diffuse="frames/postermatte.png">$INFO[ListItem.Icon]</texture>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<visible>String.IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<fadetime>100</fadetime>
							<texture background="true" fallback="DefaultThumb.png">$VAR[PosterThumb]</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!String.IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="image">
							<posx>0</posx>
							<posy>-10</posy>
							<width>335</width>
							<height>490</height>
							<texture>frames/ClassicFrame_PosterMedium.png</texture>
							<visible>!String.IsEmpty(ListItem.Title)</visible>
						</control>
					</control>
					<!-- Episode Posters -->
					<control type="group">
						<visible>Window.IsActive(videos) + Container.Content(episodes)</visible>
						<posx>25</posx>
						<posy>45</posy>
						<control type="image">
							<posx>22</posx>
							<posy>112</posy>
							<width>293</width>
							<height>265</height>
							<texture>frames/ClassicFrame_Background.png</texture>
							<colordiffuse>FrameBackgroundDiffuse</colordiffuse>
							<visible>String.IsEmpty(ListItem.Title) + String.IsEqual(ListItem.Icon,-) + String.StartsWith(ListItem.Icon,default)</visible>
						</control>
						<control type="image">
							<posx>22</posx>
							<posy>112</posy>
							<width>293</width>
							<height>265</height>
							<fadetime>100</fadetime>
							<texture background="true" diffuse="frames/episode_matte.png">$INFO[ListItem.Icon]</texture>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<visible>String.IsEmpty(ListItem.Title) | String.IsEqual(ListItem.Icon,-) | String.StartsWith(ListItem.Icon,default)</visible>
						</control>
						<control type="image">
							<posx>22</posx>
							<posy>162</posy>
							<width>293</width>
							<height>165</height>
							<fadetime>100</fadetime>
							<texture background="true">$INFO[ListItem.Icon]</texture>
							<aspectratio scalediffuse="false">scale</aspectratio>
							<visible>!String.IsEmpty(ListItem.Title) + !String.IsEqual(ListItem.Icon,-) + !String.StartsWith(ListItem.Icon,default)</visible>
						</control>
						<control type="image">
							<posx>22</posx>
							<posy>162</posy>
							<width>293</width>
							<height>165</height>
							<texture>frames/ClassicFrameGlass_Horizontal.png</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<colordiffuse>GlassDiffuse</colordiffuse>
							<fadetime>100</fadetime>
							<visible>!String.IsEmpty(ListItem.Title) + !String.IsEqual(ListItem.Icon,-) + !String.StartsWith(ListItem.Icon,default)</visible>
						</control>
						<control type="image">
							<posx>5</posx>
							<posy>144</posy>
							<width>328</width>
							<height>203</height>
							<texture>frames/ClassicFrame_FanartSmall.png</texture>
							<fadetime>100</fadetime>
							<visible>!String.IsEmpty(ListItem.Title) + !String.IsEqual(ListItem.Icon,-) + !String.StartsWith(ListItem.Icon,default)</visible>
						</control>
					</control>
				<!-- Artist/Album Cover, Addons, and Pictures -->
					<control type="image">
						<posx>32</posx>
						<posy>132</posy>
						<width>300</width>
						<height>300</height>
						<texture>frames/ClassicFrame_Background.png</texture>
						<colordiffuse>FrameBackgroundDiffuse</colordiffuse>
						<visible>[Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons) | [Window.IsActive(pictures) + !String.Contains(Container.FolderPath,plugin)]] + [!String.StartsWith(ListItem.Icon,default) | String.StartsWith(ListItem.Icon,defaultalbumcover)] + !String.IsEmpty(ListItem.Icon)</visible>
					</control>
					<control type="image">
						<posx>32</posx>
						<posy>132</posy>
						<width>300</width>
						<height>300</height>
						<fadetime>100</fadetime>
						<aspectratio align="right" aligny="center">stretch</aspectratio>
						<texture>$INFO[ListItem.Icon]</texture>
						<visible>Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons)</visible>
					</control>
					<control type="image">
						<posx>32</posx>
						<posy>132</posy>
						<width>300</width>
						<height>300</height>
						<fadetime>100</fadetime>
						<aspectratio align="right" aligny="center">keep</aspectratio>
						<texture>$INFO[ListItem.Icon]</texture>
						<visible>Window.IsActive(pictures) + !String.Contains(Container.FolderPath,plugin)</visible>
					</control>
					<control type="image">
						<posx>12</posx>
						<posy>111</posy>
						<width>339</width>
						<height>342</height>
						<texture>frames/ClassicFrame_SquareMedium.png</texture>
						<visible>[Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons) | [Window.IsActive(pictures) + !String.Contains(Container.FolderPath,plugin)]] + [!String.StartsWith(ListItem.Icon,default) | String.StartsWith(ListItem.Icon,defaultalbumcover)] + !String.IsEmpty(ListItem.Icon)</visible>
					</control>
					<!-- Images for other items -->
					<control type="image">
						<posx>37</posx>
						<posy>45</posy>
						<width>300</width>
						<height>440</height>
						<fadetime>100</fadetime>
						<aspectratio align="right" aligny="center">keep</aspectratio>
						<texture>$INFO[ListItem.Icon]</texture>
						<visible>[!Window.IsActive(videos) + !Window.IsActive(games) | [Window.IsActive(videos) + !Container.Content(movies) + !Container.Content(sets) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(genres)]] + ![Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons) | [Window.IsActive(pictures) + !String.Contains(Container.FolderPath,plugin) + !Window.IsActive(games)]]</visible>
					</control>
					<control type="image">
						<posx>37</posx>
						<posy>45</posy>
						<width>300</width>
						<height>440</height>
						<fadetime>100</fadetime>
						<aspectratio align="right" aligny="center">keep</aspectratio>
						<texture fallback="DefaultMovieGenre.jpg">moviegenres/$INFO[ListItem.Label].jpg</texture>
						<visible>Window.IsActive(videos) + !String.Contains(Container.FolderPath,videodb://musicvideos/) + Container.Content(genres)</visible>
					</control>
					<control type="image">
						<posx>37</posx>
						<posy>45</posy>
						<width>300</width>
						<height>440</height>
						<fadetime>100</fadetime>
						<aspectratio align="right" aligny="center">keep</aspectratio>
						<texture fallback="DefaultMusicGenre.jpg">musicgenres/$INFO[ListItem.Label].jpg</texture>
						<visible>[Window.IsActive(music) | [Window.IsActive(videos) + String.Contains(Container.FolderPath,videodb://musicvideos/)]] + Container.Content(genres)</visible>
					</control>
				<!-- Retroplayer Posters (note that this is really ugly (and temporary), it will always display the default icon, then overlay a png over that, then overlay a jpg over that, but there exists no other way to do it yet without library support for games) -->
					<control type="group">
						<visible>Window.IsActive(games)</visible>
						<posx>20</posx>
						<posy>65</posy>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<texture>frames/ClassicFrame_Background.png</texture>
							<colordiffuse>FrameBackgroundDiffuse</colordiffuse>
							<visible>!String.IsEmpty(ListItem.FileExtension) + Window.IsActive(games)</visible>
						</control>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<fadetime>100</fadetime>
							<aspectratio align="right" aligny="center">keep</aspectratio>
							<texture background="true" fallback="DefaultAddonGame.png">$INFO[ListItem.FolderPath]poster.png</texture>
							<visible>String.IsEmpty(ListItem.FileExtension) + Window.IsActive(games)</visible>
						</control>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<fadetime>100</fadetime>
							<texture background="true" diffuse="frames/postermatte.png">$INFO[ListItem.Icon]</texture>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.FileExtension) + Window.IsActive(games)</visible>
						</control>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<fadetime>100</fadetime>
							<texture>$INFO[ListItem.FileNameAndPath].png</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!String.IsEmpty(ListItem.FileExtension) + Window.IsActive(games)</visible>
						</control>
						<control type="image">
							<posx>17</posx>
							<posy>15</posy>
							<width>300</width>
							<height>440</height>
							<fadetime>100</fadetime>
							<texture>$INFO[ListItem.FileNameAndPath].jpg</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!String.IsEmpty(ListItem.FileExtension) + Window.IsActive(games)</visible>
						</control>
						<control type="image">
							<posx>0</posx>
							<posy>-10</posy>
							<width>335</width>
							<height>490</height>
							<texture>frames/ClassicFrame_PosterMedium.png</texture>
							<visible>!String.IsEmpty(ListItem.FileExtension) + Window.IsActive(games)</visible>
						</control>
						<!-- used for testing labels
						<control type="label">
							<posx>37</posx>
							<posy>505</posy>
							<width>1250</width>
							<height>27</height>
							<align>left</align>
							<label>$INFO[ListItem.FileName] $INFO[ListItem.Path] $INFO[ListItem.FolderName] $INFO[ListItem.FolderPath] $INFO[ListItem.FileExtension] $INFO[ListItem.FileNameAndPath] </label>
							<font>METF_DialogVerySmall</font>
							<textcolor>MediaDetailsInfo</textcolor>
							<visible>Window.IsActive(games)</visible>
						</control> -->
					</control>
				</control>
			<!-- Info Details -->
			<control type="group">
				<include>Animation_OpenCloseFade</include>
				<include>Animation_FadedByMenu</include>
				<include>Animation_HiddenByInfo</include>
				<posy>95</posy>
				<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | [!String.IsEmpty(ListItem.AddonCreator) + Container.Content(addons)]</visible>
				<include>VisibleIfNotMovieSet</include>
				<control type="image">
					<posx>360</posx>
					<posy>33</posy>
					<width>890</width>
					<height>3</height>
					<texture>VideoInfoLine.png</texture>
					<colordiffuse>LowListDivider</colordiffuse>
				</control>
				<!-- Episode Aired Date -->
				<control type="label">
					<posx>1245</posx>
					<width>550</width>
					<height>27</height>
					<align>right</align>
					<label>$LOCALIZE[20416] $INFO[ListItem.Premiered]</label>
					<font>METF_MediaDetails</font>
					<textcolor>MediaDetailsInfo</textcolor>
					<visible>!String.IsEmpty(ListItem.Premiered) + Container.Content(episodes)</visible>
				</control>
				<!-- Addon Author -->
				<control type="label">
					<posx>1245</posx>
					<width>550</width>
					<height>27</height>
					<align>right</align>
					<label>[COLOR=MediaDetailsGenre]$LOCALIZE[31423]:[/COLOR] $INFO[ListItem.AddonCreator]</label>
					<font>METF_MediaDetails</font>
					<textcolor>MediaDetailsInfo</textcolor>
					<visible>!String.IsEmpty(ListItem.AddonCreator) + Container.Content(addons)</visible>
				</control>
				<!-- Genre -->
				<control type="label">
					<posx>1245</posx>
					<width>590</width>
					<height>27</height>
					<align>right</align>
					<label>$INFO[ListItem.Genre]</label>
					<font>METF_MediaDetails</font>
					<textcolor>MediaDetailsGenre</textcolor>
					<visible>!String.IsEmpty(ListItem.Genre) + [Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(musicvideos)]</visible>
				</control>
				<control type="label">
					<posx>1245</posx>
					<width>590</width>
					<height>27</height>
					<align>right</align>
					<label>$INFO[ListItem.Property(Artist_Genre)]</label>
					<font>METF_MediaDetails</font>
					<textcolor>MediaDetailsGenre</textcolor>
					<visible>String.IsEmpty(ListItem.Genre) + !String.IsEmpty(ListItem.Property(Artist_Genre))</visible>
				</control>
				<!-- Year/Duration/Number of Episodes -->
				<control type="grouplist">
					<posx>365</posx>
					<width>300</width>
					<align>left</align>
					<itemgap>10</itemgap>
					<orientation>horizontal</orientation>
					<include>Animation_OpenCloseFade</include>
					<include>Animation_FadedByMenu</include>
					<include>Animation_HiddenByInfo</include>
					<include>ViewDetailsOneLineJustified</include>
				</control>
			</control>
			<!-- Sets button -->
			<control type="button" id="997">
				<onup>55</onup>
				<ondown>55</ondown>
				<onleft>55</onleft>
				<onright>998</onright>
				<description>sets</description>
				<posx>745</posx>
				<posy>5</posy>
				<width>32</width>
				<height>24</height>
				<onclick>ActivateWindow(10025,"videodb://movies/sets/$INFO[ListItem.SetId]/?setid=$INFO[ListItem.SetId]",return)</onclick>
				<visible>Window.IsActive(videos) + !String.StartsWith(Container.FolderPath, videodb://movies/sets/) + !IsEmpty(ListItem.Set)</visible>
			</control>
			<!-- Scroll Bar -->
			<control type="scrollbar" id="998">
				<include>Animation_OpenCloseFade</include>
				<include>Animation_FadedByMenu</include>
				<posx>1270</posx>
				<posy>128</posy>
				<width>22</width>
				<height>376</height>
				<visible allowhiddenfocus="true">Control.HasFocus(998) | Container.Scrolling</visible>
				<texturesliderbackground></texturesliderbackground>
				<textureslidernib>ScrollbarVnibFO.png</textureslidernib>
				<textureslidernibfocus>ScrollbarVnibFO.png</textureslidernibfocus>
				<onleft>997</onleft>
				<onright>999</onright>
				<showonepage>true</showonepage>
				<orientation>vertical</orientation>
				<animation effect="fade" start="0" end="100" time="400" condition="Control.HasFocus(998) | Container.Scrolling">Conditional</animation>
			</control>

			<control type="image">
				<left>15</left>
				<top>239</top>
				<width>1250</width>
				<height>15</height>
				<texture border="4">scrollbar-background.png</texture>
				<animation effect="fade" start="100" end="0" time="150" condition="!Control.HasFocus(999)">Conditional</animation>
				<visible>!Control.HasFocus(999)</visible>
			</control>

			<control type="panel" id="999">
				<animation effect="fade" start="100" end="0" time="150" condition="!Control.HasFocus(999)">Conditional</animation>
				<left>1260</left>
				<top>130</top>
				<height>700</height>
				<width>16</width>
				<orientation>vertical</orientation>
				<onleft>998</onleft>
				<onright>noop</onright>
				<ondown>noop</ondown>
				<visible>Integer.IsGreater(Container.NumPages,1)</visible>
				<itemlayout height="15" width="16">
					<control type="label">
						<width>100%</width>
						<align>center</align>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>MediaDetailsGenre</textcolor>
						<shadowcolor>black</shadowcolor>
						<font>METF_DialogSmallBold</font>
						<animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
						<visible>!String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
					</control>
					<control type="label">
						<width>100%</width>
						<align>center</align>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>MediaDetailsGenre</textcolor>
						<shadowcolor>black</shadowcolor>
						<font>METF_DialogSmallBold</font>
						<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
					</control>
				</itemlayout>
				<focusedlayout height="15" width="16">
					<control type="label">
						<width>100%</width>
						<align>center</align>
						<label>$INFO[ListItem.Label]</label>
						<font>METF_DialogSmallBold</font>
						<textcolor>MediaDetailsInfo</textcolor>
						<shadowcolor>black</shadowcolor>
						<animation effect="zoom" end="120,120" center="auto" time="100">Focus</animation>
						<animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
					</control>
				</focusedlayout>
				<content>
					<item id="0">
						<label>#</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS2</onclick>
						<onclick>JumpSMS2</onclick>
						<onclick>JumpSMS2</onclick>
						<onclick>JumpSMS2</onclick>
					</item>
					<item id="1">
						<label>A</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS2</onclick>
					</item>
					<item id="2">
						<label>B</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS2</onclick>
						<onclick>JumpSMS2</onclick>
					</item>
					<item id="3">
						<label>C</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS2</onclick>
						<onclick>JumpSMS2</onclick>
						<onclick>JumpSMS2</onclick>
					</item>
					<item id="4">
						<label>D</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS3</onclick>
					</item>
					<item id="5">
						<label>E</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS3</onclick>
						<onclick>JumpSMS3</onclick>
					</item>
					<item id="6">
						<label>F</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS3</onclick>
						<onclick>JumpSMS3</onclick>
						<onclick>JumpSMS3</onclick>
					</item>
					<item id="7">
						<label>G</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS4</onclick>
					</item>
					<item id="8">
						<label>H</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS4</onclick>
						<onclick>JumpSMS4</onclick>
					</item>
					<item id="9">
						<label>I</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS4</onclick>
						<onclick>JumpSMS4</onclick>
						<onclick>JumpSMS4</onclick>
					</item>
					<item id="10">
						<label>J</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS5</onclick>
					</item>
					<item id="11">
						<label>K</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS5</onclick>
						<onclick>JumpSMS5</onclick>
					</item>
					<item id="12">
						<label>L</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS5</onclick>
						<onclick>JumpSMS5</onclick>
						<onclick>JumpSMS5</onclick>
					</item>
					<item id="13">
						<label>M</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS6</onclick>
					</item>
					<item id="14">
						<label>N</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS6</onclick>
						<onclick>JumpSMS6</onclick>
					</item>
					<item id="15">
						<label>O</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS6</onclick>
						<onclick>JumpSMS6</onclick>
						<onclick>JumpSMS6</onclick>
					</item>
					<item id="16">
						<label>P</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS7</onclick>
					</item>
					<item id="17">
						<label>Q</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS7</onclick>
						<onclick>JumpSMS7</onclick>
					</item>
					<item id="18">
						<label>R</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS7</onclick>
						<onclick>JumpSMS7</onclick>
						<onclick>JumpSMS7</onclick>
					</item>
					<item id="19">
						<label>S</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS7</onclick>
						<onclick>JumpSMS7</onclick>
						<onclick>JumpSMS7</onclick>
						<onclick>JumpSMS7</onclick>
					</item>
					<item id="20">
						<label>T</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS8</onclick>
					</item>
					<item id="21">
						<label>U</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS8</onclick>
						<onclick>JumpSMS8</onclick>
					</item>
					<item id="22">
						<label>V</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS8</onclick>
						<onclick>JumpSMS8</onclick>
						<onclick>JumpSMS8</onclick>
					</item>
					<item id="23">
						<label>W</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS8</onclick>
						<onclick>JumpSMS9</onclick>
					</item>
					<item id="24">
						<label>X</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS8</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS9</onclick>
					</item>
					<item id="25">
						<label>Y</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS8</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS9</onclick>
					</item>
					<item id="26">
						<label>Z</label>
						<onclick>SetFocus(55)</onclick>
						<onclick>JumpSMS8</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS9</onclick>
						<onclick>JumpSMS9</onclick>
					</item>
				</content>
			</control>
		</control>
	</include>
</includes>
