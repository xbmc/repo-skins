<?xml version="1.0" encoding="UTF-8"?>
<template>
	<!-- PVR Status widget -->
	<other include="widget">
		<condition tag="property" attribute="name|widget">PVRStatusWidget</condition>

		<!-- Retrieve the widgetPath and widgetTarget properties -->
		<property name="target" tag="property" attribute="name|widgetTarget" />

		<controls>
			<control type="button" id="8002">
				<left>1</left>
				<top>1</top>
				<width>1</width>
				<height>1</height>
				<label>-</label>
				<onleft>9000</onleft>
				<onright>9000</onright>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onclick>ActivateWindow(TVTimers)</onclick>
				<skinshortcuts>visibility</skinshortcuts>
				<visible>PVR.IsRecording | PVR.HasNonRecordingTimer</visible>
			</control>
			<control type="grouplist">
				<visible>[![Skin.HasSetting(Home2) | Skin.HasSetting(Home3)] + !Skin.HasSetting(HideUnfocusedWidgets)] | Control.HasFocus(8002)</visible>
				<skinshortcuts>visibility</skinshortcuts>
				<include>Widget_PVRStatus</include>
				<content target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[content]</content>
			</control>
		</controls>
	</other>

	<!-- Weather Forecast widget -->
	<other include="widget">
		<condition tag="property" attribute="name|widget">WeatherForecastWidget</condition>

		<!-- Retrieve the widgetPath and widgetTarget properties -->
		<property name="target" tag="property" attribute="name|widgetTarget" />

		<controls>
			<control type="button" id="8003">
				<left>1</left>
				<top>1</top>
				<width>1</width>
				<height>1</height>
				<label>-</label>
				<onleft>9000</onleft>
				<onright>9000</onright>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onclick>ActivateWindow(Weather)</onclick>
				<skinshortcuts>visibility</skinshortcuts>
			</control>
			<control type="grouplist">
				<visible>[![Skin.HasSetting(Home2) | Skin.HasSetting(Home3)] + !Skin.HasSetting(HideUnfocusedWidgets)] | Control.HasFocus(8003)</visible>
				<skinshortcuts>visibility</skinshortcuts>
				<include>Widget_WeatherForecast</include>
				<content target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[content]</content>
			</control>
		</controls>
	</other>

	<!-- All other widgets -->
	<other include="widget">
		<!-- We're going to use this template for all widgets with a widgetPath element -->
		<condition tag="property" attribute="name|widgetPath" />

		<!-- Retrieve the widgetPath and widgetTarget properties -->
		<property name="content" tag="property" attribute="name|widgetPath" />
		<property name="target" tag="property" attribute="name|widgetTarget" />

		<!-- artwork property -->
		<property name="artwork" tag="property" attribute="name|widgetType" value="movies">$INFO[ListItem.Art(poster)</property>
		<property name="artwork" tag="property" attribute="name|widgetType" value="tvshows">$INFO[ListItem.Art(tvshow.poster)</property>
		<property name="artwork">$INFO[ListItem.Icon]</property>

		<!-- XXX: Use properties to define the widget style -->
		<controls>
			<control type="image">
				<skinshortcuts>visibility</skinshortcuts>
				<include>Animation_CommonFadeNoHide</include>
				<include>Animation_FadedByMenu</include>
				<include>Animation_HiddenByInfo</include>
				<animation effect="fade" start="100" end="0" time="0">Hidden</animation>
				<animation effect="fade" start="0" end="100" time="200" delay="100" >Visible</animation>
				<posx>265</posx>
				<posy>560</posy>
				<width>250</width>
				<height>140</height>
				<aspectratio align="right" aligny="center">keep</aspectratio>
				<bordertexture border="6">frames/thumb_border_round.png</bordertexture>
				<bordersize>6</bordersize>
				<texture diffuse="frames/EpisodeMatte.png">$VAR[GlobalWidgetIcon]</texture>
				<visible>[![Skin.HasSetting(Home2) | Skin.HasSetting(Home3)] + !Skin.HasSetting(HideUnfocusedWidgets)] | Control.HasFocus(8000)</visible>
			</control>
			<control type="list" id="8000">
				<skinshortcuts>visibility</skinshortcuts>
				<include>Widget_VerticalList</include>
				<content target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[content]</content>
			</control>
		</controls>
	</other>
</template>
