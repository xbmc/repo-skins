<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="View_551_BigPanel2">
        <control type="group" description="Content">
            <include content="BackgroundOverlay">
                <param name="parentid" value="551"/>
            </include>
            <visible>Control.IsVisible(551)</visible>
            <include>ContentFade</include>
            
            <control type="panel" id="551" description="Big Panel 2">
                <viewtype label="$LOCALIZE[32246]">list</viewtype>
                <left>45</left>
                <top>60</top>
                <width>930</width>
                <height>990</height>
                <orientation>vertical</orientation>
				<onleft condition="!Skin.HasSetting(KioskMode.Enabled)">9000</onleft>
                <onleft condition="Skin.HasSetting(KioskMode.Enabled)">noop</onleft>
                <oninfo condition="ListItem.IsCollection + !String.Contains(System.BuildVersion,19.0)">ActivateWindow(1127)</oninfo>
                <onright condition="!Control.IsVisible(615)">651</onright>
				<onright condition="Control.IsVisible(615)">615</onright>
                <onup>551</onup>
                <ondown>551</ondown>
                <preloaditems>4</preloaditems>
                <pagecontrol>651</pagecontrol>
				<visible>[$EXP[Exp_View_551] + Skin.HasSetting(Enable.NewViewSelector)] | [!Skin.HasSetting(hide.bigpanel2view) + !Skin.HasSetting(Enable.NewViewSelector)]</visible>

                <include content="BannerLayout">
                    <param name="viewid">551</param>
                </include>

                <include content="PosterLayout">
                    <param name="viewid">551</param>
                </include>

                <include content="EpisodeLayout">
                    <param name="viewid">551</param>
                </include>

                <include content="MusicLayout">
                    <param name="viewid">551</param>
                </include>

                <include content="ImageLayout">
                    <param name="viewid">551</param>
                </include>

                <include content="AddonLayout">
                    <param name="viewid">551</param>
                </include>

                <include content="GenericLayout">
                    <param name="viewid">551</param>
                </include>
            </control>

            <include content="PanelTemplate">
                <param name="top">100</param>
                <param name="left">1000</param>
				<param name="height">715</param>
                <param name="width">850</param>
				<param name="groupheight">850</param>
				<param name="plotheight">590</param>
                <param name="heading">$VAR[panelheading]</param>
                <param name="subheading">$VAR[panelsubheading]</param>
				<param name="subheading2">$VAR[panelsubheading2]</param>
                <param name="subheading2_visible">[Container.content(movies) | Container.content(episodes)] + [Skin.HasSetting(ShowAudioSub) + ![String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1))]]</param>                
                <param name="plot">$VAR[Plots]</param>
                <param name="footer">$VAR[panelfooter]</param>
                <param name="visibility">![Container.Content(artists) | Container.Content(albums) | Container.Content(images) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)]</param>
            </include>
			<include content="PanelTemplate">
				<param name="top">100</param>
				<param name="left">1000</param>
				<param name="height">640</param>
                <param name="width">850</param>
				<param name="groupheight">850</param>
				<param name="plotheight">550</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
                <param name="subheading2">$VAR[panelsubheading2]</param>
                <param name="subheading2_visible">!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</param>                
				<param name="plot">$VAR[Plots]</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">[Container.Content(tvshows) | Container.Content(seasons)]</param>
			</include>            
            <include content="PanelTemplate">
                <param name="top">100</param>
                <param name="left">1000</param>
				<param name="height">640</param>
                <param name="width">850</param>
				<param name="groupheight">850</param>
				<param name="plotheight">550</param>
                <param name="heading">$VAR[panelheading]</param>
                <param name="subheading">$VAR[panelsubheading]</param>
                <param name="footer">$VAR[panelfooter]</param>
                <param name="visibility">Container.Content(sets)</param>
            </include>
            <include content="PanelTemplate">
                <param name="top">100</param>
                <param name="left">1000</param>
				<param name="height">760</param>
                <param name="width">850</param>
				<param name="groupheight">850</param>
				<param name="plotheight">550</param>
                <param name="heading">$VAR[panelheading]</param>
                <param name="subheading">$VAR[panelsubheading]</param>
                <param name="plot">$VAR[Plots]</param>
                <param name="footer"></param>
                <param name="visibility">Container.Content(images)</param>
            </include>
            <include content="PanelTemplate">
                <param name="top">100</param>
                <param name="left">1000</param>
				<param name="height">710</param>
                <param name="width">850</param>
				<param name="groupheight">850</param>
				<param name="plotheight">550</param>
                <param name="heading">$VAR[panelheading]</param>
                <param name="subheading">$VAR[panelsubheading]</param>
                <param name="plot">$VAR[Plots]</param>
                <param name="subcontent_label">$INFO[ListItem.Label]$INFO[ListItem.Year,  (,)]</param>
                <param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
                <param name="subcontent_visible">String.IsEmpty(ListItem.Property(Artist_Description))</param>
                <param name="subcontent_image_visible">false</param>
                <param name="footer"></param>
                <param name="footer">$VAR[panelfooter]</param>
                <param name="visibility">Container.Content(artists)</param>
            </include>
            <include content="PanelTemplate">
                <param name="top">100</param>
                <param name="left">1000</param>
				<param name="height">680</param>
                <param name="width">850</param>
				<param name="groupheight">850</param>
				<param name="plotheight">550</param>
                <param name="heading">$VAR[panelheading]</param>
                <param name="subheading">$VAR[panelsubheading]</param>
                <param name="plot">$VAR[Plots]</param>
                <param name="subcontent_label1">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration, • (,)]</param>
                <param name="subcontent_label2">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$VAR[ItemDurationHrMins, • (,)]</param>
                <param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
                <param name="subcontent_visible">String.IsEmpty(ListItem.Property(Album_Description))</param>
                <param name="subcontent_image_visible">false</param>
                <param name="footer">$VAR[panelfooter]</param>
                <param name="visibility">Container.Content(albums)</param>
            </include>

            <control type="scrollbar" id="651">
                <animation effect="slide" start="0,0" end="-8,0" time="150">Focus</animation>
                <animation effect="slide" start="-8,0" end="0,0" time="300">UnFocus</animation>
                <posx>20r</posx>
                <top>60</top>
                <width>36</width>
                <height>990</height>
                <texturesliderbackground></texturesliderbackground>
                <texturesliderbar></texturesliderbar>
                <texturesliderbarfocus></texturesliderbarfocus>
                <textureslidernib border="18">OSD/ScrollbarNibNF.png</textureslidernib>
                <textureslidernibfocus border="18" colordiffuse="$VAR[HighlightColor]">OSD/ScrollbarNibFO.png</textureslidernibfocus>
                <showonepage>false</showonepage>
                <orientation>vertical</orientation>
                <onleft>551</onleft>
                <onright>551</onright>
                <visible>!Skin.HasSetting(Show.JumpToLetter) | ![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>
        </control>
        
            <control type="button" id="651">
                <visible>Control.IsVisible(551)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
                <font />
                <texturefocus />
                <texturenofocus />
                <width>40</width>
                <onleft>551</onleft>
                <posx>50r</posx>
                <posy>75</posy>
                <height>990</height>
                <ondown>SetFocus(551)</ondown>
                <ondown>Action(nextletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown>SetFocus(651)</ondown>
                <onup>SetFocus(551)</onup>
                <onup>Action(prevletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup>SetFocus(651)</onup>
            </control>            

            <control type="grouplist" id="655511">
                <posx>36r</posx>
                <posy>75</posy>
                <height>990</height>
                <width>42</width>
                <itemgap>0</itemgap>
                <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(651) + !Container.Scrolling">Conditional</animation>
                <include>AlphabetNumber</include>
                <include content="AlphabetLetter"><param name="label" value="A" /></include>
                <include content="AlphabetLetter"><param name="label" value="B" /></include>
                <include content="AlphabetLetter"><param name="label" value="C" /></include>
                <include content="AlphabetLetter"><param name="label" value="D" /></include>
                <include content="AlphabetLetter"><param name="label" value="E" /></include>
                <include content="AlphabetLetter"><param name="label" value="F" /></include>
                <include content="AlphabetLetter"><param name="label" value="G" /></include>
                <include content="AlphabetLetter"><param name="label" value="H" /></include>
                <include content="AlphabetLetter"><param name="label" value="I" /></include>
                <include content="AlphabetLetter"><param name="label" value="J" /></include>
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <include content="AlphabetLetter"><param name="label" value="P" /></include>
                <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                <include content="AlphabetLetter"><param name="label" value="R" /></include>
                <include content="AlphabetLetter"><param name="label" value="S" /></include>
                <include content="AlphabetLetter"><param name="label" value="T" /></include>
                <include content="AlphabetLetter"><param name="label" value="U" /></include>
                <include content="AlphabetLetter"><param name="label" value="V" /></include>
                <animation effect="fade" start="100" end="0" condition="[String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>Control.IsVisible(551)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>

            <control type="grouplist" id="655512">
                <posx>36r</posx>
                <posy>75</posy>
                <height>990</height>
                <width>42</width>
                <itemgap>0</itemgap>
                 <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(651) + !Container.Scrolling">Conditional</animation>
                <include content="AlphabetLetter"><param name="label" value="D" /></include>
                <include content="AlphabetLetter"><param name="label" value="E" /></include>
                <include content="AlphabetLetter"><param name="label" value="F" /></include>
                <include content="AlphabetLetter"><param name="label" value="G" /></include>
                <include content="AlphabetLetter"><param name="label" value="H" /></include>
                <include content="AlphabetLetter"><param name="label" value="I" /></include>
                <include content="AlphabetLetter"><param name="label" value="J" /></include>                
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <include content="AlphabetLetter"><param name="label" value="P" /></include>
                <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                <include content="AlphabetLetter"><param name="label" value="R" /></include>
                <include content="AlphabetLetter"><param name="label" value="S" /></include>
                <include content="AlphabetLetter"><param name="label" value="T" /></include>
                <include content="AlphabetLetter"><param name="label" value="U" /></include>
                <include content="AlphabetLetter"><param name="label" value="V" /></include>
                <include content="AlphabetLetter"><param name="label" value="W" /></include>
                <include content="AlphabetLetter"><param name="label" value="X" /></include>
                <include content="AlphabetLetter"><param name="label" value="Y" /></include>
                <include content="AlphabetLetter"><param name="label" value="Z" /></include>
                <animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>Control.IsVisible(551)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>        
        
    </include>
</includes>
