<?xml version="1.0" encoding="UTF-8"?>
<includes>
    
	<include name="View_52_BigList">
	    <param name="ListType">list</param>
		<definition>
		    <control type="group" description="Large Infolist2">
			    <include content="BackgroundOverlay">
			        <param name="parentid" value="52"/>
		        </include>
			    <visible>Control.IsVisible(52)</visible>
			    <include>ContentFade</include>
			    <control type="$PARAM[ListType]" id="52">
				    <viewtype label="$LOCALIZE[31999]">list</viewtype>
					<posx>30</posx>
                    <width>1860</width>					
				    <posy>40</posy>
				    <height>1040</height>
				    <pagecontrol>62</pagecontrol>
                    <onleft condition="!Skin.HasSetting(KioskMode.Enabled)">9000</onleft>
                    <onleft condition="Skin.HasSetting(KioskMode.Enabled)">noop</onleft>
                    <oninfo condition="ListItem.IsCollection + !String.Contains(System.BuildVersion,19.0)">ActivateWindow(1127)</oninfo>
                    <onright condition="!Control.IsVisible(615)">62</onright>
					<onright condition="Control.IsVisible(615)">615</onright>
				    <onup>52</onup>
				    <ondown>52</ondown>
				    <preloaditems>4</preloaditems>
				    <include condition="Skin.HasSetting(ListCenterFocus)">ListCenterFocusParams</include>
					<visible>[$EXP[Exp_View_52] + Skin.HasSetting(Enable.NewViewSelector)] | [!Skin.HasSetting(hide.biglistview) + !Skin.HasSetting(Enable.NewViewSelector)]</visible>
				    <itemlayout height="104" width="1070" condition="![$EXP[BigListPanelIsSwapped]] + [Container.Content() | Container.Content(videos) | Container.Content(files) | Container.Content(playlists) | Container.Content(Tags) | Container.Content(Actors) | Container.Content(Directors) | Container.Content(Years) | Container.Content(Countries) | Container.Content(roles) | Container.Content(genres) | Container.Content(studios)]">
					    <include content="52_layout">
						    <param name="left">850</param>
							<param name="thumbleft">855</param>
    						<param name="width">1150</param>
	    					<param name="imgwidth">60</param>
		    				<param name="image">$VAR[Square]</param>
			    			<param name="isfocused">false</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1070" condition="![$EXP[BigListPanelIsSwapped]] + [Container.Content() | Container.Content(videos) | Container.Content(files) | Container.Content(playlists) | Container.Content(Tags) | Container.Content(Actors) | Container.Content(Directors) | Container.Content(Years) | Container.Content(Countries) | Container.Content(roles) | Container.Content(genres) | Container.Content(studios)]">
					    <include content="52_layout">
						    <param name="left">850</param>
							<param name="thumbleft">855</param>
						    <param name="width">1150</param>
						    <param name="imgwidth">60</param>
						    <param name="image">$VAR[Square]</param>
						    <param name="isfocused">true</param>
					    </include>
				    </focusedlayout>
					<itemlayout height="104" width="1070" condition="$EXP[BigListPanelIsSwapped] + [Container.Content() | Container.Content(videos) | Container.Content(files) | Container.Content(playlists) | Container.Content(Tags) | Container.Content(Actors) | Container.Content(Directors) | Container.Content(Years) | Container.Content(Countries) | Container.Content(roles) | Container.Content(genres) | Container.Content(studios)]">
					    <include content="52_layout">
						    <param name="left">0</param>
							<param name="thumbleft">5</param>
							<param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
    						<param name="width">1150</param>
	    					<param name="imgwidth">60</param>
		    				<param name="image">$VAR[Square]</param>
			    			<param name="isfocused">false</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1070" condition="$EXP[BigListPanelIsSwapped] + [Container.Content() | Container.Content(videos) | Container.Content(files) | Container.Content(playlists) | Container.Content(Tags) | Container.Content(Actors) | Container.Content(Directors) | Container.Content(Years) | Container.Content(Countries) | Container.Content(roles) | Container.Content(genres) | Container.Content(studios)]">
					    <include content="52_layout">
						    <param name="left">0</param>
							<param name="thumbleft">5</param>
							<param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
						    <param name="width">1150</param>
						    <param name="imgwidth">60</param>
						    <param name="image">$VAR[Square]</param>
						    <param name="isfocused">true</param>
					    </include>
				    </focusedlayout>
					
				    <itemlayout height="104" width="1020" condition="$EXP[BigListPanelIsSwapped] + [Container.Content(episodes) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)]">
    					<include content="52_layout">
	    					<param name="left">0</param>
		    				<param name="thumbleft">5</param>
		                    <param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
							<param name="width">880</param>
			    			<param name="imgwidth">60</param>
							<param name="image">$VAR[Poster]</param>
				    		<param name="isfocused">false</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1020" condition="$EXP[BigListPanelIsSwapped] + [Container.Content(episodes) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)]">
					    <include content="52_layout">
						    <param name="left">0</param>
						    <param name="thumbleft">5</param>
		                    <param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
							<param name="width">880</param>
						    <param name="imgwidth">60</param>
							<param name="image">$VAR[Poster]</param>
						    <param name="isfocused">true</param>
					    </include>
				    </focusedlayout>
					
					<itemlayout height="104" width="1020" condition="![$EXP[BigListPanelIsSwapped]] + [Container.Content(episodes) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)]">
    					<include content="52_layout">
	    					<param name="left">850</param>
							<param name="thumbleft">855</param>
		    				<param name="width">880</param>
			    			<param name="imgwidth">60</param>
							<param name="image">$VAR[Poster]</param>
				    		<param name="isfocused">false</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1020" condition="![$EXP[BigListPanelIsSwapped]] + [Container.Content(episodes) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)]">
					    <include content="52_layout">
						    <param name="left">850</param>
						    <param name="thumbleft">855</param>
							<param name="width">880</param>
						    <param name="imgwidth">60</param>
							<param name="image">$VAR[Poster]</param>
						    <param name="isfocused">true</param>
					    </include>
				    </focusedlayout>
				    
					<itemlayout height="104" width="1070" condition="![$EXP[BigListPanelIsSwapped]] + [Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons)]">
					    <include content="52_layout">
						    <param name="left">850</param>
							<param name="thumbleft">855</param>
						    <param name="width">1150</param>
						    <param name="imgwidth">60</param>
						    <param name="isfocused">false</param>
						    <param name="image">$VAR[Square]</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1070" condition="![$EXP[BigListPanelIsSwapped]] + [Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons)]">
					    <include content="52_layout">
						    <param name="left">850</param>
							<param name="thumbleft">855</param>
						    <param name="width">1150</param>
						    <param name="imgwidth">60</param>
						    <param name="isfocused">true</param>
						    <param name="image">$VAR[Square]</param>
					    </include>
				    </focusedlayout>
					<itemlayout height="104" width="1070" condition="$EXP[BigListPanelIsSwapped] + [Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons)]">
					    <include content="52_layout">
						    <param name="left">0</param>
							<param name="thumbleft">5</param>
						    <param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
							<param name="width">1150</param>
						    <param name="imgwidth">60</param>
						    <param name="isfocused">false</param>
						    <param name="image">$VAR[Square]</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1070" condition="$EXP[BigListPanelIsSwapped] + [Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(addons)]">
					    <include content="52_layout">
						    <param name="left">0</param>
							<param name="thumbleft">5</param>
						    <param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
							<param name="width">1150</param>
						    <param name="imgwidth">60</param>
						    <param name="isfocused">true</param>
						    <param name="image">$VAR[Square]</param>
					    </include>
				    </focusedlayout>
					
				    <itemlayout height="104" width="1070" condition="![$EXP[BigListPanelIsSwapped]] + Container.Content(images)">
					    <include content="52_layout">
						    <param name="left">850</param>
							<param name="thumbleft">855</param>
						    <param name="width">1150</param>
                            <param name="imgwidth">60</param>
						    <param name="isfocused">false</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1070" condition="![$EXP[BigListPanelIsSwapped]] + Container.Content(images)">
					    <include content="52_layout">
						    <param name="left">850</param>
							<param name="thumbleft">855</param>
						    <param name="width">1150</param>
                            <param name="imgwidth">60</param>
						    <param name="isfocused">true</param>
					    </include>
				    </focusedlayout>
					<itemlayout height="104" width="1070" condition="$EXP[BigListPanelIsSwapped] + Container.Content(images)">
					    <include content="52_layout">
						    <param name="left">0</param>
							<param name="thumbleft">5</param>
						    <param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
						    <param name="width">1150</param>
                            <param name="imgwidth">60</param>
						    <param name="isfocused">false</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1070" condition="$EXP[BigListPanelIsSwapped] + Container.Content(images)">
					    <include content="52_layout">
						    <param name="left">0</param>
							<param name="thumbleft">5</param>
						    <param name="labelsleft">80</param>
		                    <param name="overlayleft">970</param>
						    <param name="width">1150</param>
                            <param name="imgwidth">60</param>
						    <param name="isfocused">true</param>
					    </include>
				    </focusedlayout>
					
<!--				    <itemlayout height="104" width="1070" condition="![container.content(episodes) | container.content(addons) | container.content(artists) | container.content(albums) | container.content(songs) | Container.Content(images) | Container.Content(musicvideos) | container.content(movies) | container.content(sets) | container.content(tvshows) | container.content(seasons)]">
					    <include content="52_layout">
						    <param name="left">90</param>
						    <param name="width">1150</param>
						    <param name="imgwidth">60</param>
						    <param name="isfocused">false</param>
						    <param name="image">$VAR[Square]</param>
					    </include>
				    </itemlayout>
				    <focusedlayout height="104" width="1070" condition="![container.content(episodes) | container.content(addons) | container.content(artists) | container.content(albums) | container.content(songs) | Container.Content(images) | Container.Content(musicvideos) | container.content(movies) | container.content(sets) | container.content(tvshows) | container.content(seasons)]">
					    <include content="52_layout">
    						<param name="left">90</param>
	    					<param name="width">1150</param>
		    				<param name="imgwidth">60</param>
			    			<param name="image">$VAR[Square]</param>
				    		<param name="isfocused">true</param>
					    </include>
				    </focusedlayout> -->
			    </control>

			    <control type="scrollbar" id="62">
				    <animation effect="slide" start="0,0" end="-8,0" time="150">Focus</animation>
				    <animation effect="slide" start="-8,0" end="0,0" time="300">UnFocus</animation>
				    <posx>21r</posx>
				    <posy>60</posy>
				    <width>36</width>
				    <height>1120</height>
				    <texturesliderbackground></texturesliderbackground>
				    <texturesliderbar></texturesliderbar>
				    <texturesliderbarfocus></texturesliderbarfocus>
				    <textureslidernib border="18">OSD/ScrollbarNibNF.png</textureslidernib>
				    <textureslidernibfocus border="18" colordiffuse="$VAR[HighlightColor]">OSD/ScrollbarNibFO.png</textureslidernibfocus>
				    <showonepage>false</showonepage>
				    <orientation>vertical</orientation>
				    <onleft>52</onleft>
				    <onright>52</onright>
                    <visible>!Skin.HasSetting(Show.JumpToLetter) | ![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
			    </control>

                <control type="button" id="62">
                    <visible>Control.IsVisible(52)</visible>
                    <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
                    <font />
                    <texturefocus />
                    <texturenofocus />
                    <width>40</width>
                    <onleft>52</onleft>
                    <posx>50r</posx>
                    <posy>55</posy>
                    <height>1040</height>
                    <ondown>SetFocus(52)</ondown>
                    <ondown>Action(nextletter)</ondown>
                    <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
                    <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                    <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                    <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                    <ondown>SetFocus(62)</ondown>
                    <onup>SetFocus(52)</onup>
                    <onup>Action(prevletter)</onup>
                    <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onup>
                    <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                    <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                    <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                    <onup>SetFocus(62)</onup>
                </control>            

                <control type="grouplist" id="62521">
                    <posx>36r</posx>
                    <posy>55</posy>
                    <height>1040</height>
                    <width>42</width>
                    <itemgap>0</itemgap>
                    <orientation>vertical</orientation>
                    <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(62) + !Container.Scrolling">Conditional</animation>
                    <include>AlphabetNumber</include>
                    <include content="AlphabetLetter"><param name="label" value="A" /></include>
                    <include content="AlphabetLetter"><param name="label" value="B" /></include>
                    <include content="AlphabetLetter"><param name="label" value="C" /></include>
                    <include content="AlphabetLetter"><param name="label" value="D" /></include>
                    <include content="AlphabetLetter"><param name="label" value="E" /></include>
                    <include content="AlphabetLetter"><param name="label" value="F" /></include>
                    <include content="AlphabetLetter"><param name="label" value="G" /></include>
                    <include content="AlphabetLetter"><param name="label" value="H" /></include>
                    <include content="AlphabetLetter"><param name="label" value="I" /></include>
                    <include content="AlphabetLetter"><param name="label" value="J" /></include>
                    <include content="AlphabetLetter"><param name="label" value="K" /></include>
                    <include content="AlphabetLetter"><param name="label" value="L" /></include>
                    <include content="AlphabetLetter"><param name="label" value="M" /></include>
                    <include content="AlphabetLetter"><param name="label" value="N" /></include>
                    <include content="AlphabetLetter"><param name="label" value="O" /></include>
                    <include content="AlphabetLetter"><param name="label" value="P" /></include>
                    <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                    <include content="AlphabetLetter"><param name="label" value="R" /></include>
                    <include content="AlphabetLetter"><param name="label" value="S" /></include>
                    <include content="AlphabetLetter"><param name="label" value="T" /></include>
                    <include content="AlphabetLetter"><param name="label" value="U" /></include>
                    <include content="AlphabetLetter"><param name="label" value="V" /></include>
                    <include content="AlphabetLetter"><param name="label" value="W" /></include>
                    <animation effect="fade" start="100" end="0" condition="[String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                    <visible>Control.IsVisible(52)</visible>
                    <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
                </control>

                <control type="grouplist" id="62522">
                    <posx>36r</posx>
                    <posy>55</posy>
                    <height>1040</height>
                    <width>42</width>
                    <itemgap>0</itemgap>
                    <orientation>vertical</orientation>
                    <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(62) + !Container.Scrolling">Conditional</animation>
                    <include content="AlphabetLetter"><param name="label" value="C" /></include>
                    <include content="AlphabetLetter"><param name="label" value="D" /></include>
                    <include content="AlphabetLetter"><param name="label" value="E" /></include>
                    <include content="AlphabetLetter"><param name="label" value="F" /></include>
                    <include content="AlphabetLetter"><param name="label" value="G" /></include>
                    <include content="AlphabetLetter"><param name="label" value="H" /></include>
                    <include content="AlphabetLetter"><param name="label" value="I" /></include>
                    <include content="AlphabetLetter"><param name="label" value="J" /></include>                
                    <include content="AlphabetLetter"><param name="label" value="K" /></include>
                    <include content="AlphabetLetter"><param name="label" value="L" /></include>
                    <include content="AlphabetLetter"><param name="label" value="M" /></include>
                    <include content="AlphabetLetter"><param name="label" value="N" /></include>
                    <include content="AlphabetLetter"><param name="label" value="O" /></include>
                    <include content="AlphabetLetter"><param name="label" value="P" /></include>
                    <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                    <include content="AlphabetLetter"><param name="label" value="R" /></include>
                    <include content="AlphabetLetter"><param name="label" value="S" /></include>
                    <include content="AlphabetLetter"><param name="label" value="T" /></include>
                    <include content="AlphabetLetter"><param name="label" value="U" /></include>
                    <include content="AlphabetLetter"><param name="label" value="V" /></include>
                    <include content="AlphabetLetter"><param name="label" value="W" /></include>
                    <include content="AlphabetLetter"><param name="label" value="X" /></include>
                    <include content="AlphabetLetter"><param name="label" value="Y" /></include>
                    <include content="AlphabetLetter"><param name="label" value="Z" /></include>
                    <animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                    <visible>Control.IsVisible(52)</visible>
                    <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
                </control>
            
			    <include content="PanelTemplate52">
				    <param name="visibility">![$EXP[BigListPanelIsSwapped]] + ![Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(albums) | Container.Content(artists)]</param>
			    </include>
				<include content="PanelTemplate52">
				    <param name="left">1040</param>
					<param name="width">870</param>
					<param name="plotwidth">810</param>
		            <param name="labelwidth">790</param>
					<param name="visibility">$EXP[BigListPanelIsSwapped] + ![Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(albums) | Container.Content(artists)]</param>
			    </include>
				
				<include content="PanelTemplate52">
				    <param name="left">1040</param>
					<param name="width">870</param>
					<param name="plotwidth">810</param>
		            <param name="labelwidth">790</param>
					<param name="visibility">$EXP[BigListPanelIsSwapped] + [Container.Content(movies) | Container.Content(episodes)]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">[Container.content(movies) | Container.content(episodes)] + [Skin.HasSetting(ShowAudioSub) + ![String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1))]]</param>
			    </include>
				
				<include content="PanelTemplate52">
				    <param name="left">1040</param>
					<param name="width">870</param>
					<param name="plotwidth">810</param>
		            <param name="labelwidth">790</param>
					<param name="visibility">$EXP[BigListPanelIsSwapped] + [Container.Content(tvshows) | Container.Content(seasons)]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</param>
			    </include>
				
				<include content="PanelTemplate52">
					<param name="visibility">![$EXP[BigListPanelIsSwapped]] + [Container.Content(movies) | Container.Content(episodes)]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">[Container.content(movies) | Container.content(episodes)] + [Skin.HasSetting(ShowAudioSub) + ![String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1))]]</param>
			    </include>
				
				<include content="PanelTemplate52">
					<param name="visibility">![$EXP[BigListPanelIsSwapped]] + [Container.Content(tvshows) | Container.Content(seasons)]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</param>
			    </include>				
				
			    <include content="PanelTemplate52">
                    <param name="plotheight">360</param>
				    <param name="subcontent_label">$INFO[ListItem.Label]$INFO[ListItem.Year,  (,)]</param>
				    <param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				    <param name="subcontent_visible">String.IsEmpty(ListItem.Property(Artist_Description))</param>
				    <param name="subcontent_image_visible">false</param>
				    <param name="visibility">![$EXP[BigListPanelIsSwapped]] + Container.content(artists)</param>
			    </include>
				<include content="PanelTemplate52">
                    <param name="left">1040</param>
					<param name="width">870</param>
					<param name="plotwidth">810</param>
		            <param name="labelwidth">790</param>
					<param name="plotheight">360</param>
				    <param name="subcontent_label">$INFO[ListItem.Label]$INFO[ListItem.Year,  (,)]</param>
				    <param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				    <param name="subcontent_visible">String.IsEmpty(ListItem.Property(Artist_Description))</param>
				    <param name="subcontent_image_visible">false</param>
				    <param name="visibility">$EXP[BigListPanelIsSwapped] + Container.content(artists)</param>
			    </include>
				
			    <include content="PanelTemplate52">
                    <param name="plotheight">360</param>
				    <param name="subcontent_label1">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration,  (,)]</param>
                    <param name="subcontent_label2">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$VAR[ItemDurationHrMins,  (,)]</param>
				    <param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				    <param name="subcontent_sortby" value="track" />
				    <param name="subcontent_sortorder" value="ascending" />
				    <param name="subcontent_visible">String.IsEmpty(ListItem.Property(Album_Description))</param>
				    <param name="subcontent_image_visible">false</param>
				    <param name="visibility">![$EXP[BigListPanelIsSwapped]] + Container.content(albums)</param>
			    </include>
				<include content="PanelTemplate52">
                    <param name="left">1040</param>
					<param name="width">870</param>
					<param name="plotwidth">810</param>
		            <param name="labelwidth">790</param>
					<param name="plotheight">360</param>
				    <param name="subcontent_label1">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration,  (,)]</param>
                    <param name="subcontent_label2">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$VAR[ItemDurationHrMins,  (,)]</param>
				    <param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				    <param name="subcontent_sortby" value="track" />
				    <param name="subcontent_sortorder" value="ascending" />
				    <param name="subcontent_visible">String.IsEmpty(ListItem.Property(Album_Description))</param>
				    <param name="subcontent_image_visible">false</param>
				    <param name="visibility">$EXP[BigListPanelIsSwapped] + Container.content(albums)</param>
			    </include>
		    </control>
		</definition>	
	</include>
    
</includes>
