<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="Horizontal_Shelf_Commons">
		<left>48</left>
		<top>384</top>
		<width>1824</width>
		<height>345</height>
		<onup>9001</onup>
		<movement>6</movement>
		<orientation>horizontal</orientation>
	</include>
	<include name="Vertical_Shelf_Commons">
		<left>440</left>
		<top>384</top>
		<width>1468</width>
		<height>327</height>
		<onleft>300</onleft>
		<onback>300</onback>
		<movement>5</movement>
		<orientation>horizontal</orientation>
	</include>
	<include name="Horizontal_Label_Commons">
		<animation effect="slide" start="0,0" end="-438,0" time="0" condition="true">conditional</animation>
	</include>

	<include name="HomeShelf_Jarvis">
		<param name="xoffset"/>
		<param name="yoffset"/>
		<param name="shelfwidth"/>
		<definition>
			<control type="image" description="Single line shelf BG XBMC only">
				<visible>!Skin.HasSetting(plexbmc) + [Control.IsVisible(111) | Control.IsVisible(211) | [Control.IsVisible(311) + !Control.IsVisible(312)] | [!Control.IsVisible(311) + Control.IsVisible(312)] | [Control.IsVisible(411) + !Control.IsVisible(413)] | [!Control.IsVisible(411) + Control.IsVisible(413)] | [Control.IsVisible(511) + !Control.IsVisible(513)] | [!Control.IsVisible(511) + Control.IsVisible(513)] | [Control.IsVisible(514) + !Control.IsVisible(515)] | [!Control.IsVisible(514) + Control.IsVisible(515)]]</visible>
				<posx>$PARAM[xoffset]</posx>
				<posy>$PARAM[yoffset]</posy>
				<width>$PARAM[shelfwidth]</width>
				<height>398</height>
				<texture border="0,40,0,40">home/OverlayRA2T.png</texture>
			</control>
			<control type="image" description="Double line shelfBG 2 XBMC only">
				<animation effect="slide" start="0,0" end="0,-162" time="0" delay="0" condition="true">conditional</animation>
				<visible>!Skin.HasSetting(plexbmc) + [[Control.IsVisible(311) + Control.IsVisible(312)] | [Control.IsVisible(411) + Control.IsVisible(413)] | [Control.IsVisible(511) + Control.IsVisible(513)] | [Control.IsVisible(514) + Control.IsVisible(515)]]</visible>
				<posx>$PARAM[xoffset]</posx>
				<posy>$PARAM[yoffset]</posy>
				<width>$PARAM[shelfwidth]</width>
				<height>720</height>
				<texture border="0,40,0,40">home/OverlayRA2T.png</texture>
			</control>
			<control type="image" description="Single line shelf BG Plexbmc only">
				<visible>Skin.HasSetting(plexbmc) + [Control.IsVisible(111) | Control.IsVisible(211) | Control.IsVisible(212) | [Integer.IsGreater(Container(311).NumItems,0) + !Integer.IsGreater(Container(312).NumItems,0)] | [!Integer.IsGreater(Container(311).NumItems,0) + Integer.IsGreater(Container(312).NumItems,0)] | [Integer.IsGreater(Container(411).NumItems,0) + !Integer.IsGreater(Container(413).NumItems,0)] | [!Integer.IsGreater(Container(411).NumItems,0) + Integer.IsGreater(Container(413).NumItems,0)] | Control.IsVisible(511) | Control.IsVisible(900) | Control.IsVisible(901)]</visible>
				<posx>$PARAM[xoffset]</posx>
				<posy>$PARAM[yoffset]</posy>
				<width>$PARAM[shelfwidth]</width>
				<height>398</height>
				<texture border="0,40,0,40">home/OverlayRA2T.png</texture>
			</control>
			<control type="image" description="Double line shelf BG 2 Plexbmc only">
				<animation effect="slide" start="0,0" end="0,-162" time="0" delay="0" condition="true">conditional</animation>
				<visible>Skin.HasSetting(plexbmc) + [[Integer.IsGreater(Container(311).NumItems,0) + Integer.IsGreater(Container(312).NumItems,0)] | [Integer.IsGreater(Container(411).NumItems,0) + Integer.IsGreater(Container(413).NumItems,0)]]</visible>
				<posx>$PARAM[xoffset]</posx>
				<posy>$PARAM[yoffset]</posy>
				<width>$PARAM[shelfwidth]</width>
				<height>720</height>
				<texture border="0,40,0,40">home/OverlayRA2T.png</texture>
			</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,-100" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(Hide.Favourites)">Favourite.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(Hide.PVR.Shelf)  + [PVR.HasTVChannels | PVR.HasRadioChannels]">PVR.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(Hide.Weather.Shelf)  + !String.IsEmpty(Weather.Plugin)">Weather.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(Shelf.Addons)">Addons.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.Movies.Shelf) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.Movies.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.Movies.Shelf) + !Skin.HasSetting(plexbmc) + [String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true) | String.IsEqual(Window(Home).Property(SkinWidgets_RandomItems),true)]">Recommended.And.Random.Movies.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.TVShows.Shelf) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.Episodes.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.TVShows.Shelf) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">Recommended.Episodes.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.Music.Shelf) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.Albums.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.Music.Shelf) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">Recommended.Albums.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.MusicVideos.Shelf) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.MusicVideos.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded)+ !Skin.HasSetting(Hide.MusicVideos.Shelf) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">Recommended.MusicVideos.List</include>
				<include condition="!Skin.HasSetting(Hide.RecentlyAdded) + Skin.HasSetting(plexbmc)">Plexbmc_Shelf_Jarvis</include>
			</control>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(16)</param>
				<param name="shelfvisible">![Skin.HasSetting(Hide.Games.Shelf) | Skin.HasSetting(Hide.RecentlyAdded)]</param>
				<param name="selectionlistid">1600</param>
				<param name="selectionlistlabel1">$LOCALIZE[31054]</param>
				<param name="selectionlistvisible1">true</param>
				<param name="listitemtype1">Shelf_Addons</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">sources://games/</param>
				<param name="listitemtarget1">games</param>
			</include>			
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(1)</param>
				<param name="shelfvisible">![Skin.HasSetting(Hide.Pictures.Shelf) | Skin.HasSetting(Hide.RecentlyAdded)]</param>
				<param name="selectionlistid">100</param>
				<param name="selectionlistlabel1">$LOCALIZE[31054]</param>
				<param name="selectionlistvisible1">true</param>
				<param name="listitemtype1">Shelf_Addons</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">sources://pictures/</param>
				<param name="listitemtarget1">pictures</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(3)</param>
				<param name="shelfvisible">![Skin.HasSetting(Hide.Videos.Shelf) | Skin.HasSetting(Hide.RecentlyAdded)]</param>
				<param name="selectionlistid">300</param>
				<param name="selectionlistlabel1">$LOCALIZE[31054]</param>
				<param name="selectionlistvisible1">true</param>
				<param name="listitemtype1">Shelf_Addons</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">sources://videos/</param>
				<param name="listitemtarget1">videos</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(12)</param>
				<param name="shelfvisible">![Skin.HasSetting(Hide.TV.Shelf) | Skin.HasSetting(Hide.RecentlyAdded)]</param>
				<param name="selectionlistid">1200</param>
				<param name="selectionlistlabel1">$LOCALIZE[31080]</param>
				<param name="selectionlistlabel2">$LOCALIZE[31081]</param>
				<param name="selectionlistvisible1">!Skin.HasSetting(Hide.TV.Shelf.Channels)</param>
				<param name="selectionlistvisible2">!Skin.HasSetting(Hide.TV.Shelf.Recordings)</param>
				<param name="listitemtype1">Shelf_Channel</param>
				<param name="listitemtype2">Shelf_Recording</param>
				<param name="listitemlabel1">ChannelLabel</param>
				<param name="listitemlabel2">RecordingLabel</param>
				<param name="listitemsortby1">lastplayed</param>
				<param name="listitemcontent1">pvr://channels/tv/*?=lastplayed</param>
				<param name="listitemcontent2">pvr://recordings/tv/active?view=flat</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(13)</param>
				<param name="shelfvisible">![Skin.HasSetting(Hide.Radio.Shelf) | Skin.HasSetting(Hide.RecentlyAdded)]</param>
				<param name="selectionlistid">1300</param>
				<param name="selectionlistlabel1">$LOCALIZE[31080]</param>
				<param name="selectionlistlabel2">$LOCALIZE[31081]</param>
				<param name="selectionlistvisible1">!Skin.HasSetting(Hide.Radio.Shelf.Channels)</param>
				<param name="selectionlistvisible2">!Skin.HasSetting(Hide.Radio.Shelf.Recordings)</param>
				<param name="listitemtype1">Shelf_Channel</param>
				<param name="listitemtype2">Shelf_Recording</param>
				<param name="listitemlabel1">ChannelLabel</param>
				<param name="listitemlabel2">RecordingLabel</param>
				<param name="listitemsortby1">lastplayed</param>
				<param name="listitemcontent1">pvr://channels/radio/*?=lastplayed</param>
				<param name="listitemcontent2">pvr://recordings/radio/active?view=flat</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(15)</param>
				<param name="shelfvisible">!String.IsEmpty(Weather.plugin) + ![Skin.HasSetting(Hide.Weather.Shelf) | Skin.HasSetting(Hide.RecentlyAdded)]</param>
				<param name="selectionlistid">1500</param>
				<param name="selectionlistlabel1">$LOCALIZE[31130] • $INFO[Weather.Location]</param>
				<param name="selectionlistlabel2">$LOCALIZE[31131] • $INFO[Weather.Location]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Window(weather).Property(Hourly.IsFetched)) + !Skin.HasSetting(Hide.Weather.Shelf.Hourly)</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Window(weather).Property(Daily.IsFetched)) + !Skin.HasSetting(Hide.Weather.Shelf.Daily)</param>
				<param name="listitemtype1">Shelf_Weather</param>
				<param name="listitemtype2">Shelf_Weather</param>
				<param name="listitemlabel1">WeatherLabel</param>
				<param name="listitemlabel2">WeatherLabel</param>
				<param name="listitemcontenttype1">Include</param>
				<param name="listitemcontenttype2">Include</param>
				<param name="listitemcontent1">WeatherContent.Hourly</param>
				<param name="listitemcontent2">WeatherContent.Daily</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(21)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">21000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome21Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome21List)) + Skin.HasSetting(CustomHome21.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome21List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome21Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome21List)) + Skin.HasSetting(CustomHome21.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome21List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome21Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome21List)) + Skin.HasSetting(CustomHome21.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome21List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome21Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome21List)) + Skin.HasSetting(CustomHome21.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome21List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome21Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome21List)) + Skin.HasSetting(CustomHome21.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome21List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(22)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">22000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome22Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome22List)) + Skin.HasSetting(CustomHome22.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome22List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome22Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome22List)) + Skin.HasSetting(CustomHome22.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome22List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome22Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome22List)) + Skin.HasSetting(CustomHome22.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome22List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome22Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome22List)) + Skin.HasSetting(CustomHome22.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome22List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome22Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome22List)) + Skin.HasSetting(CustomHome22.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome22List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(23)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">23000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome23Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome23List)) + Skin.HasSetting(CustomHome23.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome23List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome23Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome23List)) + Skin.HasSetting(CustomHome23.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome23List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome23Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome23List)) + Skin.HasSetting(CustomHome23.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome23List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome23Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome23List)) + Skin.HasSetting(CustomHome23.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome23List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome23Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome23List)) + Skin.HasSetting(CustomHome23.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome23List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(24)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">24000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome24Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome24List)) + Skin.HasSetting(CustomHome24.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome24List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome24Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome24List)) + Skin.HasSetting(CustomHome24.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome24List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome24Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome24List)) + Skin.HasSetting(CustomHome24.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome24List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome24Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome24List)) + Skin.HasSetting(CustomHome24.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome24List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome24Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome24List)) + Skin.HasSetting(CustomHome24.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome24List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(25)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">25000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome25Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome25List)) + Skin.HasSetting(CustomHome25.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome25List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome25Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome25List)) + Skin.HasSetting(CustomHome25.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome25List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome25Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome25List)) + Skin.HasSetting(CustomHome25.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome25List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome25Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome25List)) + Skin.HasSetting(CustomHome25.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome25List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome25Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome25List)) + Skin.HasSetting(CustomHome25.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome25List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(26)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">26000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome26Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome26List)) + Skin.HasSetting(CustomHome26.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome26List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome26Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome26List)) + Skin.HasSetting(CustomHome26.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome26List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome26Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome26List)) + Skin.HasSetting(CustomHome26.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome26List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome26Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome26List)) + Skin.HasSetting(CustomHome26.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome26List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome26Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome26List)) + Skin.HasSetting(CustomHome26.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome26List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(27)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">27000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome27Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome27List)) + Skin.HasSetting(CustomHome27.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome27List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome27Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome27List)) + Skin.HasSetting(CustomHome27.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome27List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome27Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome27List)) + Skin.HasSetting(CustomHome27.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome27List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome27Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome27List)) + Skin.HasSetting(CustomHome27.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome27List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome27Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome27List)) + Skin.HasSetting(CustomHome27.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome27List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(28)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">28000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome28Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome28List)) + Skin.HasSetting(CustomHome28.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome28List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome28Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome28List)) + Skin.HasSetting(CustomHome28.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome28List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome28Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome28List)) + Skin.HasSetting(CustomHome28.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome28List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome28Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome28List)) + Skin.HasSetting(CustomHome28.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome28List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome28Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome28List)) + Skin.HasSetting(CustomHome28.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome28List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(29)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">29000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome29Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome29List)) + Skin.HasSetting(CustomHome29.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome29List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome29Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome29List)) + Skin.HasSetting(CustomHome29.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome29List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome29Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome29List)) + Skin.HasSetting(CustomHome29.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome29List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome29Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome29List)) + Skin.HasSetting(CustomHome29.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome29List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome29Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome29List)) + Skin.HasSetting(CustomHome29.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome29List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(30)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">21000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome210Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome210List)) + Skin.HasSetting(CustomHome210.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome210List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome210Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome210List)) + Skin.HasSetting(CustomHome210.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome210List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome210Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome210List)) + Skin.HasSetting(CustomHome210.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome210List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome210Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome210List)) + Skin.HasSetting(CustomHome210.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome210List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome210Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome210List)) + Skin.HasSetting(CustomHome210.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome210List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(31)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">22000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome211Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome211List)) + Skin.HasSetting(CustomHome211.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome211List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome211Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome211List)) + Skin.HasSetting(CustomHome211.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome211List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome211Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome211List)) + Skin.HasSetting(CustomHome211.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome211List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome211Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome211List)) + Skin.HasSetting(CustomHome211.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome211List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome211Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome211List)) + Skin.HasSetting(CustomHome211.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome211List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(32)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">23000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome212Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome212List)) + Skin.HasSetting(CustomHome212.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome212List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome212Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome212List)) + Skin.HasSetting(CustomHome212.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome212List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome212Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome212List)) + Skin.HasSetting(CustomHome212.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome212List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome212Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome212List)) + Skin.HasSetting(CustomHome212.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome212List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome212Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome212List)) + Skin.HasSetting(CustomHome212.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome212List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(33)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">24000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome213Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome213List)) + Skin.HasSetting(CustomHome213.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome213List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome213Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome213List)) + Skin.HasSetting(CustomHome213.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome213List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome213Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome213List)) + Skin.HasSetting(CustomHome213.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome213List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome213Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome213List)) + Skin.HasSetting(CustomHome213.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome213List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome213Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome213List)) + Skin.HasSetting(CustomHome213.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome213List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(34)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">25000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome214Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome214List)) + Skin.HasSetting(CustomHome214.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome214List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome214Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome214List)) + Skin.HasSetting(CustomHome214.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome214List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome25Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome214List)) + Skin.HasSetting(CustomHome214.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome214List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome25Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome214List)) + Skin.HasSetting(CustomHome214.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome214List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome214Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome25List)) + Skin.HasSetting(CustomHome214.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome214List)]</param>
			</include>
			<include content="ShelfList">
				<param name="menuvisibility">Container(300).HasFocus(35)</param>
				<param name="shelfvisible">!Skin.HasSetting(Hide.RecentlyAdded)</param>
				<param name="selectionlistid">26000</param>
				<param name="selectionlistlabel1">$INFO[Skin.String(CustomHome215Label)]</param>
				<param name="selectionlistvisible1">!String.IsEmpty(Skin.String(CustomHome215List)) + Skin.HasSetting(CustomHome215.Movies)</param>
				<param name="listitemtype1">Shelf_Posters</param>
				<param name="listitemlabel1">MoviesLabel</param>
				<param name="listitemcontent1">$INFO[Skin.String(CustomHome215List)]</param>
				<param name="selectionlistlabel2">$INFO[Skin.String(CustomHome215Label)]</param>
				<param name="selectionlistvisible2">!String.IsEmpty(Skin.String(CustomHome215List)) + Skin.HasSetting(CustomHome215.TVShows)</param>
				<param name="listitemtype2">Shelf_Posters</param>
				<param name="listitemlabel2">TVShowLabel</param>
				<param name="listitemcontent2">$INFO[Skin.String(CustomHome215List)]</param>
				<param name="selectionlistlabel3">$INFO[Skin.String(CustomHome215Label)]</param>
				<param name="selectionlistvisible3">!String.IsEmpty(Skin.String(CustomHome215List)) + Skin.HasSetting(CustomHome215.Episodes)</param>
				<param name="listitemtype3">Shelf_Posters</param>
				<param name="listitemlabel3">MoviesLabel</param>
				<param name="listitemcontent3">$INFO[Skin.String(CustomHome215List)]</param>
				<param name="selectionlistlabel4">$INFO[Skin.String(CustomHome215Label)]</param>
				<param name="selectionlistvisible4">!String.IsEmpty(Skin.String(CustomHome215List)) + Skin.HasSetting(CustomHome215.Albums)</param>
				<param name="listitemtype4">Shelf_Albums</param>
				<param name="listitemlabel4">AlbumLabel</param>
				<param name="listitemcontent4">$INFO[Skin.String(CustomHome215List)]</param>
				<param name="selectionlistlabel5">$INFO[Skin.String(CustomHome215Label)]</param>
				<param name="selectionlistvisible5">!String.IsEmpty(Skin.String(CustomHome215List)) + Skin.HasSetting(CustomHome215.Songs)</param>
				<param name="listitemtype5">Shelf_Albums</param>
				<param name="listitemlabel5">SongLabel</param>
				<param name="listitemcontent5">$INFO[Skin.String(CustomHome215List)]</param>
			</include>
		</definition>
	</include>

	<include name="RecordingContentItem">
		<param name="recordingchannelicon" default="PVR.NextRecordingChannelIcon"/>
		<param name="recordingstatus" default="img/PVR-HasTimer.png"/>
		<param name="recordingheader" default="$LOCALIZE[19157]"/>
		<param name="recordingtime" default="PVR.NextRecordingDateTime"/>
		<param name="recordingtitle" default="PVR.NextRecordingTitle"/>
		<param name="recordingchannel" default="PVR.NextRecordingChannel"/>
		<definition>
			<control type="image">
				<left>1065</left>
				<top>70</top>
				<width>855</width>
				<height>140</height>
				<texture>img/gradient.png</texture>
			</control>
			<control type="image" description="Recording Channel Icon">
				<posx>1750</posx>
				<posy>70</posy>
				<width>140</width>
				<height>140</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" fallback="img/DefaultVideoCover.png">$INFO[$PARAM[recordingchannelicon]]</texture>
				<bordersize>10</bordersize>
			</control>
			<control type="image">
				<posx>1710</posx>
				<posy>85</posy>
				<width>30</width>
				<height>30</height>
				<aspectratio>keep</aspectratio>
				<texture>$PARAM[recordingstatus]</texture>
			</control>
			<control type="label">
				<description>Next Timer Header label</description>
				<left>940</left>
				<top>70</top>
				<height>55</height>
				<width>755</width>
				<label>$PARAM[recordingheader]</label>
				<textcolor>Highlight</textcolor>
				<align>right</align>
				<aligny>center</aligny>
			</control>
			<control type="label" description="Recording time">
				<description>NextRecordingDateTime</description>
				<left>940</left>
				<top>110</top>
				<width>800</width>
				<height>55</height>
				<label>$INFO[$PARAM[recordingtime],$LOCALIZE[19126] - ]</label>
				<align>right</align>
				<scroll>true</scroll>
			</control>
			<control type="textbox" description="Recording title and channel">
				<posx>940</posx>
				<posy>155</posy>
				<width>800 </width>
				<height>55</height>
				<align>right</align>
				<font>Details</font>
				<textcolor>White</textcolor>
				<label>[COLOR=White]$INFO[$PARAM[recordingtitle]][/COLOR][COLOR=Highlight] ([/COLOR]$INFO[$PARAM[recordingchannel]][COLOR=Highlight])[/COLOR]</label>
			</control>
		</definition>
	</include>

	<include name="PVR.List">
		<control type="group" description="Recording widget">
			<visible>[Container(300).HasFocus(300) | Container(300).HasFocus(301)] + [PVR.IsRecording | PVR.HasNonRecordingTimer]</visible>
			<animation effect="slide" start="0,0" end="0,150" time="0" condition="PVR.IsRecording">conditional</animation>
			<animation effect="slide" start="0,0" end="0,100" time="0" condition="!Skin.HasSetting(VerticalHome) | !String.IsEmpty(Weather.Plugin)">conditional</animation>
			<include content="RecordingContentItem">
			</include>        
		</control>
		<control type="group" description="now recording widget">
			<visible>[Container(300).HasFocus(300) | Container(300).HasFocus(301)] + [PVR.IsRecording]</visible>
			<animation effect="slide" start="0,0" end="0,100" time="0" condition="!Skin.HasSetting(VerticalHome) | !String.IsEmpty(Weather.Plugin)">conditional</animation>
			<include content="RecordingContentItem">
				<param name="recordingchannelicon" value="PVR.NowRecordingChannelIcon"/>
				<param name="recordingstatus" value="img/PVR-IsRecording.png"/>
				<param name="recordingheader" value="$LOCALIZE[19158]"/>
				<param name="recordingtime" value="PVR.NowRecordingDateTime"/>
				<param name="recordingtitle" value="PVR.NowRecordingTitle"/>
				<param name="recordingchannel" value="PVR.NowRecordingChannel"/>
			</include>        
		</control>
	</include>


	<include name="Weather.List">
		<control type="group" description="Weather on Horizontal home screen">
			<visible>!Skin.HasSetting(VerticalHome)</visible>
			<top>1090</top>
			<left>960</left>
			<control type="image">
				<left>-310</left>
				<top>0</top>
				<width>310</width>
				<height>90</height>
				<texture border="100,0,0,0">common/TimePanel.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>310</width>
				<height>90</height>
				<texture flipx="true" border="0,0,100,0">common/TimePanel.png</texture>
			</control>
			<control type="grouplist">
				<left>-310</left>
				<top>45</top>
				<width>610</width>
				<height>90</height>
				<orientation>horizontal</orientation>
				<align>center</align>
				<itemgap>10</itemgap>
				<control type="label">
					<description>location label</description>
					<width min="10" max="250">auto</width>
					<height>40</height>
					<font>font22</font>
					<textcolor>Highlight</textcolor>
					<label>$INFO[Window(Weather).Property(Location)]</label>
				</control>          
				<control type="multiimage">
					<description>Weather image</description>
					<top>5</top>
					<width>45</width>
					<height>45</height>
					<aspectratio aligny="center">keep</aspectratio>
					<imagepath>$VAR[WeatherIconPath]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconExt]</imagepath>
				    <timeperimage>70</timeperimage>
				    <fadetime>1</fadetime>
				    <randomize>false</randomize>
				</control>
				<control type="label">
					<description>Conditions Label</description>
					<width min="10" max="250">auto</width>
					<height>40</height>
					<font>font22</font>
					<label>$INFO[Window(Weather).Property(Current.Condition), , ][B]$INFO[Window(Weather).Property(Current.Temperature)]$INFO[System.TemperatureUnits][/B]</label>
				</control>
			</control>
		</control>
		<control type="group" description="Weather on Vertical home screen">
			<left>1100</left>
			<top>71</top>
			<visible>Skin.HasSetting(VerticalHome)</visible>
			<control type="image" description="BG">
				<left>0</left>
				<top>0</top>
				<width>820</width>
				<height>88</height>
				<texture>img/gradient.png</texture>
			</control>
			<control type="multiimage">
				<description>Weather image</description>
				<left>720</left>
				<top>0</top>
				<width>80</width>
				<height>84</height>
				<aspectratio aligny="center">keep</aspectratio>
				<imagepath>$VAR[WeatherIconPath]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconExt]</imagepath>
				<timeperimage>70</timeperimage>
				<fadetime>1</fadetime>
				<randomize>false</randomize>
			</control>
			<control type="label">
				<description>location label</description>
				<left>120</left>
				<top>0</top>
				<width>580</width>
				<height>40</height>
				<align>right</align>
				<aligny>center</aligny>
				<textcolor>Highlight</textcolor>
				<label>$INFO[Window(Weather).Property(Location)]</label>
			</control>
			<control type="label">
				<description>Conditions Label</description>
				<left>120</left>
				<top>45</top>
				<width>580</width>
				<height>30</height>
				<align>right</align>
				<aligny>center</aligny>
				<label>$INFO[Window(Weather).Property(Current.Condition), ,[COLOR=Highlight]  •  [/COLOR]]$INFO[Window(Weather).Property(Current.Temperature)]$INFO[System.TemperatureUnits]</label>
			</control>
		</control>
	</include>

	<include name="AddonItem">
		<param name="parentitemid" default=""/>
		<param name="itemid" default=""/>
		<param name="itemvisible" default=""/>
		<param name="itemcontent" default=""/>
		<definition>
			<control type="label" description="Header">
				<visible>Control.IsVisible($PARAM[itemid])</visible>
				<include>RecentlyAdded_Header</include>
				<label>$INFO[Container($PARAM[itemid]).ListItem.Property(ItemType)]</label>
			</control>
			<control type="label" description="Label">
				<visible>Control.HasFocus($PARAM[itemid])</visible>
				<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
				<include>RecentlyAdded_Label</include>
				<label>$INFO[Container($PARAM[itemid]).ListItem.Label]</label>
			</control>
			<control type="fixedlist" id="$PARAM[itemid]" description="Favourites">
				<visible>$PARAM[itemvisible]</visible>
				<visible>Container(300).HasFocus($PARAM[parentitemid])</visible>
				<onright>$PARAM[itemid]</onright>
				<onup>300</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onleft condition="!Skin.HasSetting(VerticalHome)">$PARAM[itemid]</onleft>
				<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
				<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
				<include content="Shelf_Addons">
					<param name="id1" value="$PARAM[itemid]"/>
				</include>
				<content>
					<include>$PARAM[itemcontent]</include>
				</content>
			</control>
		</definition>
	</include>

	<include name="FavouriteItem">
		<param name="parentitemid" default=""/>
		<param name="itemid" default=""/>
		<param name="itemvisible" default=""/>
		<param name="itemcontent" default=""/>
		<definition>
			<control type="label" description="Header">
				<visible>Control.IsVisible($PARAM[itemid])</visible>
				<include>RecentlyAdded_Header</include>
				<label>$INFO[Container($PARAM[itemid]).ListItem.Property(ItemType)]</label>
			</control>
			<control type="label" description="Label">
				<visible>Control.HasFocus($PARAM[itemid])</visible>
				<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
				<include>RecentlyAdded_Label</include>
				<label>$INFO[Container($PARAM[itemid]).ListItem.Label]</label>
			</control>
			<control type="fixedlist" id="$PARAM[itemid]" description="Favourites">
				<visible>$PARAM[itemvisible]</visible>
				<visible>Container(300).HasFocus($PARAM[parentitemid])</visible>
				<onright>$PARAM[itemid]</onright>
				<onup>300</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onleft condition="!Skin.HasSetting(VerticalHome)">$PARAM[itemid]</onleft>
				<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
				<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
				<include content="Shelf_Favourites">
					<param name="id1" value="$PARAM[itemid]"/>
				</include>
				<content>
					<include>$PARAM[itemcontent]</include>
				</content>
			</control>
		</definition>
	</include>

	<include name="Favourite.List">
		<include content="FavouriteItem">
			<param name="parentitemid" value="7"/>
			<param name="itemid" value="111"/>
			<param name="itemvisible" value="!String.IsEmpty(Window(Home).Property(favourite.1.path))"/>
			<param name="itemcontent" value="FavouriteContent"/>
		</include>
	</include>

	<include name="Addons.List">
		<include content="AddonItem">
			<param name="parentitemid" value="2"/>
			<param name="itemid" value="211"/>
			<param name="itemvisible" value="!String.IsEmpty(Skin.String(ShelfAddons.1.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.2.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.3.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.4.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.5.Label))"/>
			<param name="itemcontent" value="AddonContent"/>
		</include>
	</include>

	<include name="Recent.Movies.List">
		<control type="label" description="Header">
			<visible>Control.IsVisible(311)</visible>
			<include>RecentlyAdded_Header</include>
			<label>$INFO[Container(311).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(311)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>RecentlyAdded_Label</include>
			<label>$INFO[Container(311).ListItem.Label]</label>
		</control>
		<control type="fixedlist" id="311" description="Movies XBMC">
			<visible>!String.IsEmpty(Window(Home).Property(RecentMovie.1.Title))</visible>
			<visible>Container(300).HasFocus(4)</visible>
			<onright>311</onright>
			<onup>300</onup>
			<onback>300</onback>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">311</onleft>
			<ondown condition="Control.IsVisible(312)">312</ondown>
			<ondown condition="!Control.IsVisible(312)">300</ondown>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Posters">
				<param name="id1" value="311"/>
				<param name="id2" value="312"/>
				<param name="offset" value="-162"/>
			</include>
			<content>
				<include>RecentMovieContent</include>
			</content>
		</control>
	</include>
	<include name="Recommended.And.Random.Movies.List">
		<control type="label" description="Header">
			<visible>Control.IsVisible(312)</visible>
			<include>Recommended_Header</include>
			<label>$INFO[Container(312).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(312)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>Recommended_Label</include>
			<label>$INFO[Container(312).ListItem.Label]</label>
		</control>
		<control type="fixedlist" id="312" description="TOP Shortcuts">
			<visible>![String.IsEmpty(Window(Home).Property(RecommendedMovie.1.Title)) + String.IsEmpty(Window(Home).Property(RandomMovie.1.Title))]</visible>
			<visible>Container(300).HasFocus(4)</visible>
			<onright>312</onright>
			<onup condition="Control.IsVisible(311)">311</onup>
			<onup condition="!Control.IsVisible(311)">300</onup>
			<ondown>300</ondown>
			<onback>300</onback>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">312</onleft>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Posters">
				<param name="id1" value="312"/>
				<param name="id2" value="311"/>
				<param name="offset" value="162"/>
			</include>
			<content>
				<include condition="String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">RecommendedMovieContent</include>
				<include condition="String.IsEqual(Window(Home).Property(SkinWidgets_RandomItems),true)">RandomMovieContent</include>
			</content>
		</control>
	</include>
	<include name="Recent.MusicVideos.List">
		<control type="label" description="Header recent MusicVideos">
			<visible>Control.IsVisible(514)</visible>
			<include>RecentlyAdded_Header</include>
			<label>$INFO[Container(514).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(514)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>RecentlyAdded_Label</include>
			<label>$INFO[Container(514).ListItem.Property(ShelfLabel)]</label>
		</control>
		<control type="fixedlist" id="514" description="Recent MusicVideos">
			<visible>!String.IsEmpty(Window(Home).Property(RecentMusicVideo.1.Title))</visible>
			<visible>Container(300).HasFocus(14)</visible>
			<onright>514</onright>
			<onup>300</onup>
			<onback>300</onback>
			<ondown condition="Control.IsVisible(515)">515</ondown>
			<ondown condition="!Control.IsVisible(515)">300</ondown>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">514</onleft>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Albums">
				<param name="id1" value="514"/>
				<param name="id2" value="515"/>
				<param name="offset" value="-162"/>
			</include>
			<content>
				<include>RecentMusicVideoContent</include>
			</content>
		</control>
	</include>
	<include name="Recommended.MusicVideos.List">
		<control type="label" description="Header recommended MusicVideos">
			<visible>Control.IsVisible(515)</visible>
			<include>Recommended_Header</include>
			<label>$INFO[Container(515).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(515)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>Recommended_Label</include>
			<label>$INFO[Container(515).ListItem.Property(ShelfLabel)]</label>
		</control>
		<control type="fixedlist" id="515" description="Recommended MusicVideos">
			<visible>!String.IsEmpty(Window(Home).Property(RecommendedMusicVideo.1.Title))</visible>
			<visible>Container(300).HasFocus(14)</visible>
			<onright>515</onright>
			<onup condition="Control.IsVisible(514)">514</onup>
			<onup condition="!Control.IsVisible(514)">300</onup>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">515</onleft>
			<ondown>300</ondown>
			<onback>300</onback>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Albums">
				<param name="id1" value="515"/>
				<param name="id2" value="514"/>
				<param name="offset" value="162"/>
			</include>
			<content>
				<include>RecommendedMusicVideoContent</include>
			</content>
		</control>
	</include>
	<include name="Recent.Episodes.List">
		<control type="label" description="Header">
			<visible>Control.IsVisible(411)</visible>
			<include>RecentlyAdded_Header</include>
			<label>$INFO[Container(411).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(411)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>RecentlyAdded_Label</include>
			<label>$INFO[Container(411).ListItem.Label]</label>
		</control>
		<control type="fixedlist" id="411" description="TV Shows XBMC">
			<visible>!String.IsEmpty(Window(Home).Property(RecentEpisode.1.Title))</visible>
			<visible>Container(300).HasFocus(5)</visible>
			<onright>411</onright>
			<onup>300</onup>
			<onback>300</onback>
			<ondown condition="Control.IsVisible(413)">413</ondown>
			<ondown condition="!Control.IsVisible(413)">300</ondown>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">411</onleft>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Episodes">
				<param name="id1" value="411"/>
				<param name="id2" value="413"/>
				<param name="offset" value="-162"/>
			</include>
			<content>
				<include>RecentEpisodeContent</include>
			</content>
		</control>
	</include>
	<include name="Recommended.Episodes.List">
		<control type="label" description="Header">
			<visible>Control.IsVisible(413)</visible>
			<include>Recommended_Header</include>
			<label>$INFO[Container(413).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(413)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>Recommended_Label</include>
			<label>$INFO[Container(413).ListItem.Label2,,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container(413).ListItem.Label]</label>
		</control>
		<control type="fixedlist" id="413" description="TV Shows XBMC Widgets">
			<visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.1.Title))</visible>
			<visible>Container(300).HasFocus(5)</visible>
			<onright>413</onright>
			<onup condition="Control.IsVisible(411)">411</onup>
			<onup condition="!Control.IsVisible(411)">300</onup>
			<ondown>300</ondown>
			<onback>300</onback>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">413</onleft>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Episodes">
				<param name="id1" value="413"/>
				<param name="id2" value="411"/>
				<param name="offset" value="162"/>
			</include>     
			<content>
				<include>RecommendedEpisodeContent</include>
			</content>
		</control>
	</include>
	<include name="Recent.Albums.List">
		<control type="label" description="Header">
			<visible>Control.IsVisible(511)</visible>
			<include>RecentlyAdded_Header</include>
			<label>$INFO[Container(511).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(511)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>RecentlyAdded_Label</include>
			<label>$INFO[Container(511).ListItem.Property(ShelfLabel)]</label>
		</control>
		<control type="fixedlist" id="511" description="TOP Shortcuts">
			<visible>!String.IsEmpty(Window(Home).Property(RecentAlbum.1.Title))</visible>
			<visible>Container(300).HasFocus(6)</visible>
			<onright>511</onright>
			<onup>300</onup>
			<onback>300</onback>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">511</onleft>
			<ondown condition="Control.IsVisible(513)">513</ondown>
			<ondown condition="!Control.IsVisible(513)">300</ondown>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Albums">
				<param name="id1" value="511"/>
				<param name="id2" value="513"/>
				<param name="offset" value="-162"/>
			</include>
			<content>
				<include>RecentAlbumContent</include>
			</content>
		</control>
	</include>
	<include name="Recommended.Albums.List">
		<control type="label" description="Header">
			<visible>Control.IsVisible(513)</visible>
			<include>Recommended_Header</include>
			<label>$INFO[Container(513).ListItem.Property(ItemType)]</label>
		</control>
		<control type="label" description="Label">
			<visible>Control.HasFocus(513)</visible>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Label_Commons</include>
			<include>Recommended_Label</include>
			<label>$INFO[Container(513).ListItem.Property(ShelfLabel)]</label>
		</control>
		<control type="fixedlist" id="513" description="TOP Shortcuts">
			<visible>![Skin.HasSetting(Hide.RecentlyAdded) | String.IsEmpty(Window(Home).Property(RecommendedAlbum.1.Title))]</visible>
			<visible>Container(300).HasFocus(6)</visible>
			<onright>513</onright>
			<onup condition="Control.IsVisible(511)">511</onup>
			<onup condition="!Control.IsVisible(511)">300</onup>
			<ondown>300</ondown>
			<onback>300</onback>
			<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
			<onleft condition="!Skin.HasSetting(VerticalHome)">513</onleft>
			<include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
			<include condition="Skin.HasSetting(VerticalHome)">Vertical_Shelf_Commons</include>
			<include content="Shelf_Albums">
				<param name="id1" value="513"/>
				<param name="id2" value="511"/>
				<param name="offset" value="162"/>
			</include>
			<content>
				<include>RecommendedAlbumContent</include>
			</content>
		</control>
	</include>

	<include name="FavouriteContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(favourite.$PARAM[itemid].path))</visible>
				<label>$INFO[Window(Home).Property(favourite.$PARAM[itemid].name)]</label>
				<thumb>$INFO[Window(Home).Property(favourite.$PARAM[itemid].thumb)]</thumb>
				<property name="ItemType">$LOCALIZE[1036]</property>
				<onclick>$INFO[Window(Home).Property(favourite.$PARAM[itemid].path)]</onclick>
			</item>
		</definition>
	</include>
	<include name="FavouriteContent">
		<include content="FavouriteContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="FavouriteContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="AddonContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Skin.String(ShelfAddons.$PARAM[itemid].Label))</visible>
				<label>$INFO[system.addontitle(Skin.String(ShelfAddons.$PARAM[itemid].Label))]</label>
				<thumb>$INFO[system.addonicon(Skin.String(ShelfAddons.$PARAM[itemid].Label))]</thumb>
				<property name="ItemType">$LOCALIZE[24001]</property>
				<onclick>RunAddon($INFO[Skin.String(ShelfAddons.$PARAM[itemid].Label)])</onclick>
			</item>
		</definition>
	</include>
	<include name="AddonContent">
		<include content="AddonContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="AddonContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecentMovieContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecentMovie.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Year), • ]$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]]$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Rating), • ][/COLOR]</label>
				<property name="Widgets">true</property>
				<property name="InProgress">$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Resume)]</property>
				<property name="Watched">$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Watched)]</property>
				<property name="FanArt">$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Art(fanart))]</property>
				<thumb>$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Art(poster))]</thumb>
				<property name="ItemType">$LOCALIZE[31961]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RecentMovie.$PARAM[itemid].File)])</onclick>
			</item>
		</definition>
	</include>
	<include name="RecentMovieContent">
		<include content="RecentMovieContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecentMovieContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecommendedMovieContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecommendedMovie.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Year), • ]$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]]$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Rating), • ][/COLOR]</label>
				<property name="Widgets">true</property>
				<property name="InProgress">$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Resume)]</property>
				<property name="Watched">$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Watched)]</property>
				<property name="FanArt">$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Art(fanart))]</property>
				<thumb>$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Art(poster))]</thumb>
				<property name="ItemType">$LOCALIZE[31966]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].File)])</onclick>
			</item>
		</definition>
	</include>
	<include name="RecommendedMovieContent">
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecommendedMovieContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RandomMovieContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RandomMovie.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Year), • ]$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]]$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Rating), • ][/COLOR]</label>
				<property name="Widgets">true</property>
				<property name="InProgress">$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Resume)]</property>
				<property name="Watched">$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Watched)]</property>
				<property name="FanArt">$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Art(fanart))]</property>
				<thumb>$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Art(poster))]</thumb>
				<property name="ItemType">$LOCALIZE[31987]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RandomMovie.$PARAM[itemid].File)])</onclick>
			</item>
		</definition>
	</include>
	<include name="RandomMovieContent">
		<include content="RandomMovieContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RandomMovieContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecentEpisodeContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecentEpisode.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].TVshowTitle), • ]$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].EpisodeNo), • ]$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]][/COLOR]</label>
				<property name="SeasonEpisode">$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].EpisodeNo)]</property>
				<property name="FanArt">$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].Art(tvshow.fanart))]</property>
				<thumb>$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].Art(tvshow.poster))]</thumb>
				<property name="ItemType">$LOCALIZE[31961]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].File)])</onclick>
			</item>
		</definition>
	</include>
	<include name="RecentEpisodeContent">
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecentEpisodeContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecommendedEpisodeContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].TVshowTitle), • ]$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].EpisodeNo), • ]$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]][/COLOR]</label>
				<property name="SeasonEpisode">$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].EpisodeNo)]</property>
				<property name="FanArt">$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Art(tvshow.fanart))]</property>
				<thumb>$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Art(tvshow.poster))]</thumb>
				<property name="ItemType">$LOCALIZE[31966]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].File)])</onclick>
			</item>
		</definition>
	</include>
	<include name="RecommendedEpisodeContent">
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecommendedEpisodeContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecentAlbumContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecentAlbum.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Artist)]</label>
				<label2>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Title)]</label2>
				<thumb>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Thumb)]</thumb>
				<property name="FanArt">$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Fanart)]</property>
				<property name="ShelfLabel">$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Year), • ][/COLOR]</property>
				<property name="ItemType">$LOCALIZE[31961]</property>
				<onclick>PlayList.Clear</onclick>
				<onclick>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Play)]</onclick>
			</item>
		</definition>
	</include>
	<include name="RecentAlbumContent">
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecentAlbumContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecommendedAlbumContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Artist)]</label>
				<label2>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Title)]</label2>
				<thumb>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Thumb)]</thumb>
				<property name="FanArt">$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Fanart)]</property>
				<property name="ShelfLabel">$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Year), • ][/COLOR]</property>
				<property name="ItemType">$LOCALIZE[31966]</property>
				<onclick>PlayList.Clear</onclick>
				<onclick>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Play)]</onclick>
			</item>
		</definition>
	</include>
	<include name="RecommendedAlbumContent">
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecommendedAlbumContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecentMusicVideoContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Artist)]</label>
				<label2>$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Title)]</label2>
				<thumb>$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Thumb)]</thumb>
				<property name="FanArt">$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Fanart)]</property>
				<property name="ShelfLabel">$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Year), • ][/COLOR]</property>      
				<property name="ItemType">$LOCALIZE[31961]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].File)])</onclick>
			</item>
		</definition>
	</include>
	<include name="RecentMusicVideoContent">
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecentMusicVideoContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecommendedMusicVideoContentItem">
		<param name="itemid" default=""/>
		<definition>
			<item id="$PARAM[itemid]">
				<visible>!String.IsEmpty(Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Title))</visible>
				<label>$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Artist)]</label>
				<label2>$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Title)]</label2>
				<thumb>$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Thumb)]</thumb>
				<property name="FanArt">$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Fanart)]</property>
				<property name="ShelfLabel">$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Year), • ][/COLOR]</property>      
				<property name="ItemType">$LOCALIZE[31961]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].File)])</onclick>
				<property name="ItemType">$LOCALIZE[31966]</property>
				<onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].File)])</onclick>
			</item>
		</definition>
	</include>
	<include name="RecommendedMusicVideoContent">
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="1"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="2"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="3"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="4"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="5"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="6"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="7"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="8"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="9"/>
		</include>
		<include content="RecommendedMusicVideoContentItem">
			<param name="itemid" value="10"/>
		</include>
	</include>

	<include name="RecentlyAdded_Header">
		<animation effect="slide" start="0,0" end="0,-162" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(312) | Control.IsVisible(413) | Control.IsVisible(513) | Control.IsVisible(515)]">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,-162" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(312).NumItems,0) | Integer.IsGreater(Container(413).NumItems,0)]">Conditional</animation>
		<align>right</align>
		<posx>20r</posx>
		<posy>339</posy>
		<height>45</height>
		<width>400</width>
		<textcolor>Highlight</textcolor>
		<font>Shelf_Title</font>
	</include>
	<include name="Recommended_Header">
		<animation effect="slide" start="0,0" end="0,522" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(311) | Control.IsVisible(411) |  Control.IsVisible(511) | Control.IsVisible(514)]">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,522" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(311).NumItems,0) | Integer.IsGreater(Container(411).NumItems,0) | Integer.IsGreater(Container(511).NumItems,0)]">Conditional</animation>
		<align>right</align>
		<posx>20r</posx>
		<posy>339</posy>
		<height>45</height>
		<width>400</width>
		<textcolor>Highlight</textcolor>
		<font>Shelf_Title</font>
	</include>
	<include name="RecentlyAdded_Label">
		<animation effect="slide" start="0,0" end="0,-162" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(312) | Control.IsVisible(413) | Control.IsVisible(513) | Control.IsVisible(515)]">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,-162" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(312).NumItems,0) | Integer.IsGreater(Container(413).NumItems,0)]">Conditional</animation>
		<posx>458</posx>
		<posy>339</posy>
		<height>45</height>
		<width>1080</width>
		<align>left</align>
		<textcolor>Highlight</textcolor>
		<font>Shelf_Title</font>
	</include>
	<include name="Recommended_Label">
		<animation effect="slide" start="0,0" end="0,522" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(311) | Control.IsVisible(411) | Control.IsVisible(511) | Control.IsVisible(514)]">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,522" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(311).NumItems,0) | Integer.IsGreater(Container(411).NumItems,0) | Integer.IsGreater(Container(511).NumItems,0) | Integer.IsGreater(Container(900).NumItems,0)]">Conditional</animation>
		<posx>458</posx>
		<posy>339</posy>
		<height>45</height>
		<width>1080</width>
		<align>left</align>
		<textcolor>Highlight</textcolor>
		<font>Shelf_Title</font>
	</include>

	<include name="Shelf_Posters">
		<param name="id1"/>
		<param name="id2"/>
		<param name="offset"/>
		<definition>  
			<animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible($PARAM[id1]) + Control.IsVisible($PARAM[id2])]">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="Skin.HasSetting(plexbmc) + Integer.IsGreater(Container($PARAM[id1]
        ).NumItems,0)">Conditional</animation>
			<include>VisibleFadeEffectDelayShelf</include>
			<itemlayout height="315" width="228.5">
				<include content="GenericPosterIconShelf">
					<param name="isFocused">false</param>
				</include>
			</itemlayout>
			<focusedlayout height="315" width="228.5">
				<include content="GenericPosterIconShelf">
					<param name="isFocused">Control.HasFocus($PARAM[id1])</param>
				</include>
			</focusedlayout>
		</definition>
	</include>

	<include name="Shelf_Episodes">
		<param name="id1"/>
		<param name="id2"/>
		<param name="offset"/>
		<definition>  
			<animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible($PARAM[id1]) + Control.IsVisible($PARAM[id2])]">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="Skin.HasSetting(plexbmc) + Integer.IsGreater(Container($PARAM[id1]
        ).NumItems,0)">Conditional</animation>
			<include>VisibleFadeEffectDelayShelf</include>
			<itemlayout height="315" width="228.5">
				<include content="GenericEpisodeIconShelf">
					<param name="isFocused">false</param>
				</include>
			</itemlayout>
			<focusedlayout height="315" width="228.5">
				<include content="GenericEpisodeIconShelf">
					<param name="isFocused">Control.HasFocus($PARAM[id1])</param>
				</include>
			</focusedlayout>
		</definition>
	</include>

	<include name="Shelf_Albums">
		<param name="id1"/>
		<param name="id2"/>
		<param name="offset"/>
		<definition>
			<animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible($PARAM[id1]) + Control.IsVisible($PARAM[id2])]">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="Skin.HasSetting(plexbmc) + Integer.IsGreater(Container($PARAM[id1]).NumItems,0)">Conditional</animation>
			<include>VisibleFadeEffectDelayShelf</include>
			<itemlayout height="315" width="228.5">
				<include content="GenericMusicIconShelf">
					<param name="isFocused">false</param>
				</include>
			</itemlayout>
			<focusedlayout height="315" width="228.5">
				<include content="GenericMusicIconShelf">
					<param name="isFocused">Control.HasFocus($PARAM[id1])</param>
				</include>
			</focusedlayout>
		</definition>
	</include>

	<include name="Shelf_Addons">
		<param name="id1"/>
		<definition>
			<include>VisibleFadeEffectDelayShelf</include>
			<itemlayout height="315" width="228.5">
				<include content="GenericThumbIconShelf">
					<param name="isFocused">false</param>
				</include>
			</itemlayout>
			<focusedlayout height="315" width="228.5">
				<include content="GenericThumbIconShelf">
					<param name="isFocused">Control.HasFocus($PARAM[id1])</param>
				</include>
			</focusedlayout>
		</definition>
	</include>

	<include name="Shelf_Favourites">
		<param name="id1"/>
		<definition>
			<include>VisibleFadeEffectDelayShelf</include>
			<itemlayout height="315" width="228.5">
				<include content="GenericFavouriteIconShelf">
					<param name="isFocused">false</param>
				</include>
			</itemlayout>
			<focusedlayout height="315" width="228.5">
				<include content="GenericFavouriteIconShelf">
					<param name="isFocused">Control.HasFocus($PARAM[id1])</param>
				</include>
			</focusedlayout>
		</definition>
	</include>
</includes>