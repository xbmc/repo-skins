<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<include name="View_511_Panel2">
		<include content="BackgroundOverlay">
			<param name="parentid" value="511"/>
			<param name="overlaytop" value="300"/>
			<param name="overlayheight" value="1620"/>
		</include>
		<control type="group" description="Content">
			<visible>Control.IsVisible(511)</visible>
			<include>ContentFade</include>

			<control type="panel" id="511" description="Grid">
				<viewtype label="$LOCALIZE[32245]">list</viewtype>
				<posx>50</posx>
				<posy>351</posy>
				<width>930</width>
				<height>700</height>
				<orientation>vertical</orientation>
				<onleft condition="!Skin.HasSetting(KioskMode.Enabled)">9000</onleft>
                <onleft condition="Skin.HasSetting(KioskMode.Enabled)">noop</onleft>
                <oninfo condition="ListItem.IsCollection + !String.Contains(System.BuildVersion,19.0)">ActivateWindow(1127)</oninfo>
                <onright condition="!Control.IsVisible(615)">611</onright>
				<onright condition="Control.IsVisible(615)">615</onright>
				<onup>511</onup>
				<ondown>511</ondown>
				<preloaditems>12</preloaditems>
				<pagecontrol>611</pagecontrol>
				<scrolltime>400</scrolltime>
				<visible>[$EXP[Exp_View_511] + Skin.HasSetting(Enable.NewViewSelector)] | [!Skin.HasSetting(hide.panel2view) + !Skin.HasSetting(Enable.NewViewSelector)]</visible>

				<include content="BannerLayout">
					<param name="viewid">511</param>
				</include>

				<include content="PosterLayout">
					<param name="viewid">511</param>
				</include>

				<include content="EpisodeLayout">
					<param name="viewid">511</param>
				</include>

				<include content="MusicLayout">
					<param name="viewid">511</param>
				</include>

				<include content="ImageLayout">
					<param name="viewid">511</param>
				</include>

				<include content="AddonLayout">
					<param name="viewid">511</param>
				</include>

				<include content="GenericLayout">
					<param name="viewid">511</param>
				</include>
				
				<include content="VideoLayout">
                    <param name="viewid">511</param>
                </include>
			</control>

			<include content="PanelTemplate">
				<param name="top">345</param>
				<param name="left">1000</param>
				<param name="height">440</param>
                <param name="width">860</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="subheading2">$VAR[panelsubheading2]</param>
                <param name="subheading2_visible">[Container.content(movies) | Container.content(episodes)] + [Skin.HasSetting(ShowAudioSub) + ![String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1))]]</param>                
				<param name="plot">$VAR[Plots]</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">![Container.Content(artists) | Container.Content(albums) | Container.Content(images) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)]</param>
			</include>
			<include content="PanelTemplate">
				<param name="top">345</param>
				<param name="left">1000</param>
				<param name="height">405</param>
                <param name="width">860</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
                <param name="subheading2">$VAR[panelsubheading2]</param>
                <param name="subheading2_visible">!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</param>                
				<param name="plot">$VAR[Plots]</param>
				<param name="plotheight">395</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">[Container.Content(tvshows) | Container.Content(seasons)]</param>
			</include>            
			<include content="PanelTemplate">
				<param name="top">345</param>
				<param name="left">1000</param>
				<param name="height">445</param>
                <param name="width">860</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.Content(sets)</param>
			</include>
			<include content="PanelTemplate">
				<param name="top">345</param>
				<param name="left">1000</param>
				<param name="height">545</param>
                <param name="width">860</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="plot">$VAR[Plots]</param>
				<param name="footer"></param>
				<param name="visibility">Container.Content(images)</param>
			</include>
			<include content="PanelTemplate">
				<param name="top">345</param>
				<param name="left">1000</param>
				<param name="height">440</param>
                <param name="width">860</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="plot">$VAR[Plots]</param>
				<param name="subcontent_label">$INFO[ListItem.Label]$INFO[ListItem.Year,  (,)]</param>
				<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Artist_Description))</param>
				<param name="subcontent_image_visible">false</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.Content(artists)</param>
			</include>
			<include content="PanelTemplate">
				<param name="top">345</param>
				<param name="left">1000</param>
				<param name="height">440</param>
                <param name="width">860</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="plot">$VAR[Plots]</param>
				<param name="subcontent_label1">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration, • (,)]</param>
                <param name="subcontent_label2">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$VAR[ItemDurationHrMins, • (,)]</param>
				<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Album_Description))</param>
				<param name="subcontent_image_visible">false</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.Content(albums)</param>
			</include>

			<control type="scrollbar" id="611">
				<animation effect="slide" start="0,0" end="-8,0" time="150">Focus</animation>
				<animation effect="slide" start="-8,0" end="0,0" time="300">UnFocus</animation>
				<posx>20r</posx>
				<posy>351</posy>
				<width>36</width>
				<height>700</height>
				<texturesliderbackground></texturesliderbackground>
				<texturesliderbar></texturesliderbar>
				<texturesliderbarfocus></texturesliderbarfocus>
				<textureslidernib border="18">OSD/ScrollbarNibNF.png</textureslidernib>
				<textureslidernibfocus border="18" colordiffuse="$VAR[HighlightColor]">OSD/ScrollbarNibFO.png</textureslidernibfocus>
				<showonepage>false</showonepage>
				<orientation>vertical</orientation>
				<onleft>511</onleft>
                <onright>511</onright>
                <visible>!Skin.HasSetting(Show.JumpToLetter) | ![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
			</control>

            <control type="button" id="611">
                <visible>Control.IsVisible(511)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
                <font />
                <texturefocus />
                <texturenofocus />
                <width>40</width>
                <onleft>511</onleft>
                <posx>50r</posx>
                <posy>368</posy>
                <height>690</height>
                <ondown>SetFocus(511)</ondown>
                <ondown>Action(nextletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown>SetFocus(611)</ondown>
                <onup>SetFocus(511)</onup>
                <onup>Action(prevletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup>SetFocus(611)</onup>
            </control>            

            <control type="grouplist" id="615111">
                <posx>36r</posx>
                <posy>368</posy>
                <height>690</height>
                <width>42</width>
                <itemgap>0</itemgap>
                <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(611) + !Container.Scrolling">Conditional</animation>
                <include>AlphabetNumber</include>
                <include content="AlphabetLetter"><param name="label" value="A" /></include>
                <include content="AlphabetLetter"><param name="label" value="B" /></include>
                <include content="AlphabetLetter"><param name="label" value="C" /></include>
                <include content="AlphabetLetter"><param name="label" value="D" /></include>
                <include content="AlphabetLetter"><param name="label" value="E" /></include>
                <include content="AlphabetLetter"><param name="label" value="F" /></include>
                <include content="AlphabetLetter"><param name="label" value="G" /></include>
                <include content="AlphabetLetter"><param name="label" value="H" /></include>
                <include content="AlphabetLetter"><param name="label" value="I" /></include>
                <include content="AlphabetLetter"><param name="label" value="J" /></include>
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <animation effect="fade" start="100" end="0" condition="[String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>Control.IsVisible(511)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>

            <control type="grouplist" id="615112">
                <posx>36r</posx>
                <posy>368</posy>
                <height>690</height>
                <width>42</width>
                <itemgap>0</itemgap>
                 <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(611) + !Container.Scrolling">Conditional</animation>
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <include content="AlphabetLetter"><param name="label" value="P" /></include>
                <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                <include content="AlphabetLetter"><param name="label" value="R" /></include>
                <include content="AlphabetLetter"><param name="label" value="S" /></include>
                <include content="AlphabetLetter"><param name="label" value="T" /></include>
                <include content="AlphabetLetter"><param name="label" value="U" /></include>
                <include content="AlphabetLetter"><param name="label" value="V" /></include>
                <include content="AlphabetLetter"><param name="label" value="W" /></include>
                <include content="AlphabetLetter"><param name="label" value="X" /></include>
                <include content="AlphabetLetter"><param name="label" value="Y" /></include>
                <include content="AlphabetLetter"><param name="label" value="Z" /></include>
                <animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>Control.IsVisible(511)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>            
            
			<include condition="!Skin.String(MediaViewsExtraArt,none)" content="ShowMediaViewsExtraArt">
			    <param name="logoleft">1380</param>
				<param name="logotop">40</param>
				<param name="logowidth">500</param>
				<param name="logoheight">290</param>
				<param name="discleft">1600</param>
				<param name="disctop">51</param>
				<param name="discheight">260</param>
				<param name="characterleft">1640</param>
				<param name="charactertop">41</param>
				<param name="characterheight">280</param>
				<param name="clearartleft">1457</param>
				<param name="cleararttop">64</param>
				<param name="clearartwidth">463</param>
				<param name="clearartheight">260</param>
			</include>
			
		</control>
	</include>
</includes>
