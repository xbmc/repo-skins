<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_50">
		<control type="group">
			<include content="BackgroundOverlay">
				<param name="parentid" value="50"/>
				<param name="overlaytop" value="300"/>
				<param name="overlayheight" value="1620"/>
			</include>
			<visible>Control.IsVisible(50)</visible>
			<include>ContentFade</include>
           
			<control type="list" id="50">
				<viewtype label="$LOCALIZE[535]">List</viewtype>
				<posx>650</posx>
				<posy>406</posy>
				<width>1240</width>
				<height>648</height>
				<pagecontrol>60</pagecontrol>
				<onleft condition="!Skin.HasSetting(KioskMode.Enabled)">9000</onleft>
                <onleft condition="Skin.HasSetting(KioskMode.Enabled)">noop</onleft>
                <oninfo condition="ListItem.IsCollection + !String.Contains(System.BuildVersion,19.0)">ActivateWindow(1127)</oninfo>
                <onright>60</onright>
				<onup>50</onup>
				<ondown>50</ondown>
				<preloaditems>4</preloaditems>
                <include condition="!Skin.HasSetting(Show.MoreItems.List)" content="List_Layout">
                    <param name="ListLabelFont">font16</param>
                    <param name="ListLabel2Font">ListDetails</param>
                    <param name="itemheight">72</param>
                    <param name="BGposy">15</param>
                </include>
                <include condition="Skin.HasSetting(Show.MoreItems.List)" content="List_Layout">
                    <param name="ListLabelFont">ListDetails</param>
                    <param name="ListLabel2Font">ListDetails</param>
                    <param name="itemheight">52</param>
                    <param name="BGposy">5</param>
                </include>
			</control>

			<control type="scrollbar" id="60">
				<animation effect="slide" start="0,0" end="-8,0" time="150">Focus</animation>
				<animation effect="slide" start="-8,0" end="0,0" time="300">UnFocus</animation>
				<posx>20r</posx>
				<posy>351</posy>
				<width>36</width>
				<height>700</height>
				<texturesliderbackground></texturesliderbackground>
				<texturesliderbar></texturesliderbar>
				<texturesliderbarfocus></texturesliderbarfocus>
				<textureslidernib border="18">OSD/ScrollbarNibNF.png</textureslidernib>
				<textureslidernibfocus border="18">OSD/ScrollbarNibFO.png</textureslidernibfocus>
				<showonepage>false</showonepage>
				<orientation>vertical</orientation>
				<onleft>50</onleft>
                <onright>50</onright>
                <visible>!Skin.HasSetting(Show.JumpToLetter) | ![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
			</control>
            
            <control type="button" id="60">
                <visible>String.IsEqual(Container.ViewMode,List)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
                <font />
                <texturefocus />
                <texturenofocus />
                <width>40</width>
                <onleft>50</onleft>
                <posx>50r</posx>
                <posy>368</posy>
                <height>690</height>
                <ondown>SetFocus(50)</ondown>
                <ondown>Action(nextletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown>SetFocus(60)</ondown>
                <onup>SetFocus(50)</onup>
                <onup>Action(prevletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup>SetFocus(60)</onup>
            </control>            

            <control type="grouplist" id="60501">
                <posx>36r</posx>
                <posy>368</posy>
                <height>690</height>
                <width>42</width>
                <itemgap>0</itemgap>
                <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
                <include>AlphabetNumber</include>
                <include content="AlphabetLetter"><param name="label" value="A" /></include>
                <include content="AlphabetLetter"><param name="label" value="B" /></include>
                <include content="AlphabetLetter"><param name="label" value="C" /></include>
                <include content="AlphabetLetter"><param name="label" value="D" /></include>
                <include content="AlphabetLetter"><param name="label" value="E" /></include>
                <include content="AlphabetLetter"><param name="label" value="F" /></include>
                <include content="AlphabetLetter"><param name="label" value="G" /></include>
                <include content="AlphabetLetter"><param name="label" value="H" /></include>
                <include content="AlphabetLetter"><param name="label" value="I" /></include>
                <include content="AlphabetLetter"><param name="label" value="J" /></include>
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <animation effect="fade" start="100" end="0" condition="[String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>String.IsEqual(Container.ViewMode,List)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>

            <control type="grouplist" id="60502">
                <posx>36r</posx>
                <posy>368</posy>
                <height>690</height>
                <width>42</width>
                <itemgap>0</itemgap>
                 <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <include content="AlphabetLetter"><param name="label" value="P" /></include>
                <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                <include content="AlphabetLetter"><param name="label" value="R" /></include>
                <include content="AlphabetLetter"><param name="label" value="S" /></include>
                <include content="AlphabetLetter"><param name="label" value="T" /></include>
                <include content="AlphabetLetter"><param name="label" value="U" /></include>
                <include content="AlphabetLetter"><param name="label" value="V" /></include>
                <include content="AlphabetLetter"><param name="label" value="W" /></include>
                <include content="AlphabetLetter"><param name="label" value="X" /></include>
                <include content="AlphabetLetter"><param name="label" value="Y" /></include>
                <include content="AlphabetLetter"><param name="label" value="Z" /></include>
                <animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>String.IsEqual(Container.ViewMode,List)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>

			<include content="PanelTemplate">
				<param name="top">355</param>
				<param name="left">555</param>
				<param name="height">410</param>
				<param name="width">650</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="plot">$VAR[Plots]</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.content(addons) | Container.Content(images) | Container.Content(games) | Container.content(movies) | Container.Content(musicvideos) | Container.Content(episodes)</param>
			</include>
            
			<include content="PanelTemplate">
				<param name="top">355</param>
				<param name="left">555</param>
				<param name="height">360</param>
				<param name="width">650</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
                <param name="subheading2">$VAR[panelsubheading2]</param>
                <param name="subheading2_visible">!String.IsEmpty(Window(Home).Property(NextAired.NextDate))</param>
				<param name="plot">$VAR[Plots]</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.content(tvshows) | Container.Content(seasons)</param>
			</include>            
			<include content="PanelTemplate">
				<param name="top">355</param>
				<param name="left">555</param>
				<param name="height">410</param>
				<param name="width">650</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.content(sets)</param>
			</include>
			<include content="PanelTemplate">
				<param name="top">355</param>
				<param name="left">555</param>
				<param name="height">410</param>
				<param name="width">650</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="plot">$VAR[Plots]</param>
				<param name="subcontent_label">$INFO[ListItem.Label]$INFO[ListItem.Year,  (,)]</param>
				<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Artist_Description))</param>
				<param name="subcontent_image_visible">false</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.content(artists)</param>
			</include>
			<include content="PanelTemplate">
				<param name="top">355</param>
				<param name="left">555</param>
				<param name="height">410</param>
				<param name="width">650</param>
				<param name="heading">$VAR[panelheading]</param>
				<param name="subheading">$VAR[panelsubheading]</param>
				<param name="plot">$VAR[Plots]</param>
				<param name="subcontent_label1">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration,  (,)]</param>
                <param name="subcontent_label2">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$VAR[ItemDurationHrMins,  (,)]</param>
				<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
				<param name="subcontent_sortby" value="track" />
				<param name="subcontent_sortorder" value="ascending" />
				<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Album_Description))</param>
				<param name="subcontent_image_visible">false</param>
				<param name="footer">$VAR[panelfooter]</param>
				<param name="visibility">Container.content(albums)</param>
			</include>
			<control type="group" description="50 MediaInfo">
				<posx>30</posx>
				<posy>351</posy>
				<width>490</width>
				<control type="label">
					<height>45</height>
					<align>center</align>
					<label>$VAR[listmediaheader]</label>
					<textcolor>Highlight</textcolor>
				</control>
				<include content="ShadowedImage">
					<param name="width">490</param>
					<param name="height">700</param>
					<param name="texture">$VAR[ThumbType]</param>
				</include>
				<control type="label">
					<top>650</top>
					<height>45</height>
					<align>center</align>
					<label>$VAR[listmediafooter]</label>
					<textcolor>Highlight</textcolor>
				</control>
			</control>
		</control>
	</include>

</includes>
