<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <variable name="TimeLabel" description="Date and time">
        <value condition="Window.IsActive(home) | !System.Loggedon">[COLOR=Grey2]$INFO[System.Date,,[COLOR=Highlight]  •  [/COLOR]][/COLOR]$INFO[System.Time]</value>
        <value>$INFO[System.Time]</value>
    </variable>

    <variable name="ScanningLabel">
        <value condition="[Library.IsScanningVideo | Library.IsScanningMusic]">$LOCALIZE[13353]</value>
        <value condition="![Library.IsScanningVideo | Library.IsScanningMusic]">$LOCALIZE[653]</value>
    </variable>

    <variable name="TimerDetails">
        <value condition="String.IsEqual(ListItem.Comment,$LOCALIZE[13106])">[COLOR=Red]$INFO[ListItem.Comment]$INFO[ListItem.Date,  •  ][/COLOR]</value>
        <value>$INFO[ListItem.Comment]$INFO[ListItem.Date,  •  ]</value>
    </variable>

    <variable name="TVSearchStatus">
        <value condition="ListItem.IsRecording">$LOCALIZE[19043]</value>
        <value condition="ListItem.HasTimer">$LOCALIZE[31510]</value>
        <value condition="ListItem.HasReminder">$LOCALIZE[31511]</value>
    </variable>

    <variable name="ShelfSize">
        <value condition="Skin.HasSetting(Shelf.DoubleHeight)">20</value>
        <value condition="!Skin.HasSetting(Shelf.DoubleHeight)">20</value>
    </variable>

    <variable name="VisualisationName">
        <value condition="!String.IsEmpty(Visualisation.Name)">$INFO[Visualisation.Name]</value>
        <value  condition="String.IsEmpty(Visualisation.Name)">$LOCALIZE[16018]</value>
    </variable>


    <variable name="DialogFullScreenPlot">
        <value condition="Window.IsActive(custom_1123_pausedoverlay.xml) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
        <value condition="Window.IsActive(custom_1123_pausedoverlay.xml) + !String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
        <value condition="Control.HasFocus(601) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
        <value condition="Control.HasFocus(601) + !String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
        <value condition="Control.HasFocus(602) + !String.IsEmpty(VideoPlayer.NextPlot)">$INFO[VideoPlayer.NextPlot]</value>
        <value condition="Control.HasFocus(602) + !String.IsEmpty(VideoPlayer.NextPlotOutline)">$INFO[VideoPlayer.NextPlotOutline]</value>
        <value condition="Control.HasFocus(603)">$INFO[VideoPlayer.CastAndRole]</value>
        <value condition="Control.HasFocus(604)">$INFO[PVR.ActStreamClient,[B]$LOCALIZE[19012]:[/B] ][CR]$INFO[PVR.ActStreamSignal,[B]$LOCALIZE[19008]:[/B] ][CR]$INFO[PVR.ActStreamSNR,[B]$LOCALIZE[19009]:[/B] ]</value>
    </variable>

    <variable name="DialogFullScreenBtn601">
        <value condition="Videoplayer.Content(livetv)">$LOCALIZE[19030]</value>
        <value>$LOCALIZE[207]</value>
    </variable>

    <variable name="FullScreenTitle">
        <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
        <value condition="VideoPlayer.Content(livetv) + Control.HasFocus(601)" >$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ]</value>
        <value condition="VideoPlayer.Content(livetv) + Control.HasFocus(602)" >$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031]: ]</value>
        <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle,,[COLOR=Highlight]  •  [/COLOR]]$INFO[VideoPlayer.Season,$LOCALIZE[31973],.]$INFO[VideoPlayer.Episode,,[COLOR=Highlight]  •  [/COLOR]]$INFO[VideoPlayer.Title]</value>
        <value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist,, - ]$INFO[VideoPlayer.Album,, - ]$INFO[VideoPlayer.Title]</value>
        <value>$INFO[VideoPlayer.Title,[B],[/B]]</value>
    </variable>

    <variable name="VideoFullScreenPlot">
        <value condition="!String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
        <value condition="!String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
    </variable>

    <variable name="VideoTopHeading">
        <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Studio]</value>
        <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle]</value>
        <value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist] $INFO[VideoPlayer.Album, - ]</value>
        <value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelNumberLabel,[COLOR=Highlight],[/COLOR]] $INFO[VideoPlayer.ChannelName,  •  ,]$INFO[VideoPlayer.ChannelGroup,  •  (,)]</value>
    </variable>

    <variable name="VideoBottomHeading">
        <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Director,[COLOR=Highlight]$LOCALIZE[20339]:[/COLOR] ]</value>
        <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Season,[COLOR=Highlight]$LOCALIZE[20373]:[/COLOR] ]$INFO[VideoPlayer.Episode, • [COLOR=Highlight]$LOCALIZE[20359]:[/COLOR] ]</value>
        <value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.NextTitle,[COLOR=Highlight]$LOCALIZE[19031]:[/COLOR] ]</value>
    </variable>

    <variable name="PlaylistHeader" description="Header for MyPlaylist window">
        <value condition="Window.IsActive(videoplaylist)">$LOCALIZE[10522]</value>
        <value condition="Window.IsActive(musicplaylist)">$LOCALIZE[10517]</value>
    </variable>

    <variable name="SubtitleDialogTitle">
        <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
        <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle,[B],[/B] • ]$INFO[VideoPlayer.Season,$LOCALIZE[31954],x]$INFO[VideoPlayer.Episode,$LOCALIZE[31973], • ]$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
        <value>$INFO[VideoPlayer.Title,[B],[/B]]</value>
    </variable>

    <variable name="PVRChannelsOSDHeader" description="Header for PVRChannelsOSD dialog">
        <value condition="!pvr.IsPlayingRadio">$LOCALIZE[19023] • $INFO[VideoPlayer.ChannelGroup]</value>
        <value condition="pvr.IsPlayingRadio">$LOCALIZE[19024] • $INFO[MusicPlayer.ChannelGroup]</value>
    </variable>

    <variable name="VideoPlayerTitle">
        <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
        <value>$INFO[VideoPlayer.Title,[B],[/B]]</value>
    </variable>

    <variable name="MusicInfoHeader" description="Header for MusicInfo window">
        <value condition="Container.Content(Artists)">$LOCALIZE[21891]: [COLOR=White]$INFO[ListItem.Artist][/COLOR]</value>
        <value condition="Container.Content(Albums)">$LOCALIZE[10523]: [COLOR=White]$INFO[ListItem.Album][/COLOR]</value>
        <value condition="Container.Content(Songs)">$LOCALIZE[658]: [COLOR=White]$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title][/COLOR]</value>
    </variable>

    <variable name="PVRChannelManagerHeader" description="Header for PVRChannelManager window">
        <value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19023]</value>
        <value>$LOCALIZE[19199] - $LOCALIZE[19024]</value>
    </variable>

    <variable name="MasterModeLabel">
        <value condition="System.IsMaster">$LOCALIZE[12332]</value>
        <value>$LOCALIZE[12333]</value>
    </variable>

    <variable name="PVRLargeIcon">
        <value condition="ListItem.IsFolder">$INFO[Container(80).ListItem.Icon]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="MediaListLabel">
        <value condition="Listitem.IsParentFolder">..</value>
        <value condition="Container.Content(songs) + !Window.IsVisible(script.globalsearch.xml) + !Skin.HasSetting(Hide.Label2.Lists) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]$INFO[ListItem.Duration, • (,)]</value>
        <value condition="Container.Content(songs) + !Window.IsVisible(script.globalsearch.xml) + !Skin.HasSetting(Hide.Label2.Lists) + Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]$VAR[ItemDurationHrMins, • (,)]</value>
        <value condition="Container.Content(songs) + !Window.IsVisible(script.globalsearch.xml) + Skin.HasSetting(Hide.Label2.Lists) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]$INFO[ListItem.Duration, • (,)] $INFO[ListItem.Rating,, • ] $INFO[ListItem.UserRating,, • ]</value>
        <value condition="Container.Content(songs) + !Window.IsVisible(script.globalsearch.xml) + Skin.HasSetting(Hide.Label2.Lists) + Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]$VAR[ItemDurationHrMins, • (,)] $INFO[ListItem.Rating,, • ] $INFO[ListItem.UserRating,, • ]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>

    <variable name="MediaListLabel2">
        <value condition="Container.Content(albums) | Container.Content(songs)">$INFO[ListItem.artist]</value>
        <value>$INFO[ListItem.Label2]</value>
    </variable>


    <variable name="PosterLabel">
        <value condition="String.IsEqual(ListItem.DBType,season)">[B]$INFO[ListItem.Label][/B]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode)">[B]$LOCALIZE[31973] $INFO[ListItem.Season,,.]$INFO[ListItem.Episode][/B]</value>
        <value condition="String.IsEmpty(ListItem.DBType)">[B]$INFO[ListItem.Label][/B]</value>
    </variable>

    <variable name="EpisodeLabel">
        <value condition="String.IsEqual(ListItem.DBType,season)">[B]$INFO[ListItem.Label][/B]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode)">[B]$LOCALIZE[31973] $INFO[ListItem.Season,,.]$INFO[ListItem.Episode][/B]</value>
        <value condition="String.IsEmpty(ListItem.DBType)">[B]$INFO[ListItem.Label][/B]</value>
    </variable>

    <variable name="Overlay" description="Overlay image">
        <value condition="[Window.IsActive(1128) | Window.IsActive(DialogVideoInfo.xml)] + !String.IsEmpty(ListItem.DBID)">Library.png</value>
        <value condition="ListItem.IsRecording">img/PVR-IsRecording.png</value>
        <value condition="!Skin.HasSetting(Hide_InProgress_Marks) + !String.IsEmpty(ListItem.Overlay) + ListItem.IsResumable">OverlayInProgress.png</value>
        <value condition="Skin.HasSetting(Hide_InProgress_Marks) + !String.IsEmpty(ListItem.Overlay) + ListItem.IsResumable"></value>
        <value condition="!Skin.HasSetting(Hide_Watched_Marks) + !String.IsEmpty(ListItem.Overlay) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)">$INFO[ListItem.Overlay]</value>
        <value condition="!Skin.HasSetting(Hide_Unwatched_Marks) + !String.IsEmpty(ListItem.Overlay) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + [Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)]">OverlayUnwatched.png</value>
        <value condition="!Skin.HasSetting(Hide_Unwatched_Marks) + !String.IsEmpty(ListItem.Overlay) + String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)">$INFO[ListItem.Overlay]</value>
        <value></value>
    </variable>

    <variable name="AddonOverlay" description="Overlay image">
        <value condition="!String.IsEmpty(ListItem.AddonBroken)">QuitNF.png</value>
        <value condition="ListItem.Property(addon.orphaned)">icons/orphan.png</value>
        <value condition="ListItem.Property(addon.downloading)">OverlayInProgress.png</value>
        <value condition="ListItem.Property(addon.isinstalled) + !ListItem.Property(addon.isenabled)">QuitNF.png</value>
        <value condition="ListItem.Property(addon.hasupdate)">RestartNF.png</value>
        <value condition="ListItem.Property(addon.isinstalled)">OverlayWatched.png</value>
        <value condition="!ListItem.IsParentFolder">OverlayUnwatched.png</value>
    </variable>

    <variable name="Countries">
        <value condition="!String.IsEmpty(Skin.String(moviecountryiconsResource.path)) + String.IsEqual(Skin.String(moviecountryiconsResource.ext),.png)">$INFO[Skin.String(moviecountryiconsresource.path)]$INFO[ListItem.Label,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(moviecountryiconsResource.path)) + String.IsEqual(Skin.String(moviecountryiconsResource.ext),.jpg)">$INFO[Skin.String(moviecountryiconsresource.path)]$INFO[ListItem.Label,,.jpg]</value>
        <value>DefaultCountry.png</value>
    </variable>

    <variable name="Studios">
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),coloured)">resource://resource.images.studios.coloured/$INFO[Listitem.Label,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),white)">resource://resource.images.studios.white/$INFO[Listitem.Label,,.png]</value>
        <value>DefaultStudios.png</value>
    </variable>

    <variable name="MovieGenres">
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.IsEqual(Skin.String(moviegenreiconsResource.ext),.png)">$INFO[Skin.String(moviegenreiconsresource.path)]$INFO[ListItem.Label,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.IsEqual(Skin.String(moviegenreiconsResource.ext),.jpg)">$INFO[Skin.String(moviegenreiconsresource.path)]$INFO[ListItem.Label,,.jpg]</value>
        <value>DefaultGenre.png</value>
    </variable>

    <variable name="MovieGenresContainer">
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),arctic.zephyr)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[Listitem.Label,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),coloured)">resource://resource.images.moviegenreicons.coloured/$INFO[Listitem.Label,,.jpg]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),filmstrip)">resource://resource.images.moviegenreicons.filmstrip/$INFO[Listitem.Label,,.jpg]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),grey)">resource://resource.images.moviegenreicons.grey/$INFO[Listitem.Label,,.jpg]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),poster)">resource://resource.images.moviegenreicons.poster/$INFO[Listitem.Label,,.jpg]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),transparent)">resource://resource.images.moviegenreicons.transparent/$INFO[Listitem.Label,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),white)">resource://resource.images.moviegenreicons.white/$INFO[Listitem.Label,,.jpg]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),xzener-flat)">resource://resource.images.moviegenreicons.xzener-flat/$INFO[Listitem.Label,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(moviegenreiconsResource.path)) + String.Contains(Skin.String(moviegenreiconsResource.path),xzener-reflection)">resource://resource.images.moviegenreicons.xzener-reflection/$INFO[Listitem.Label,,.png]</value>
        <value>DefaultGenre.png</value>
    </variable>

    <variable name="MusicGenres">
        <value condition="!String.IsEmpty(Skin.String(musicgenreiconsResource.path)) + String.Contains(Skin.String(musicgenreiconsResource.path),grey)">resource://resource.images.musicgenreicons.grey/$INFO[Listitem.Label,,.jpg]</value>
        <value condition="!String.IsEmpty(Skin.String(musicgenreiconsResource.path)) + String.Contains(Skin.String(musicgenreiconsResource.path),poster)">resource://resource.images.musicgenreicons.poster/$INFO[Listitem.Label,,.jpg]</value>
        <value condition="!String.IsEmpty(Skin.String(musicgenreiconsResource.path)) + String.Contains(Skin.String(musicgenreiconsResource.path),text)">resource://resource.images.musicgenreicons.text/$INFO[Listitem.Label,,.jpg]</value>
        <value>DefaultMusicGenres.png</value>
    </variable>

    <variable name="WidgetArtVar">
        <value condition="String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow)">$VAR[Poster]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,season)">$VAR[SeasonPoster]</value>
        <value>$VAR[Square]</value>
    </variable>

    <variable name="HomeWidgetLabel">
        <value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.TVShowTitle,[B],[/B]] - $INFO[ListItem.Label,[B],[/B]]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.TVShowTitle,[B],[/B]] - $INFO[ListItem.Label,[B],[/B]]$INFO[ListItem.Premiered, (,)][COLOR=White]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]$INFO[ListItem.Rating, • ][/COLOR]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.TVShowTitle,[B],[/B]] - $INFO[ListItem.Label,[B],[/B]]$INFO[ListItem.Premiered, (,)][COLOR=White]$VAR[ItemDurationHrMins, • ,]$INFO[ListItem.Rating, • ][/COLOR]</value>
        <value condition="!String.IsEmpty(ListItem.Property(nextairedtvshowtitle))">$INFO[ListItem.Label]</value>
        <value condition="!String.IsEmpty(ListItem.Property(recommendedtvshowtitle))">$INFO[ListItem.Label]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Label3))">$INFO[ListItem.Label,[B],[/B]]$INFO[ListItem.Label2, • ,][COLOR=White]$INFO[ListItem.Property(Label3), • ][/COLOR]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Outlook))">$INFO[ListItem.Property(LongDay),[B],[/B]]$INFO[ListItem.Property(Time),[B],[/B]]$INFO[ListItem.Property(ShortDate), • [B],[/B]][COLOR=White]$INFO[ListItem.Property(Outlook), • ,][/COLOR]</value>
        <value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Label,[B],[/B]]$INFO[ListItem.Year, (,)][COLOR=White]$INFO[ListItem.Property(TotalEpisodes), • ,]$INFO[ListItem.Property(UnWatchedEpisodes), (,)]$INFO[ListItem.Rating, • ][/COLOR]</value>
        <value condition="!String.IsEmpty(ListItem.Artist) + !String.IsEmpty(ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Label,[B],[/B]][COLOR=White]$INFO[ListItem.Artist, • ,]$INFO[ListItem.Album, • ,]$INFO[ListItem.Year, • ,]$INFO[ListItem.Duration, • ,]$INFO[ListItem.Rating, • ][/COLOR]</value>
        <value condition="!String.IsEmpty(ListItem.Artist) + !String.IsEmpty(ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Label,[B],[/B]][COLOR=White]$INFO[ListItem.Artist, • ,]$INFO[ListItem.Album, • ,]$INFO[ListItem.Year, • ,]$VAR[ItemDurationHrMins, • ,]$INFO[ListItem.Rating, • ][/COLOR]</value>
        <value condition="!String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Label,[B],[/B]][COLOR=White]$INFO[ListItem.Artist, • ,]$INFO[ListItem.Year, • ,]$INFO[ListItem.Rating, • ][/COLOR]</value>
        <value condition="String.Contains(ListItem.Path,pvr://channels)">$INFO[ListItem.Label,[B],[/B]][COLOR=White]$INFO[ListItem.StartTime, • [B],[/B]]$INFO[ListItem.Title, ,]$INFO[ListItem.NextStartTime, • [B],[/B]]$INFO[ListItem.NextTitle, ,][/COLOR]</value>
        <value condition="String.Contains(ListItem.Path,pvr://recordings) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Label,[B],[/B]][COLOR=White]$INFO[ListItem.Date, • ,]$INFO[ListItem.Duration, • , $LOCALIZE[12391]][/COLOR]</value>
        <value condition="String.Contains(ListItem.Path,pvr://recordings) + Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Label,[B],[/B]][COLOR=White]$INFO[ListItem.Date, • ,]$VAR[ItemDurationHrMins, • ,][/COLOR]</value>
        <value condition="!Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Label,[B],[/B]]$INFO[ListItem.Year, (,)][COLOR=White]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]$INFO[ListItem.Rating, • ][/COLOR]</value>
        <value condition="Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Label,[B],[/B]]$INFO[ListItem.Year, (,)][COLOR=White]$VAR[ItemDurationHrMins, • ,]$INFO[ListItem.Rating, • ][/COLOR]</value>
    </variable>

    <variable name="WidgetItemLabel">
        <value condition="!String.IsEmpty(ListItem.Property(nextairedtvshowtitle)) | !String.IsEmpty(ListItem.Property(recommendedtvshowtitle))">$INFO[ListItem.Label2]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Label3))">$INFO[ListItem.Label] - $INFO[ListItem.Label2][CR]$INFO[ListItem.Property(Label3)]</value>
        <value condition="!String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Label][CR]$INFO[ListItem.Label2]</value>
        <value condition="String.Contains(ListItem.Path,pvr://channels) + !String.IsEmpty(ListItem.StartTime)">$INFO[ListItem.StartTime] $INFO[ListItem.Title][CR]$INFO[ListItem.NextStartTime] $INFO[ListItem.NextTitle]</value>
        <value condition="String.Contains(ListItem.Path,pvr://recordings) + !String.IsEmpty(ListItem.Date)">$INFO[ListItem.Label][CR]$INFO[ListItem.Date]</value>        
        <value>$INFO[ListItem.Label]</value>
    </variable>

    <variable name="ThumbType">
        <value condition="Container.Content(movies) | Container.Content(tvshows) | Container.Content(sets) | Container.Content(seasons)">$VAR[Poster]</value>
        <value condition="Container.Content(episodes)">$VAR[Episode]</value>
        <value>$VAR[Square]</value>
    </variable>

    <variable name="Fanart">
        <value condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + String.IsEmpty(ListItem.Art(thumb)) + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + String.IsEmpty(ListItem.Art(thumb)) + String.IsEmpty(ListItem.Icon)">DefaultEpisode.png</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart)) + !String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(FanArt))">$INFO[ListItem.Property(FanArt)]</value>
        <value condition="[String.IsEqual(ListItem.DBType,genre) | Container.Content(years) | Container.Content(tags) | Container.Content(actors) | Container.Content(directors)]">$VAR[Square]</value>
        <value condition="Container.Content(studios)">$VAR[Studios]</value>
        <value condition="Container.Content(countries)">$VAR[Countries]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>	

    <variable name="Banner" description="TV Banners">
        <value condition="ListItem.IsParentFolder">DefaultBannerBack.png</value>
        <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>DefaultBanner.png</value>
    </variable>

    <variable name="Poster" description="Poster">
        <value condition="ListItem.IsParentFolder">DefaultPosterBack.png</value>
        <value condition="ListItem.IsFolder + String.IsEmpty(ListItem.Thumb) + String.IsEmpty(ListItem.Icon)">DefaultFolder.png</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + String.IsEmpty(ListItem.Art(season.poster)) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="String.IsEqual(ListItem.DBType,season) + String.IsEmpty(ListItem.Art(poster)) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Property(TVShowID)) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Property(TVShowID)) + String.IsEmpty(ListItem.Art(season.poster)) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value>DefaultPoster.png</value>
    </variable>

    <variable name="SeasonPoster" description="Season Poster">
        <value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
    </variable>

    <variable name="Square" description="Square">
        <value condition="ListItem.IsParentFolder">DefaultSquareBack.png</value>
        <value condition="Container.content(studios) | String.IsEqual(ListItem.DBType,studio)">$VAR[Studios]</value>
        <value condition="Container.content(countries) | String.IsEqual(ListItem.DBType,country)">$VAR[Countries]</value>
        <value condition="Container.content(years)">DefaultYear.png</value>
        <value condition="Container.content(directors) | String.IsEqual(ListItem.DBType,director)">DefaultDirector.png</value>
        <value condition="Container.content(genres) | String.IsEqual(ListItem.DBType,genre)">$VAR[MovieGenres]</value>
        <value condition="Container.content(tags) | String.IsEqual(ListItem.DBType,tag)">DefaultTags.png</value>
        <value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.thumb]</value>
        <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>        
        <value condition="String.IsEqual(ListItem.DBType,actor) + String.IsEmpty(ListItem.Thumb) + String.IsEmpty(ListItem.Icon)">DefaultActor.png</value>
        <value>DefaultSquare.png</value>
    </variable>

    <variable name="Episode" description="Episode">
        <value condition="ListItem.IsParentFolder">DefaultEpisodeBack.png</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value>DefaultEpisode.png</value>
    </variable>

    <variable name="WeatherIconPath">
        <value condition="!String.IsEmpty(Skin.String(WeatherIconsResource.path))">$INFO[Skin.String(WeatherIconsResource.path)]</value>
        <value>resource://resource.images.weathericons.default/</value>
    </variable>

    <variable name="WeatherIconExt">
        <value condition="String.Contains(Skin.String(weatherIconsResource.path),animated)" />
        <value condition="!String.IsEmpty(Skin.String(WeatherIconsResource.ext))">$INFO[Skin.String(WeatherIconsResource.ext)]</value>
        <value>.png</value>
    </variable>

    <variable name="WeatherBackgroundExt">
        <value condition="Skin.HasSetting(weatherfanartResource.multi)">/</value>
        <value condition="!String.IsEmpty(Skin.String(weatherfanartResource.ext))">$INFO[Skin.String(weatherfanartResource.ext)]</value>
        <value>.jpg</value>
    </variable>

    <variable name="LibraryStats">
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),movies)">$LOCALIZE[20342]: $INFO[Window(Home).Property(Movies.Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16102]: $INFO[Window(Home).Property(Movies.Watched)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16101]: $INFO[Window(Home).Property(Movies.UnWatched)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),tvshows)">$LOCALIZE[20343]: $INFO[Window(Home).Property(TVShows.Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[20360]: $INFO[Window(Home).Property(Episodes.Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16101]: $INFO[Window(Home).Property(Episodes.UnWatched)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),music)">$LOCALIZE[133]: $INFO[Window(Home).Property(Music.ArtistsCount)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[132]: $INFO[Window(Home).Property(Music.AlbumsCount)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[134]: $INFO[Window(Home).Property(Music.SongsCount)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),musicvideos)">$LOCALIZE[20389]: $INFO[Window(Home).Property(MusicVideos.Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16102]: $INFO[Window(Home).Property(MusicVideos.Watched)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16101]: $INFO[Window(Home).Property(MusicVideos.UnWatched)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),videos)">$LOCALIZE[20342]: $INFO[Window(Home).Property(Movies.Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[20343]: $INFO[Window(Home).Property(TVShows.Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[20389]: $INFO[Window(Home).Property(MusicVideos.Count)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),moviestvshows)">$LOCALIZE[20342]: $INFO[Window(Home).Property(Movies.Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[20343]: $INFO[Window(Home).Property(TVShows.Count)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),sets)">$LOCALIZE[20434]: $INFO[Window(Home).Property(SkinHelper.TotalMovieSets)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[20342]: $INFO[Window(Home).Property(SkinHelper.TotalMoviesInSets)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),tv) + Pvr.IsRecordingTV">$LOCALIZE[19043]: $INFO[Pvr.TVNowRecordingTitle]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),tv) + Pvr.HasNonRecordingTVTimer">$LOCALIZE[209]: $INFO[Pvr.TVNextRecordingTitle][COLOR=Highlight]  •  [/COLOR]]$INFO[Pvr.TVNextRecordingDateTime]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),tv)">$LOCALIZE[19023]: $INFO[Window(Home).Property(SkinHelper.TotalTVChannels)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[19017]: $INFO[PVR.BackendRecordings]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),radio) + Pvr.IsRecordingRadio">$LOCALIZE[19043]: $INFO[Pvr.RadioNowRecordingTitle]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),radio) + Pvr.HasNonRecordingRadioTimer">$LOCALIZE[209]: $INFO[Pvr.RadioNextRecordingTitle][COLOR=Highlight]  •  [/COLOR]$INFO[Pvr.RadioNextRecordingDateTime]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),radio)">$LOCALIZE[19024]: $INFO[Window(Home).Property(SkinHelper.TotalRadioChannels)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),pvr) + PVR.IsRecording">$LOCALIZE[19043]: $INFO[Pvr.NowRecordingTitle]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),pvr) + PVR.HasNonRecordingTimer">$LOCALIZE[209]: $INFO[Pvr.NextRecordingTitle][COLOR=Highlight]  •  [/COLOR]$INFO[Pvr.NextRecordingDateTime]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),pvr)">$LOCALIZE[31409]: $INFO[Pvr.BackendChannels] $LOCALIZE[14301]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),weather)">$INFO[Weather.Location]  $INFO[Weather.Conditions]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),addons)">$LOCALIZE[24001]: $INFO[Window(Home).Property(SkinHelper.TotalAddons)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),videoaddons)">$LOCALIZE[1037]: $INFO[Window(Home).Property(SkinHelper.TotalVideoAddons)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),musicaddons)">$LOCALIZE[1038]: $INFO[Window(Home).Property(SkinHelper.TotalAudioAddons)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),videomusicaddons)">$LOCALIZE[1037]: $INFO[Window(Home).Property(SkinHelper.TotalVideoAddons)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[1038]: $INFO[Window(Home).Property(SkinHelper.TotalAudioAddons)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),programaddons)">$LOCALIZE[1043]: $INFO[Window(Home).Property(SkinHelper.TotalProgramAddons)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),pictureaddons)">$LOCALIZE[1039]: $INFO[Window(Home).Property(SkinHelper.TotalPicturesAddons)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),favourites)">$LOCALIZE[1036]: $INFO[Window(Home).Property(SkinHelper.TotalFavourites)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),disc) + System.HasMediadvd">$LOCALIZE[427]: $INFO[System.DVDLabel]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),disc) + !System.HasMediadvd">$LOCALIZE[427]: $LOCALIZE[504]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),systeminfo)">$LOCALIZE[31415]: $INFO[System.memory(used.percent)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[31416]: $INFO[System.CPUUsage]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),movieplaylist)">$LOCALIZE[20342]: $INFO[Window(Home).Property(PlaylistStats_Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16102]: $INFO[Window(Home).Property(PlaylistStats_Watched)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistStats_Unwatched)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[575]: $INFO[Window(Home).Property(PlaylistStats_InProgress)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),tvshowplaylist)">$LOCALIZE[20343]: $INFO[Window(Home).Property(PlaylistStats_TVShowCount)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),musicvideoplaylist)">$LOCALIZE[20389]: $INFO[Window(Home).Property(PlaylistStats_Count)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16102]: $INFO[Window(Home).Property(PlaylistStats_Watched)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistStats_Unwatched)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[575]: $INFO[Window(Home).Property(PlaylistStats_InProgress)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(InfoLine),episodeplaylist)">$LOCALIZE[20343]: $INFO[Window(Home).Property(PlaylistStats_TVShowCount)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[20360]: $INFO[Window(Home).Property(PlaylistStats_Episodes)][COLOR=Highlight]  •  [/COLOR]$LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistStats_UnwatchedEpisodes)]</value>
        <value></value>
    </variable>

    <variable name="InfoLineLabel">
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),movies)">$LOCALIZE[31405]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),tvshows)">$LOCALIZE[31406]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),music)">$LOCALIZE[31407]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),musicvideos)">$LOCALIZE[31408]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),videos)">$LOCALIZE[3]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),moviestvshows)">$LOCALIZE[31413]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),sets)">$LOCALIZE[20434]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),tv)">$LOCALIZE[19020]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),radio)">$LOCALIZE[19021]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),pvr)">$LOCALIZE[31409]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),weather)">$LOCALIZE[8]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),addons)">$LOCALIZE[24001]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),videoaddons)">$LOCALIZE[1037]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),musicaddons)">$LOCALIZE[1038]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),videomusicaddons)">$LOCALIZE[31414]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),programaddons)">$LOCALIZE[1043]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),pictureaddons)">$LOCALIZE[1039]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),favourites)">$LOCALIZE[1036]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),disc)">$LOCALIZE[427]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),systeminfo)">$LOCALIZE[130]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),movieplaylist)">$LOCALIZE[31410]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),tvshowplaylist)">$LOCALIZE[31411]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),musicvideoplaylist)">$LOCALIZE[31412]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(InfoLine),episodeplaylist)">$LOCALIZE[31418]</value>
        <value>$LOCALIZE[231]</value>
    </variable>

    <variable name="TopBarMedia">
        <value condition="Player.HasAudio">$INFO[MusicPlayer.Artist,,[COLOR=Highlight]  •  [/COLOR]]$INFO[MusicPlayer.Title,,[COLOR=Highlight]  •  [/COLOR]][COLOR=Grey3]$INFO[MusicPlayer.TimeSpeed]$INFO[MusicPlayer.Duration, / ][/COLOR]</value>
        <value condition="Player.HasVideo + !VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title,,[COLOR=Highlight]  •  [/COLOR]][COLOR=Grey3]$INFO[VideoPlayer.Time]$INFO[VideoPlayer.Duration, / ][/COLOR]</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title,,[COLOR=Highlight]  •  [/COLOR][COLOR=Grey3]]$INFO[VideoPlayer.ChannelName,,[COLOR=Highlight]  •  [/COLOR][COLOR=Grey3]]$INFO[VideoPlayer.Time]$INFO[VideoPlayer.Duration, / ][/COLOR]</value>
    </variable>

    <variable name="TopBarMediaIcon">
        <value condition="!Player.Paused">OSD/OSDPlayNF.png</value>
        <value>OSD/OSDPauseNF.png</value>
    </variable>

    <variable name="GlobalHeadings" description="Global Headings">
        <value condition="Window.IsActive(DialogFavourites.xml)">$LOCALIZE[1036]</value>
        <value condition="Window.IsActive(Settings.xml) | Window.IsActive(SettingsCategory.xml)">$LOCALIZE[5] / $LOCALIZE[31022]</value>
        <value condition="Window.IsActive(SkinSettings.xml)">$LOCALIZE[5] / Amber</value>
        <value condition="Window.IsActive(AddonBrowser.xml) + String.IsEmpty(Container.FolderName)">$LOCALIZE[31291]</value>
        <value condition="Window.IsActive(MyVideoNav.xml) + Container.Content(episodes)">$INFO[Container.ShowTitle]$INFO[Container.FolderName,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems,[COLOR=Highlight]  •  [/COLOR]]</value>
        <value condition="Window.IsActive(MyVideoPlaylist.xml)">$LOCALIZE[20012]</value>
        <value condition="Window.IsActive(MyMusicPlaylist.xml)">$LOCALIZE[20011]</value>
        <value condition="Window.IsActive(DialogVideoInfo.xml)">$LOCALIZE[20159]</value>
        <value condition="Container.content(movies) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20342][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>
        <value condition="Container.content(tvshows) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20343][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>
        <value condition="Container.content(musicvideos) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20389][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>

        <value condition="Window.IsActive(TVChannels)">$LOCALIZE[19020] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
        <value condition="Window.IsActive(RadioChannels)">$LOCALIZE[19021] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
        <value condition="Window.IsActive(TVGuide)">$LOCALIZE[19020] / $LOCALIZE[19069] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
        <value condition="Window.IsActive(RadioGuide)">$LOCALIZE[19021] / $LOCALIZE[19069] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
        <value condition="Window.IsActive(TVRecordings)">$LOCALIZE[19020] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
        <value condition="Window.IsActive(RadioRecordings)">$LOCALIZE[19021] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
        <value condition="Window.IsActive(TVTimers)">$LOCALIZE[19020] / $LOCALIZE[19040]</value>
        <value condition="Window.IsActive(RadioTimers)">$LOCALIZE[19021] / $LOCALIZE[19040]</value>
        <value condition="Window.IsActive(TVTimerRules)">$LOCALIZE[19020] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
        <value condition="Window.IsActive(RadioTimerRules)">$LOCALIZE[19021] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
        <value condition="Window.IsActive(TVSearch)">$LOCALIZE[19020] / $LOCALIZE[137]</value>
        <value condition="Window.IsActive(RadioSearch)">$LOCALIZE[19021] / $LOCALIZE[137]</value>

        <value condition="!String.IsEmpty(Container.FolderName) + String.IsEmpty(Container.PluginCategory)">$INFO[Container.FolderName,,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems]</value>
        <value condition="!String.IsEmpty(Container.FolderName) + !String.IsEmpty(Container.PluginCategory)">$INFO[Container.PluginCategory,,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide2.xml) | Window.IsActive(script-NextAired-TVGuide.xml)]">$INFO[System.AddonTitle(script.tv.show.next.aired)]</value>
        <value condition="Window.IsActive(script-globalsearch.xml)">$INFO[System.AddonTitle(script.globalsearch)] - $LOCALIZE[32014][COLOR=Highlight]$INFO[Window.Property(GlobalSearch.SearchString)][/COLOR]</value>
        <value condition="Window.IsActive(1122)">$LOCALIZE[32014][COLOR=Highlight]$INFO[Skin.String(CustomSearchTerm)][/COLOR]</value>
        <value condition="Window.IsActive(1131) + String.IsEqual(Window(Home).Property(SingleSearchType),Online)">$LOCALIZE[32111]</value>
        <value condition="Window.IsActive(1131) + !String.IsEqual(Window(Home).Property(SingleSearchType),Online)">$LOCALIZE[32112]</value>
    </variable>

    <variable name="CurrentBackgroundSetting">
        <value condition="!String.IsEmpty(Container(9103).ListItem.Thumb)">$INFO[Container(9103).ListItem.Thumb]</value>
        <value>$LOCALIZE[571]</value>
    </variable>

    <variable name="MusicPlayingFanartLabel2" description="Label2 for music playing FA">
        <value condition="Skin.HasSetting(MusicPlayingFanart)">$LOCALIZE[449]</value>
        <value>$LOCALIZE[13113]</value>
    </variable>

    <variable name="MusicRepeat" description="Image to display in MusicOSD">
        <value condition="Playlist.IsRepeatOne">OSD/OSDRepeatOneNF.png</value>
        <value condition="Playlist.IsRepeat">OSD/OSDRepeatAllNF.png</value>
        <value condition="![Playlist.IsRepeatOne | Playlist.IsRepeat]">OSD/OSDRepeatNF.png</value>
    </variable>

    <variable name="PVROverlay" description="PVR Overlay image">
        <value condition="ListItem.IsRecording">img/PVR-IsRecording.png</value>
        <value condition="ListItem.HasTimer | ListItem.HasTimerSchedule">img/PVR-HasTimer.png</value>
        <value condition="ListItem.HasArchive | ListItem.IsPlayable">windows/pvr/PVR-HasArchive.png</value>        
    </variable>

    <variable name="ListItem.ratingbadge">
        <value condition="!String.IsEmpty(ListItem.UserRating)">$INFO[ListItem.UserRating,badges/ratings/rating,.png]</value>
        <value condition="String.IsEmpty(ListItem.UserRating) + !String.IsEmpty(ListItem.dbtype)">badges/ratings/ratingNR.png</value>
    </variable>

    <variable name="VideoPlayer.ratingbadge">
        <value condition="!String.IsEmpty(VideoPlayer.UserRating)">$INFO[VideoPlayer.UserRating,badges/ratings/rating,.png]</value>
    </variable>

    <variable name="VideoHWDecoder">
        <value condition="Player.Process(videohwdecoder)">HW</value>
        <value>SW</value>
    </variable>

    <variable name="panelheading">
        <value condition="Window.IsActive(script-embuary-video.xml)">$INFO[Container(10051).ListItem.Title,[B],[/B] ]$INFO[Container(10051).ListItem.Year,(,)]</value>
        <value condition="ListItem.IsParentFolder">..</value>
        <value condition="String.IsEqual(ListItem.DBType,set) + !String.IsEqual(Container.ViewMode,biglist)">$INFO[Listitem.Title,[B],[/B]]</value>
        <value condition="String.IsEqual(ListItem.DBType,set) + String.IsEqual(Container.ViewMode,biglist)">$INFO[Listitem.Title,,]</value>
        <value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEqual(Container.ViewMode,biglist)">$INFO[Listitem.Title,[B],[/B] ]$INFO[ListItem.Year,(,)]</value>
        <value condition="String.IsEqual(ListItem.DBType,movie) + String.IsEqual(Container.ViewMode,biglist)">$INFO[Listitem.Title,, ]$INFO[ListItem.Year,(,)]</value>
        <value condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(Container.ViewMode,biglist)">$INFO[Listitem.Title,[B],[/B] ]$INFO[ListItem.Year,(,)]</value>
        <value condition="String.IsEqual(ListItem.DBType,tvshow) + String.IsEqual(Container.ViewMode,biglist)">$INFO[Listitem.Title,, ]$INFO[ListItem.Year,(,)]</value>
        <value condition="String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
        <value condition="String.IsEqual(ListItem.DBType,msicvideo)">$INFO[Listitem.Label,[B],[/B] ]$INFO[ListItem.Year,(,)]</value>
        <value condition="String.IsEqual(ListItem.DBType,album) + [Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)]">$INFO[ListItem.Artist,, • ]$INFO[ListItem.Label]</value>
        <value condition="[String.IsEqual(ListItem.DBType,episode) + Window.IsActive(DialogVideoInfo.xml) + Skin.HasSetting(Show.SeasonEpisodeInfo) + !String.IsEmpty(ListItem.Art(tvshow.banner))]">$VAR[SeasonEpisodeLabel] • $INFO[ListItem.Title]</value>
        <value condition="[String.IsEqual(ListItem.DBType,episode) + Window.IsActive(DialogVideoInfo.xml) + Skin.HasSetting(Show.SeasonEpisodeInfo) + String.IsEmpty(ListItem.Art(tvshow.banner))]">[B]$INFO[ListItem.TVshowTitle][/B] • $VAR[SeasonEpisodeLabel] • $INFO[ListItem.Title]</value>
        <value condition="[String.IsEqual(ListItem.DBType,episode) + Window.IsActive(DialogVideoInfo.xml) + !Skin.HasSetting(Show.SeasonEpisodeInfo) + !String.IsEmpty(ListItem.Art(tvshow.banner))]">$INFO[ListItem.Title]</value>
        <value condition="[String.IsEqual(ListItem.DBType,episode) + Window.IsActive(DialogVideoInfo.xml) + !Skin.HasSetting(Show.SeasonEpisodeInfo) + String.IsEmpty(ListItem.Art(tvshow.banner))]">[B]$INFO[ListItem.TVshowTitle][/B] • $INFO[ListItem.Title]</value>
        <value condition="[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,season)] + [Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122) | Window.IsActive(1131)]">$INFO[ListItem.TVShowTitle,, • ]$INFO[ListItem.Label]</value>
        <value condition="Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRTimers.xml)">$INFO[Listitem.Title]</value>
        <value condition="Window.IsActive(MyPVRRecordings.xml) + ListItem.IsFolder + Integer.IsGreater(Container(80).NumItems,0)">$INFO[ListItem.label] $INFO[Container(80).NumItems,[B](,)[/B]]</value>
        <value condition="Window.IsActive(script-embuary-video.xml)">$INFO[Container(10051).ListItem.Label,[B],[/B] ]$INFO[Container(10051).ListItem.Year,(,)]</value>
        <value>$INFO[Listitem.label]</value>
    </variable>

    <variable name="panelsubheading">
        <value condition="[String.IsEqual(ListItem.DBType,movie) + !Skin.HasSetting(Hide.Label2.Lists)]">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,movie) + Skin.HasSetting(Hide.Label2.Lists) + !Integer.IsGreater(ListItem.PlayCount,0) + !Skin.HasSetting(Enable.HourMinutes)]">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]$INFO[ListItem.DateAdded, • $LOCALIZE[32021] ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,movie) + Skin.HasSetting(Hide.Label2.Lists) + !Integer.IsGreater(ListItem.PlayCount,0) + Skin.HasSetting(Enable.HourMinutes)]">$VAR[ItemDurationHrMins,,]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]$INFO[ListItem.DateAdded, • $LOCALIZE[32021] ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,movie) + Skin.HasSetting(Hide.Label2.Lists) + Integer.IsGreater(ListItem.PlayCount,0) + !Skin.HasSetting(Enable.HourMinutes)]">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]$INFO[ListItem.DateAdded, • $LOCALIZE[32021] ]$INFO[ListItem.PlayCount, • $LOCALIZE[32022] ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,movie) + Skin.HasSetting(Hide.Label2.Lists) + Integer.IsGreater(ListItem.PlayCount,0) + Skin.HasSetting(Enable.HourMinutes)]">$VAR[ItemDurationHrMins,,]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]$INFO[ListItem.DateAdded, • $LOCALIZE[32021] ]$INFO[ListItem.PlayCount, • $LOCALIZE[32022] ]</value>
        <value condition="String.IsEqual(ListItem.DBType,set)">$LOCALIZE[20457]</value>
        <value condition="String.IsEqual(ListItem.DBType,video)">$INFO[ListItem.Label2,$LOCALIZE[180]: ]</value>
        <value condition="String.IsEqual(ListItem.DBType,season) | [String.IsEqual(ListItem.DBType,tvshow) + !Skin.HasSetting(Hide.Label2.Lists) + !Skin.HasSetting(Enable.HourMinutes)]">$INFO[ListItem.Duration,, • ]$INFO[ListItem.Property(TotalEpisodes), $LOCALIZE[20360] , • ]$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[16101] ]</value>
        <value condition="String.IsEqual(ListItem.DBType,season) | [String.IsEqual(ListItem.DBType,tvshow) + !Skin.HasSetting(Hide.Label2.Lists) + Skin.HasSetting(Enable.HourMinutes)]">$VAR[ItemDurationHrMins,, • ]$INFO[ListItem.Property(TotalEpisodes), $LOCALIZE[20360] , • ]$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[16101] ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,tvshow)] + Skin.HasSetting(Hide.Label2.Lists) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Duration,, • ]$INFO[ListItem.Property(TotalEpisodes), $LOCALIZE[20360] , • ]$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[16101] ]$INFO[ListItem.DateAdded, • $LOCALIZE[32021] ]$INFO[ListItem.LastPlayed, • $LOCALIZE[32023] ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,tvshow)] + Skin.HasSetting(Hide.Label2.Lists) + Skin.HasSetting(Enable.HourMinutes)">$VAR[ItemDurationHrMins,, • ]$INFO[ListItem.Property(TotalEpisodes), $LOCALIZE[20360] , • ]$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[16101] ]$INFO[ListItem.DateAdded, • $LOCALIZE[32021] ]$INFO[ListItem.LastPlayed, • $LOCALIZE[32023] ]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + [[!Skin.HasSetting(Hide.Label2.Lists)] | [Skin.HasSetting(Hide.Label2.Lists) + !Integer.IsGreater(ListItem.PlayCount,0)]] + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.Premiered, • ]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + [[!Skin.HasSetting(Hide.Label2.Lists)] | [Skin.HasSetting(Hide.Label2.Lists) + !Integer.IsGreater(ListItem.PlayCount,0)]] + Skin.HasSetting(Enable.HourMinutes)">$VAR[ItemDurationHrMins,,]$INFO[ListItem.Premiered, • ]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(Hide.Label2.Lists) + Integer.IsGreater(ListItem.PlayCount,0) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.Premiered, • ]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]$INFO[ListItem.PlayCount, • $LOCALIZE[32022] ]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(Hide.Label2.Lists) + Integer.IsGreater(ListItem.PlayCount,0) + Skin.HasSetting(Enable.HourMinutes)">$VAR[ItemDurationHrMins,,]$INFO[ListItem.Premiered, • ]$INFO[ListItem.RatingAndVotes, • ]$INFO[ListItem.MPAA, • ]$INFO[ListItem.PlayCount, • $LOCALIZE[32022] ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,album) + ![Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)]] + [Skin.HasSetting(Hide.Label2.Lists) + String.Contains(Container.SortMethod,Date)]">$INFO[Listitem.AlbumArtist]$INFO[ListItem.RatingAndVotes, • ]  $INFO[ListItem.Label2,$LOCALIZE[32021]  ] $INFO[ListItem.PlayCount,$LOCALIZE[32022] ] $INFO[ListItem.LastPlayed,$LOCALIZE[32023] ]</value>
        <value condition="[String.IsEqual(ListItem.DBType,album) + ![Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)]] + [Skin.HasSetting(Hide.Label2.Lists) + !String.Contains(Container.SortMethod,Date)]">$INFO[Listitem.AlbumArtist]$INFO[ListItem.RatingAndVotes, • ]  $INFO[ListItem.PlayCount,$LOCALIZE[32022] ] $INFO[ListItem.LastPlayed,$LOCALIZE[32023] ]</value>
        <value condition="String.IsEqual(ListItem.DBType,album) + ![Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + !Skin.HasSetting(Hide.Label2.Lists)">$INFO[Listitem.AlbumArtist]</value>
        <value condition="String.IsEqual(ListItem.DBType,album) + [Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)]">$INFO[Listitem.Genre,, • ]$INFO[Listitem.Year]</value>
        <value condition="String.IsEqual(ListItem.DBType,song) + ![Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + !Skin.HasSetting(Enable.HourMinutes)">$INFO[Listitem.Artist,, • ]$INFO[Listitem.Duration]</value>
        <value condition="String.IsEqual(ListItem.DBType,song) + ![Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + Skin.HasSetting(Enable.HourMinutes)">$INFO[Listitem.Artist,, • ]$VAR[ItemDurationHrMins]</value>
        <value condition="String.IsEqual(ListItem.DBType,song) + [Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + !Skin.HasSetting(Enable.HourMinutes)">$INFO[Listitem.Artist,, • ]$INFO[Listitem.Album,, • ]$INFO[Listitem.Duration]</value>
        <value condition="String.IsEqual(ListItem.DBType,song) + [Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + Skin.HasSetting(Enable.HourMinutes)">$INFO[Listitem.Artist,, • ]$INFO[Listitem.Album,, • ]$VAR[ItemDurationHrMins]</value>
        <value condition="String.IsEqual(ListItem.DBType,artist) + !Skin.HasSetting(Hide.Label2.Lists)">$INFO[Listitem.Property(Artist_Born),[COLOR=Silver]$LOCALIZE[21893]: [/COLOR]] $INFO[Listitem.Property(Artist_Formed),[COLOR=Silver]$LOCALIZE[21894]: [/COLOR]]</value>
        <value condition="String.IsEqual(ListItem.DBType,artist) + Skin.HasSetting(Hide.Label2.Lists)">$INFO[Listitem.Property(Artist_Born),[COLOR=Silver]$LOCALIZE[21893]: [/COLOR]]  $INFO[Listitem.Property(Artist_Formed),[COLOR=Silver]$LOCALIZE[21894]: [/COLOR]] $INFO[ListItem.Label2, [COLOR=Silver]$LOCALIZE[32021] [/COLOR]]</value>
        <value condition="Container.Content(images) + !ListItem.IsFolder">$INFO[Listitem.Size]$INFO[ListItem.PictureDateTime, • ,]</value>
        <value condition="Window.IsActive(MyPVRChannels.xml)">[COLOR=Grey3]$LOCALIZE[142] [/COLOR]$INFO[ListItem.StartTime,, / ]$INFO[ListItem.EndTime] </value>
        <value condition="Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml)">$INFO[ListItem.Date] $INFO[ListItem.ChannelName,  •  ]</value>
        <value condition="Window.IsActive(MyPVRRecordings.xml) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Duration,[COLOR=Grey3] [/COLOR]]</value>
        <value condition="Window.IsActive(MyPVRRecordings.xml) + Skin.HasSetting(Enable.HourMinutes)">$VAR[ItemDurationHrMins,[COLOR=Grey3] [/COLOR]]</value>
        <value condition="String.IsEqual(ListItem.DBType,musicvideo) + [Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + !Skin.HasSetting(Enable.HourMinutes)">$INFO[Listitem.Artist,, • ]$INFO[Listitem.Year,, • ]$INFO[Listitem.Duration]</value>
        <value condition="String.IsEqual(ListItem.DBType,musicvideo) + [Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + Skin.HasSetting(Enable.HourMinutes)">$INFO[Listitem.Artist,, • ]$INFO[Listitem.Year,, • ]$VAR[ItemDurationHrMins]</value>
        <value condition="String.IsEqual(ListItem.DBType,musicvideo) + ![Window.IsActive(script-globalsearch.xml) | Window.IsActive(1122)] + Skin.HasSetting(Hide.Label2.Lists)">[CR]$INFO[Listitem.Title]$INFO[ListItem.MPAA, • ]$INFO[ListItem.DateAdded, • $LOCALIZE[32021] ]$INFO[ListItem.PlayCount, • $LOCALIZE[32022] ]</value>
        <value>$INFO[Listitem.Title]</value>
    </variable>

    <variable name="panelsubheading2">
        <value condition="Container.Content(Seasons) | Container.Content(TVShows)">$LOCALIZE[32009]: $INFO[Window(Home).Property(NextAired.NextNumber)] - $INFO[Window(Home).Property(NextAired.NextTitle)] - $INFO[Window(Home).Property(NextAired.NextDate)]</value>
    </variable>


    <variable name="Plots" description="Plots and descriptions">
        <value condition="Window.IsActive(script-embuary-video.xml)">$INFO[Container(10051).ListItem.Plot]</value>
        <value condition="ListItem.IsParentFolder"> </value>
        <value condition="Window.IsVisible(MyPVRRecordings.xml) + Control.IsVisible(80)"> </value>
        <value condition="Container.content(addons) + !String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>

        <value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(Container.ShowPlot)">$INFO[Container.ShowPlot]</value>

        <value condition="String.IsEqual(ListItem.DbType,song) + !String.IsEmpty(ListItem.ContributorAndRole)">$INFO[ListItem.ContributorAndRole]</value>
        <value condition="String.IsEqual(ListItem.DbType,song) + !String.IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
        <value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="String.IsEqual(ListItem.DBType,artist) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>

        <value condition="Window.IsActive(MyPVRTimers.xml)">$INFO[ListItem.Comment][CR]$INFO[ListItem.Date]</value>

        <value condition="[Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRRecordings.xml)] + !String.IsEmpty(ListItem.Plot) + !String.IsEqual(ListItem.EpisodeName,ListItem.Plot)">$INFO[ListItem.EpisodeName,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
        <value condition="Container.Content(images) + !ListItem.IsParentFolder + ListItem.IsFolder">$LOCALIZE[19055]</value>
        <value condition="Container.Content(images)">$INFO[ListItem.PictureDatetime,[B][COLOR=Silver]$LOCALIZE[21820]: [/COLOR][/B] ,[CR]]$INFO[ListItem.PictureResolution,[B][COLOR=Silver]$LOCALIZE[21805]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureAperture,[B][COLOR=Silver]$LOCALIZE[21826]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureAuthor,[B][COLOR=Silver]$LOCALIZE[21863]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureByline,[B][COLOR=Silver]$LOCALIZE[21867]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureBylineTitle,[B][COLOR=Silver]$LOCALIZE[21868]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCamMake,[B][COLOR=Silver]$LOCALIZE[21822]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCamModel,[B][COLOR=Silver]$LOCALIZE[21823]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCaption,[B][COLOR=Silver]$LOCALIZE[21862]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCategory,[B][COLOR=Silver]$LOCALIZE[21866]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCCDWidth,[B][COLOR=Silver]$LOCALIZE[21839]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCopyrightNotice,[B][COLOR=Silver]$LOCALIZE[21871]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCountry,[B][COLOR=Silver]$LOCALIZE[21875]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCountryCode,[B][COLOR=Silver]$LOCALIZE[21879]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureCredit,[B][COLOR=Silver]$LOCALIZE[21869]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureDesc,[B][COLOR=Silver]$LOCALIZE[21821]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureDigitalZoom,[B][COLOR=Silver]$LOCALIZE[21838]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureExpMode,[B][COLOR=Silver]$LOCALIZE[21832]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureExposure,[B][COLOR=Silver]$LOCALIZE[21829]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureExposureBias,[B][COLOR=Silver]$LOCALIZE[21831]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureExpTime,[B][COLOR=Silver]$LOCALIZE[21830]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureFlashUsed,[B][COLOR=Silver]$LOCALIZE[21833]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureFocalLen,[B][COLOR=Silver]$LOCALIZE[21827]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureFocusDist,[B][COLOR=Silver]$LOCALIZE[21828]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureGPSLat,[B][COLOR=Silver]$LOCALIZE[21840]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureGPSLon,[B][COLOR=Silver]$LOCALIZE[21841]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureGPSAlt,[B][COLOR=Silver]$LOCALIZE[21842]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureHeadline,[B][COLOR=Silver]$LOCALIZE[21864]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureImageType,[B][COLOR=Silver]$LOCALIZE[21858]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureISO,[B][COLOR=Silver]$LOCALIZE[21837]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureKeywords,[B][COLOR=Silver]$LOCALIZE[21861]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureOrientation,[B][COLOR=Silver]$LOCALIZE[21843]: [/COLOR][/B],[CR]]$INFO[ListItem.PictureProcess,[B][COLOR=Silver]$LOCALIZE[21808]: [/COLOR][/B],[CR]]</value>
        <value condition="String.IsEqual(ListItem.DBType,set) + String.IsEmpty(ListItem.Plot) + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(1127)] + !String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.ExtendedPlot))">$INFO[Window(Home).Property(SkinInfo.Set.Movies.ExtendedPlot)]</value>
        <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="!String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
    </variable>

    <variable name="panelfooter">
        <value condition="Container.Content(Movies)">$INFO[Listitem.Genre,[COLOR=Highlight]$LOCALIZE[515]: [/COLOR]]</value>
        <value condition="Container.Content(TVShows)">$INFO[Listitem.Season,[COLOR=Highlight]$LOCALIZE[33054]:[/COLOR] ][CAPITALIZE]$INFO[Listitem.Episode, • [COLOR=Highlight]$LOCALIZE[36907]:[/COLOR] ][/CAPITALIZE][CR]$INFO[Listitem.Genre,[COLOR=Highlight]$LOCALIZE[515]: [/COLOR]]</value>
        <value condition="Container.Content(Seasons)">[CAPITALIZE]$INFO[Listitem.Episode,[COLOR=Highlight]$LOCALIZE[36907]:[/COLOR] ][/CAPITALIZE][CR]$INFO[Listitem.Genre,[COLOR=Highlight]$LOCALIZE[515]: [/COLOR]]</value>
        <value condition="Container.Content(Episodes)">$INFO[Listitem.Season,[COLOR=Highlight]$LOCALIZE[20373]:[/COLOR] ]$INFO[Listitem.Episode, • [COLOR=Highlight][CAPITALIZE]$LOCALIZE[20452][/CAPITALIZE]:[/COLOR] ][CR]$INFO[Listitem.Genre,[COLOR=Highlight]$LOCALIZE[515]: [/COLOR]]</value>
        <value condition="Container.Content(Albums)">$INFO[Listitem.Genre,[COLOR=Highlight]$LOCALIZE[515]: [/COLOR]][CR]$INFO[Listitem.Year,[COLOR=Highlight]$LOCALIZE[562]:[/COLOR] ]$INFO[Listitem.Property(Album_Label), • [COLOR=Highlight]$LOCALIZE[21899]:[/COLOR] ]</value>
        <value condition="Container.Content(Artists)">$INFO[Listitem.Property(Artist_Genre),[COLOR=Highlight]$LOCALIZE[515]: [/COLOR]][CR]$INFO[Listitem.Property(Artist_YearsActive),[COLOR=Highlight]$LOCALIZE[21898]:[/COLOR] ]</value>
        <value condition="Window.IsActive(MyPVRChannels.xml)">[COLOR=Grey3]$LOCALIZE[19031]: [/COLOR]$INFO[ListItem.NextTitle]</value>
        <value condition="Window.IsActive(MyPVRTimers.xml)">$INFO[PVR.NextTimer]</value>
        <value condition="String.IsEqual(ListItem.DBType,musicvideo) + String.IsEqual(Container.ViewMode,biglist) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[Listitem.Duration,[COLOR=Highlight]$LOCALIZE[180]: [/COLOR],$LOCALIZE[31297]]$INFO[Listitem.Year, • [COLOR=Highlight]$LOCALIZE[562]: [/COLOR],]$INFO[Listitem.Genre, • [COLOR=Highlight]$LOCALIZE[515]: [/COLOR]]</value>
        <value condition="String.IsEqual(ListItem.DBType,musicvideo) + String.IsEqual(Container.ViewMode,biglist) + Skin.HasSetting(Enable.HourMinutes)">$VAR[ItemDurationHrMins,[COLOR=Highlight]$LOCALIZE[180]: [/COLOR],]$INFO[Listitem.Year, • [COLOR=Highlight]$LOCALIZE[562]: [/COLOR],]$INFO[Listitem.Genre, • [COLOR=Highlight]$LOCALIZE[515]: [/COLOR]]</value>
        <value condition="String.IsEqual(ListItem.DBType,song) + String.IsEqual(Container.ViewMode,biglist)">$INFO[Listitem.Album,[COLOR=Highlight]$LOCALIZE[558]: [/COLOR],]$INFO[Listitem.Year, • [COLOR=Highlight]$LOCALIZE[562]: [/COLOR],]$INFO[Listitem.Genre, • [COLOR=Highlight]$LOCALIZE[515]: [/COLOR]]</value>
    </variable>

    <variable name="listmediaheader">
        <value condition="Container.Content(songs)">$INFO[Listitem.Album]$INFO[ListItem.Year, (,)]</value>
    </variable>
    <variable name="listmediafooter">
        <value condition="Container.Content(songs)">$INFO[Listitem.AlbumArtist]</value>
        <value condition="Container.Content(musicvideos) + !Skin.HasSetting(Enable.HourMinutes)">$INFO[ListItem.Duration,,$LOCALIZE[31297]]</value>
        <value condition="Container.Content(musicvideos) + Skin.HasSetting(Enable.HourMinutes)">$VAR[ItemDurationHrMins,,]</value>
    </variable>

    <variable name="TVShows.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(TVShows.Background))">$INFO[Skin.String(TVShows.Background)]</value>
        <value>special://skin/backgrounds/TVShows.jpg</value>
    </variable>
    <variable name="Movies.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Movies.Background))">$INFO[Skin.String(Movies.Background)]</value>
        <value>special://skin/backgrounds/Movies.jpg</value>
    </variable>
    <variable name="MusicVideos.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(MusicVideos.Background))">$INFO[Skin.String(MusicVideos.Background)]</value>
        <value>special://skin/backgrounds/MusicVideos.jpg</value>
    </variable>
    <variable name="Videos.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Videos.Background))">$INFO[Skin.String(Videos.Background)]</value>
        <value>special://skin/backgrounds/Videos.jpg</value>
    </variable>
    <variable name="Music.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Music.Background))">$INFO[Skin.String(Music.Background)]</value>
        <value>special://skin/backgrounds/Music.jpg</value>
    </variable>
    <variable name="Pictures.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Pictures.Background))">$INFO[Skin.String(Pictures.Background)]</value>
        <value>special://skin/backgrounds/Pictures.jpg</value>
    </variable>
    <variable name="Weather.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Weather.Background))">$INFO[Skin.String(Weather.Background)]</value>
        <value>special://skin/backgrounds/Weather.jpg</value>
    </variable>
    <variable name="Favourites.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Favourites.Background))">$INFO[Skin.String(Favourites.Background)]</value>
        <value>special://skin/backgrounds/Favourites.jpg</value>
    </variable>
    <variable name="Addons.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Addons.Background))">$INFO[Skin.String(Addons.Background)]</value>
        <value>special://skin/backgrounds/Addons.jpg</value>
    </variable>
    <variable name="Settings.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Settings.Background))">$INFO[Skin.String(Settings.Background)]</value>
        <value>special://skin/backgrounds/Settings.jpg</value>
    </variable>
    <variable name="Pvr.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(TV.Background))">$INFO[Skin.String(TV.Background)]</value>
        <value>special://skin/backgrounds/TV.jpg</value>
    </variable>
    <variable name="Radio.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Radio.Background))">$INFO[Skin.String(Radio.Background)]</value>
        <value>special://skin/backgrounds/Radio.jpg</value>
    </variable>
    <variable name="DVD.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(DVD.Background))">$INFO[Skin.String(DVD.Background)]</value>
        <value>special://skin/backgrounds/DVD.jpg</value>
    </variable>
    <variable name="Quit.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Quit.Background))">$INFO[Skin.String(Quit.Background)]</value>
        <value>special://skin/backgrounds/Quit.jpg</value>
    </variable>
    <variable name="Games.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Games.Background))">$INFO[Skin.String(Games.Background)]</value>
        <value>special://skin/backgrounds/Games.jpg</value>
    </variable>
    <variable name="Search.Art" description="Calculate BG to show">
        <value condition="!String.IsEmpty(Skin.String(Search.Background))">$INFO[Skin.String(Search.Background)]</value>
        <value>special://skin/backgrounds/Search.jpg</value>
    </variable>

    <variable name="MusicInfoBackground">
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$VAR[Music.Art]</value>
    </variable>

    <variable name="AddonInfoBackground">
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$VAR[Addons.Art]</value>
    </variable>

    <variable name="PictureInfoBackground">
        <value condition="!String.IsEmpty(ListItem.FolderPath)">$INFO[ListItem.FolderPath]</value>
        <value>$VAR[Addons.Art]</value>
    </variable>

    <variable name="TVInfoBackground">
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$VAR[Pvr.Art]</value>
    </variable>

    <variable name="Fanart.Art">
        <value condition="Window.IsActive(pictures) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="Window.IsActive(pictures) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(FanArt))">$INFO[ListItem.Property(FanArt)]</value>
        <value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
        <value>$VAR[SubDefaultBackground]</value>
    </variable>

    <variable name="SubBackground">
        <value condition="[Window.IsVisible(script-embuary-person.xml)] + !String.IsEmpty(Container(2003).ListItem.Icon) + !Container.OnNext + !Container.OnPrevious">$INFO[Container(2003).ListItem.Icon]</value>
        <value condition="!Skin.HasSetting(Sub_FanArtBG)">$VAR[SubDefaultBackground]</value>
        <value condition="!String.IsEmpty(Control.GetLabel(4411)) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">$INFO[Control.GetLabel(4411)]</value>
		<value condition="!String.IsEmpty(Control.GetLabel(4410)) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">$INFO[Control.GetLabel(4410)]</value>
        <value>$VAR[Fanart.Art]</value>
    </variable>

    <variable name="SubDefaultBackground">
        <value condition="Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(Default.Background))">$INFO[Skin.String(Default.Background)]</value>
        <value condition="Skin.HasSetting(Sub_DefaultBG)">special://skin/backgrounds/Default.jpg</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + String.IsEqual(Skin.String(FocusedMenu.Background),Movie.Fanart)">$INFO[Window(Home).Property(script.grab.fanart.Movie.FanArt)]</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + String.IsEqual(Skin.String(FocusedMenu.Background),TV.Fanart)">$INFO[Window(Home).Property(script.grab.fanart.TV.FanArt)]</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + String.IsEqual(Skin.String(FocusedMenu.Background),Video.Fanart)">$INFO[Window(Home).Property(script.grab.fanart.Video.FanArt)]</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + String.IsEqual(Skin.String(FocusedMenu.Background),Music.Fanart)">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + String.IsEqual(Skin.String(FocusedMenu.Background),Global.Fanart)">$INFO[Window(Home).Property(script.grab.fanart.Global.FanArt)]</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + String.IsEqual(Skin.String(FocusedMenu.Background),Weather.Fanart)">$INFO[Skin.String(weatherfanartResource.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherBackgroundExt]</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + !String.IsEmpty(Skin.String(FocusedMenu.BackgroundPlaylist))">$INFO[Container(9988).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(FocusedMenu.Background)) + String.IsEmpty(Skin.String(FocusedMenu.BackgroundPlaylist))">$INFO[Skin.String(FocusedMenu.Background)]</value>
        <value>special://skin/backgrounds/Default.jpg</value>
    </variable>

    <variable name="HomeBackground">
        <value condition="!Skin.HasSetting(Home_DefaultBG) + [ControlGroup(700).HasFocus + [!String.IsEmpty(Container(300).ListItem.Property(WidgetType)) + String.IsEmpty(ListItem.Property(recommendedtvshowtitle)) + String.IsEmpty(ListItem.Property(nextairedtvshowtitle))] + !String.IsEmpty(Container.ListItem.Art(fanart)) + $EXP[WidgetFanartVisible]]">$INFO[Container.ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(Home_DefaultBG) + [ControlGroup(700).HasFocus + !String.IsEmpty(ListItem.Property(nextairedtvshowtitle)) + !String.IsEmpty(ListItem.Property(nextairedfanart)) + $EXP[WidgetFanartVisible]]">$INFO[ListItem.Property(nextairedfanart)]</value>
        <value condition="!Skin.HasSetting(Home_DefaultBG) + [ControlGroup(700).HasFocus + !String.IsEmpty(ListItem.Property(recommendedtvshowtitle)) + !String.IsEmpty(ListItem.Property(recommendedfanart)) + $EXP[WidgetFanartVisible]]">$INFO[ListItem.Property(recommendedfanart)]</value>
        <value condition="Skin.HasSetting(Home_DefaultBG) + !String.IsEmpty(Skin.String(Default.Background))">$INFO[Skin.String(Default.Background)]</value>
        <value condition="Skin.HasSetting(Home_DefaultBG)">special://skin/backgrounds/Default.jpg</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Movie.Fanart)">$INFO[Container(12341).ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),TV.Fanart)">$INFO[Container(12342).ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Video.Fanart)">$INFO[Container(12343).ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Music.Fanart)">$INFO[Container(12345).ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Global.Fanart)">$INFO[Container(12344).ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Weather.Fanart)">$INFO[Skin.String(weatherfanartResource.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherBackgroundExt]</value>
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(background)) + String.IsEmpty(Container(300).ListItem.Property(backgroundPlaylist))">$INFO[Container(300).ListItem.Property(background)]</value>
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(background)) + !String.IsEmpty(Container(300).ListItem.Property(backgroundPlaylist))">$INFO[Container(9988).ListItem.Art(fanart)]</value>
    </variable>

    <variable name="FanartTitleVar">
        <value condition="ControlGroup(700).HasFocus + [!String.IsEmpty(Container(300).ListItem.Property(WidgetType)) + String.IsEmpty(ListItem.Property(recommendedtvshowtitle)) + String.IsEmpty(ListItem.Property(nextairedtvshowtitle))] + !String.IsEmpty(ListItem.TVShowTitle) + $EXP[WidgetFanartVisible]">$INFO[ListItem.TVShowTitle]</value>
        <value condition="ControlGroup(700).HasFocus + [!String.IsEmpty(Container(300).ListItem.Property(WidgetType)) + String.IsEmpty(ListItem.Property(recommendedtvshowtitle)) + String.IsEmpty(ListItem.Property(nextairedtvshowtitle))] + !String.IsEmpty(Container.ListItem.Art(fanart)) + $EXP[WidgetFanartVisible]">$INFO[Container.ListItem.Title]</value>
        <value condition="ControlGroup(700).HasFocus + !String.IsEmpty(ListItem.Property(nextairedtvshowtitle)) + !String.IsEmpty(ListItem.Property(nextairedfanart)) + $EXP[WidgetFanartVisible]">$INFO[ListItem.Property(nextairedtvshowtitle)]</value>
        <value condition="ControlGroup(700).HasFocus + !String.IsEmpty(ListItem.Property(recommendedtvshowtitle)) + !String.IsEmpty(ListItem.Property(recommendedfanart)) + $EXP[WidgetFanartVisible]">$INFO[ListItem.Property(recommendedtvshowtitle)]</value>
        
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Movie.Fanart)">$INFO[Container(12341).ListItem.Title]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),TV.Fanart)">$INFO[Container(12342).ListItem.Title]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Video.Fanart)">$INFO[Container(12343).ListItem.Title]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Music.Fanart)">$INFO[Container(12345).ListItem.Title]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),Global.Fanart)">$INFO[Container(12344).ListItem.Title]</value>
        <value condition="String.IsEqual(Container(300).ListItem.Property(background),playlistBackground)">$INFO[Container(9988).ListItem.Title]</value>
        <value></value>
    </variable>

    <variable name="SeekLabel">
        <value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize,[COLOR=Highlight]$LOCALIZE[773]:[/COLOR] ]</value>
        <value condition="Player.Caching">$INFO[Player.CacheLevel,$LOCALIZE[15107] ,%]</value>
        <value condition="Player.Paused">$LOCALIZE[112]</value>
        <value condition="Player.Forwarding">[COLOR=Highlight]$VAR[ForwardRewindLabel][/COLOR] $LOCALIZE[31353]</value>
        <value condition="Player.Rewinding">[COLOR=Highlight]$VAR[ForwardRewindLabel][/COLOR] $LOCALIZE[31354]</value>
        <value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
    </variable>

    <variable name="ForwardRewindLabel">
        <value condition="Player.Forwarding2x | Player.Rewinding2x">2 X</value>
        <value condition="Player.Forwarding4x | Player.Rewinding4x">4 X</value>
        <value condition="Player.Forwarding8x | Player.Rewinding8x">8 X</value>
        <value condition="Player.Forwarding16x | Player.Rewinding16x">16 X</value>
        <value condition="Player.Forwarding32x | Player.Rewinding32x">32 X</value>
    </variable>

    <variable name="DialogBusyLabel">
        <value condition="Integer.IsGreater(Control.GetLabel(10), 0)">$LOCALIZE[31979]$INFO[Control.GetLabel(10), ,%]</value>
        <value>$LOCALIZE[31979]</value>
    </variable>

    <variable name="TVGuideArt">
        <value condition="!String.IsEmpty(ListItem.Property(Art(landscape)))">$INFO[ListItem.Property(Art(landscape))]</value>
        <value condition="String.IsEmpty(ListItem.Property(Art(landscape)))">$INFO[ListItem.Property(Art(fanart))]</value>
    </variable>

    <variable name="SeasonEpisodeLabel">
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + [String.IsEmpty(ListItem.Season) | String.Contains(ListItem.Episode,s)]">$INFO[ListItem.Episode]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + Integer.IsLess(ListItem.Episode,10) + Integer.IsLess(ListItem.Season,10)">$INFO[ListItem.Season,s0,]$INFO[ListItem.Episode,e0,]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + Integer.IsLess(ListItem.Episode,10) + !Integer.IsLess(ListItem.Season,10)">$INFO[ListItem.Season,s,]$INFO[ListItem.Episode,e0,]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + !Integer.IsLess(ListItem.Episode,10) + Integer.IsLess(ListItem.Season,10)">$INFO[ListItem.Season,s0,]$INFO[ListItem.Episode,e,]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + !Integer.IsLess(ListItem.Episode,10) + !Integer.IsLess(ListItem.Season,10)">$INFO[ListItem.Season,s,]$INFO[ListItem.Episode,e,]</value>
        <value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.Label]</value>
    </variable>

    <variable name="PlayerSeasonEpisodeLabel">
        <value condition="[String.IsEmpty(Player.Season) | String.Contains(Player.Episode,s)]">$INFO[Player.Episode]</value>
        <value condition="Integer.IsLess(Player.Episode,10) + Integer.IsLess(Player.Season,10)">$INFO[Player.Season,s0,]$INFO[Player.Episode,e0,]</value>
        <value condition="Integer.IsLess(Player.Episode,10) + !Integer.IsLess(Player.Season,10)">$INFO[Player.Season,s,]$INFO[Player.Episode,e0,]</value>
        <value condition="!Integer.IsLess(Player.Episode,10) + Integer.IsLess(Player.Season,10)">$INFO[Player.Season,s0,]$INFO[Player.Episode,e,]</value>
        <value condition="!Integer.IsLess(Player.Episode,10) + !Integer.IsLess(Player.Season,10)">$INFO[Player.Season,s,]$INFO[Player.Episode,e,]</value>
    </variable>

    <variable name="UpNextSeasonEpisodeLabel">
        <value condition="[String.IsEmpty(Window.Property(Season)) | String.Contains(Window.Property(Episode),s)]">$INFO[Window.Property(Episode)]</value>
        <value condition="Integer.IsLess(Window.Property(Episode),10) + Integer.IsLess(Window.Property(Season),10)">$INFO[Window.Property(Season),s0,]$INFO[Window.Property(Episode),e0,]</value>
        <value condition="Integer.IsLess(Window.Property(Episode),10) + !Integer.IsLess(Window.Property(Season),10)">$INFO[Window.Property(Season),s,]$INFO[Window.Property(Episode),e0,]</value>
        <value condition="!Integer.IsLess(Window.Property(Episode),10) + Integer.IsLess(Window.Property(Season),10)">$INFO[Window.Property(Season),s0,]$INFO[Window.Property(Episode),e,]</value>
        <value condition="!Integer.IsLess(Window.Property(Episode),10) + !Integer.IsLess(Window.Property(Season),10)">$INFO[Window.Property(Season),s,]$INFO[Window.Property(Episode),e,]</value>
    </variable>

    <variable name="UpNextThumbVar">
        <value condition="String.IsEmpty(Window.Property(fanart)) + String.IsEmpty(Window.Property(landscape))">$INFO[Window.Property(Thumb)]</value>
        <value condition="String.IsEmpty(Window.Property(fanart)) + !String.IsEmpty(Window.Property(landscape))">$INFO[Window.Property(landscape)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart))">$INFO[Window.Property(fanart)]</value>
    </variable>

    <variable name="ThemeSelectedColour">
        <value condition="String.Contains(Skin.CurrentColourTheme,Blue)">SelectedBlue</value>
        <value condition="String.Contains(Skin.CurrentColourTheme,Green)">SelectedGreen</value>
        <value condition="String.Contains(Skin.CurrentColourTheme,White)">SelectedGrey</value>
        <value>SelectedOrange</value>
    </variable>

    <variable name="SkinShortcutLabelVar">
        <value condition="Control.HasFocus(301)">$ADDON[script.skinshortcuts 32000]</value>
        <value condition="Control.HasFocus(302)">$ADDON[script.skinshortcuts 32001]</value>
        <value condition="Control.HasFocus(303)">$ADDON[script.skinshortcuts 32002]</value>
        <value condition="Control.HasFocus(304)">$ADDON[script.skinshortcuts 32003]</value>
    </variable>

    <variable name="SkinShortcutsLeftLabelVar">
        <value condition="!String.IsEmpty(Window(Home).Property(skinshortcuts-Background))">$LOCALIZE[33068]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))">$LOCALIZE[32045]</value>
        <value condition="String.IsEqual(Window.Property(groupname),mainmenu)">$LOCALIZE[33061]</value>
        <value>$LOCALIZE[32044]</value>
    </variable>
    
    <variable name="RecentlyPlayedTVShowsVar">
        <value condition="!Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/tvshows_recentlyplayed.xsp</value>
        <value condition="Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/tvshows_recentlyplayed_w.xsp</value>
    </variable>
    
    <variable name="RecentlyAddedTVShowsVar">
        <value condition="!Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/tvshows_recentlyadded.xsp</value>
        <value condition="Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/tvshows_recentlyadded_w.xsp</value>
    </variable>
    
    <variable name="RecentlyAddedMoviesVar">
        <value condition="!Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/movies_recentlyadded.xsp</value>
        <value condition="Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/movies_recentlyadded_w.xsp</value>
    </variable>
    
    <variable name="RecentlyAddedEpisodesVar">
        <value condition="!Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/episodes_recentlyadded.xsp</value>
        <value condition="Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/episodes_recentlyadded_w.xsp</value>
    </variable>
    
    <variable name="RecentlyAddedMusicVideosVar">
        <value condition="!Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/musicvideos_recentlyadded.xsp</value>
        <value condition="Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/musicvideos_recentlyadded_w.xsp</value>
    </variable>
    
    <variable name="RecentlyAddedSongsVar">
        <value condition="!Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/songs_recentlyadded.xsp</value>
        <value condition="Skin.hasSetting(Enable.WatchedInRecent)">special://skin/xsp/songs_recentlyadded_w.xsp</value>
    </variable>

    <variable name="CustomInfoSelectHeader">
        <value condition="!String.IsEmpty(Window(movieinformation).Property(ActorID))">$INFO[Window(movieinformation).Property(ActorName)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(DoInfoExtras))">$LOCALIZE[32135]</value>
        <value>$LOCALIZE[22080]</value>
    </variable>

    <variable name="FanartTimePerImageLabel">
        <value condition="!String.IsEmpty(Skin.String(FanartTimePerImage))">$INFO[Skin.String(FanartTimePerImage)] $LOCALIZE[32047]</value>
        <value>$LOCALIZE[12317] $LOCALIZE[32047]</value>
    </variable>

    <variable name="HourLabel">
        <value condition="Integer.IsEqual(ListItem.Duration(h),1)">$LOCALIZE[32125]</value>
        <value condition="Integer.IsGreater(ListItem.Duration(h),1)">$LOCALIZE[12392]</value>
    </variable>
    
    <variable name="EmbuaryHourLabel">
        <value condition="Integer.IsEqual(Container(10051).ListItem.Duration(h),1)">$LOCALIZE[32125]</value>
        <value condition="Integer.IsGreater(Container(10051).ListItem.Duration(h),1)">$LOCALIZE[12392]</value>
    </variable>
    
    <variable name="OnlineHourLabel">
        <value condition="Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(h),1)">$LOCALIZE[32125]</value>
        <value condition="Integer.IsGreater(Container(5100).ListItemAbsolute(0).Duration(h),1)">$LOCALIZE[12392]</value>
    </variable>
    
    <variable name="MinuteLabel">
        <value condition="Integer.IsEqual(ListItem.Duration(m),1)">$LOCALIZE[32126]</value>
        <value condition="Integer.IsGreater(ListItem.Duration(m),1)">$LOCALIZE[12391]</value>
    </variable>
    
    <variable name="EmbuaryMinuteLabel">
        <value condition="Integer.IsEqual(Container(10051).ListItem.Duration(m),1)">$LOCALIZE[32126]</value>
        <value condition="Integer.IsGreater(Container(10051).ListItem.Duration(m),1)">$LOCALIZE[12391]</value>
    </variable>
    
    <variable name="OnlineMinuteLabel">
        <value condition="Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(m),1)">$LOCALIZE[32126]</value>
        <value condition="Integer.IsGreater(Container(5100).ListItemAbsolute(0).Duration,1)">$LOCALIZE[12391]</value>
    </variable>
    
    <variable name="NextAiredMinuteLabel">
        <value condition="Integer.IsEqual(Window(Home).Property(NextAired.Runtime),1)">$LOCALIZE[32126]</value>
        <value condition="Integer.IsGreater(Window(Home).Property(NextAired.Runtime),1)">$LOCALIZE[12391]</value>
    </variable>
    
    <variable name="ItemDurationHrMins">
		<value condition="[String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)] + !String.IsEmpty(Window(Home).Property(NextAired.Runtime))">$INFO[Window(Home).Property(NextAired.Runtime)] $VAR[NextAiredMinuteLabel]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),60) | Integer.IsEqual(ListItem.Duration(mins),120) | Integer.IsEqual(ListItem.Duration(mins),180) | Integer.IsEqual(ListItem.Duration(mins),240) | Integer.IsEqual(ListItem.Duration(mins),300) | Integer.IsEqual(ListItem.Duration(mins),360) | Integer.IsEqual(ListItem.Duration(mins),420) | Integer.IsEqual(ListItem.Duration(mins),480) | Integer.IsEqual(ListItem.Duration(mins),540) | Integer.IsEqual(ListItem.Duration(mins),600)">$INFO[ListItem.Duration(hours)] $VAR[HourLabel]</value>
		<value condition="Integer.IsLess(ListItem.Duration(mins),60)">$INFO[ListItem.Duration(m)] $VAR[MinuteLabel]</value>
		<value condition="Integer.IsLess(ListItem.Duration(mins),1)">$INFO[ListItem.Duration(ss),, $LOCALIZE[32047]]</value>
        <value condition="!String.IsEqual(ListItem.Duration(h),0) + String.IsEqual(ListItem.Duration(m),0)">$INFO[ListItem.Duration(h)] $VAR[HourLabel]</value>
		<value>$INFO[ListItem.Duration(h)] $VAR[HourLabel], $INFO[ListItem.Duration(m)] $VAR[MinuteLabel]</value>
	</variable>
    
    <variable name="EmbuaryItemDurationHrMins">
		<value condition="Integer.IsEqual(Container(10051).ListItem.Duration(mins),60) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),120) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),180) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),240) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),300) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),360) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),420) | Integer.IsEqual(ListItem.Duration(mins),480) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),540) | Integer.IsEqual(Container(10051).ListItem.Duration(mins),600)">$INFO[Container(10051).ListItem.Duration(hours)] $VAR[EmbuaryHourLabel]</value>
		<value condition="Integer.IsLess(Container(10051).ListItem.Duration(mins),60)">$INFO[Container(10051).ListItem.Duration(m)] $VAR[EmbuaryMinuteLabel]</value>
		<value condition="Integer.IsLess(Container(10051).ListItem.Duration(mins),1)">$INFO[Container(10051).ListItem.Duration(ss),, $LOCALIZE[32047]]</value>
        <value condition="!String.IsEqual(Container(10051).ListItem.Duration(h),0) + String.IsEqual(Container(10051).ListItem.Duration(m),0)">$INFO[Container(10051).ListItem.Duration(h)] $VAR[EmbuaryHourLabel]</value>
		<value>$INFO[Container(10051).ListItem.Duration(h)] $VAR[EmbuaryHourLabel], $INFO[Container(10051).ListItem.Duration(m)] $VAR[EmbuaryMinuteLabel]</value>
	</variable>
    
    <variable name="OnlineItemDurationHrMins">
		<value condition="[String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)] + !String.IsEmpty(Window(Home).Property(NextAired.Runtime))">$INFO[Window(Home).Property(NextAired.Runtime)] $VAR[NextAiredMinuteLabel]</value>
		<value condition="Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),60) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),120) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),180) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),240) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),300) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),360) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),420) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),480) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),540) | Integer.IsEqual(Container(5100).ListItemAbsolute(0).Duration(mins),600)">$INFO[Container(5100).ListItemAbsolute(0).Duration(hours)] $VAR[OnlineHourLabel]</value>
		<value condition="Integer.IsLess(Container(5100).ListItemAbsolute(0).Duration(mins),60)">$INFO[Container(5100).ListItemAbsolute(0).Duration(m)] $VAR[OnlineMinuteLabel]</value>
		<value condition="Integer.IsLess(Container(5100).ListItemAbsolute(0).Duration(mins),1)">$INFO[Container(5100).ListItemAbsolute(0).Duration(ss),,$LOCALIZE[32047]]</value>
        <value condition="!String.IsEqual(Container(5100).ListItemAbsolute(0).Duration(h),0) + String.IsEqual(Container(5100).ListItemAbsolute(0).Duration(m),0)">$INFO[Container(5100).ListItemAbsolute(0).Duration(h)] $VAR[OnlineHourLabel]</value>
		<value>$INFO[Container(5100).ListItemAbsolute(0).Duration(h)] $VAR[OnlineHourLabel], $INFO[Container(5100).ListItemAbsolute(0).Duration(m)] $VAR[OnlineMinuteLabel]</value>
	</variable>
    
    <variable name="PlayerDurationHrMins">
		<value condition="Integer.IsGreater(VideoPlayer.Duration(h),0) + Integer.IsGreater(VideoPlayer.Duration(mm),00)">$INFO[VideoPlayer.Duration(h),,h]$INFO[VideoPlayer.Duration(mm),,m]</value>
		<value condition="Integer.IsGreater(VideoPlayer.Duration(h),0) + Integer.IsEqual(VideoPlayer.Duration(mm),00)">$INFO[VideoPlayer.Duration(h),,h]</value>
		<value condition="Integer.IsLessOrEqual(VideoPlayer.Duration(h),0) + Integer.IsGreaterOrEqual(VideoPlayer.Duration(mm),10)">$INFO[VideoPlayer.Duration(mm),,m]</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),09)">$LOCALIZE[12319]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),08)">$LOCALIZE[12318]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),07)">$LOCALIZE[12317]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),06)">$LOCALIZE[12316]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),05)">$LOCALIZE[12315]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),04)">$LOCALIZE[12314]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),03)">$LOCALIZE[12313]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),02)">$LOCALIZE[12312]m</value>
		<value condition="Integer.IsEqual(VideoPlayer.Duration(mm),01)">$LOCALIZE[12311]m</value>
		<value>$INFO[VideoPlayer.Duration(ss),,s]</value>
	</variable>

    <expression name="56_FanartViewInfo">[[container.content(albums) | container.content(artists)] + Skin.HasSetting(56_Music_Info)] | [container.content(episodes) + Skin.HasSetting(56_Episodes_Info)] | [[container.content(MusicVideos) | container.content(movies) | container.content(tvshows) | container.content(seasons)] + Skin.HasSetting(56_Posters_Info)]</expression>

    <expression name="56_FanartViewGallery">[[container.content(albums) | container.content(artists)] + Skin.HasSetting(56_Music_Gallery)] | [container.content(episodes) + Skin.HasSetting(56_Episodes_Gallery)] | [[container.content(MusicVideos) | container.content(movies) | container.content(tvshows) | container.content(seasons)] + Skin.HasSetting(56_Posters_Gallery)]</expression>

    <expression name="WidgetFanartVisible">String.IsEmpty(Container(300).ListItem.Property(widgetDisableFanart)) + ControlGroup(700).HasFocus</expression>
    
    <expression name="SortLetterIsNumber">[String.IsEqual(ListItem.SortLetter,$NUMBER[0]) | String.IsEqual(ListItem.SortLetter,$NUMBER[1]) | String.IsEqual(ListItem.SortLetter,$NUMBER[2]) | String.IsEqual(ListItem.SortLetter,$NUMBER[3]) | String.IsEqual(ListItem.SortLetter,$NUMBER[4]) | String.IsEqual(ListItem.SortLetter,$NUMBER[5]) | String.IsEqual(ListItem.SortLetter,$NUMBER[6]) | String.IsEqual(ListItem.SortLetter,$NUMBER[7]) | String.IsEqual(ListItem.SortLetter,$NUMBER[8]) | String.IsEqual(ListItem.SortLetter,$NUMBER[9])]</expression>
    
</includes>
