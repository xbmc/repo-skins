<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="WindowOpen_GreenBar">
		<animation effect="zoom" start="0,100" end="100,100" time="800" center="auto" tween="quadratic" easing="out" delay="200">WindowOpen</animation>
	</include>
	<include name="VisAnimation">
		<animation effect="zoom" start="110" end="130" center="auto" time="14000" pulse="true" condition="!Skin.HasSetting(VisAnimationDisabled) + !String.IsEmpty(Player.Art(fanart))" reversible="false">Conditional</animation>
		<animation effect="slide" start="-20,-20" end="40,40" time="15000" pulse="true" condition="!Skin.HasSetting(VisAnimationDisabled) + !String.IsEmpty(Player.Art(fanart))" reversible="false">Conditional</animation>
		<animation effect="zoom" end="100" center="auto" time="0" condition="Skin.HasSetting(VisAnimationDisabled) + !String.IsEmpty(Player.Art(fanart))" reversible="false">Conditional</animation>
		<animation effect="slide" end="0,0" time="0" condition="Skin.HasSetting(VisAnimationDisabled) + !String.IsEmpty(Player.Art(fanart))" reversible="false">Conditional</animation>
	</include>
	<include name="OSD_Seek_Position">
		<param name="id">401</param>
		<definition>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),5)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),6)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),7)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),8)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),9)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),10)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),11)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),12)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),13)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),14)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),15)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),16)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),17)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),18)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),19)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),20)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),21)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),22)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),23)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),24)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),25)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),26)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),27)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),28)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),29)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),30)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),31)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),32)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),33)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),34)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),35)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),36)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),37)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),38)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),39)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),40)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),41)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),42)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),43)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),44)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),45)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),46)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),47)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),48)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),49)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),50)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),51)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),52)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),53)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),54)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),55)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),56)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),57)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),58)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),59)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),60)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),61)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),62)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),63)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),64)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),65)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),66)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),67)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),68)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),69)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),70)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),71)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),72)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),73)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),74)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),75)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),76)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),77)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),78)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),79)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),80)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),81)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),82)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),83)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),84)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),85)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),86)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),87)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),88)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),89)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),90)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),91)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),92)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),93)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),94)">Conditional</animation>
			<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel($PARAM[id]),95)">Conditional</animation>
		</definition>
	</include>
	<include name="Visible_Fade">
		<animation effect="fade" end="100" time="200">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
		<animation effect="fade" end="100" time="200">Visible</animation>
		<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
	</include>
	<include name="Bounce_Right">
		<animation condition="Window.IsVisible(1150) + Control.HasFocus($PARAM[id])" reversible="false" type="Conditional">
			<effect easing="out" end="-30,0" start="0,0" time="60" tween="sine" type="slide" />
			<effect delay="80" easing="out" end="30,0" start="0,0" time="120" tween="sine" type="slide" />
		</animation>
	</include>
	<include name="Window_OpenClose">
		<animation type="WindowOpen" reversible="false" condition="!Window.Previous(visualisation)">
			<effect type="fade" delay="0" end="100" time="300" />
		</animation>
		<animation type="WindowClose" reversible="false" condition="!Window.Previous(visualisation)">
			<effect type="fade" start="100" end="0" time="0" />
		</animation>
	</include>
	<include name="Visible_OpenClose">
		<animation type="Visible" reversible="false">
			<effect type="fade" delay="170" end="100" time="300" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="0" time="0" />
		</animation>
	</include>
	<include name="Dialog_PopupOpenClose">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" start="80" end="100" center="960,540" delay="160" tween="circle" easin="out" time="240" />
			<effect type="fade" delay="160" end="100" time="240" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="zoom" start="100" end="80" center="960,540" easing="in" tween="circle" easin="out" time="240" />
			<effect type="fade" start="100" end="0" time="240" />
		</animation>
	</include>
	<include name="Visible_PopupOpenClose">
		<animation type="Visible" reversible="false">
			<effect type="zoom" start="80" end="100" center="960,540" delay="160" tween="circle" easin="out" time="240" />
			<effect type="fade" delay="160" end="100" time="240" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="80" center="960,540" easing="in" tween="circle" easin="out" time="240" />
			<effect type="fade" start="100" end="0" time="240" />
		</animation>
	</include>
	<include name="Animation_FocusTextureFade">
		<animation reversible="false" effect="fade" start="0" end="100" time="500" tween="linear">Focus</animation>
		<animation reversible="false" effect="fade" start="100" end="0" time="0">UnFocus</animation>
	</include>
	<include name="Animation_FocusBounce">
		<animation type="Focus" reversible="false" condition="!Skin.HasSetting(MinimalFocusAnimation) + [Container($PARAM[id]).OnNext | Container($PARAM[id]).OnPrevious | !String.IsEmpty(Window(home).Property(FocusBounce))]">
			<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
			<effect type="zoom" end="90.9090909" time="225" tween="sine" delay="100" easing="out" center="auto" />
		</animation>
	</include>
	<include name="Animation_ScrollbarIsVisible">
		<param name="condition">Control.IsVisible(17) + $EXP[ScrollbarContainers]</param>
		<definition>
			<animation effect="slide" start="0,0" end="-8,0"  time="0" condition="$PARAM[condition]">Conditional</animation>
		</definition>
	</include>
</includes>