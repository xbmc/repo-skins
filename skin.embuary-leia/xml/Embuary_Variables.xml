<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Startup window -->
	<variable name="StartUpWindow">
		<value condition="!String.IsEmpty(Skin.String(StartUpWindow))">$INFO[Skin.String(StartUpWindow)]</value>
		<value>$INFO[System.StartupWindow]</value>
	</variable>
	<!-- Holiday widget sources -->
	<variable name="SeasonalSpecialHeadline">
		<value condition="System.Date(05-04,05-05)">[COLOR $VAR[AccentColor]]May the 4th be with you[/COLOR]</value>
		<value condition="System.Date(12-01,12-27)">[COLOR $VAR[AccentColor]]$LOCALIZE[31292][/COLOR]</value>
		<value condition="System.Date(10-30,11-01)">[COLOR $VAR[AccentColor]]$LOCALIZE[31291][/COLOR]</value>
	</variable>
	<variable name="SeasonalSpecialHeadlineIcon">
		<value condition="System.Date(05-04,05-05)">holiday/starwars/logo.png</value>
		<value condition="System.Date(12-01,12-27)">holiday/winter/snowman.png</value>
		<value condition="System.Date(10-30,11-01)">holiday/halloween/halloween4.png</value>
	</variable>
	<variable name="SeasonalSpecial">
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(05-04,05-05) + Window.IsVisible(home)">plugin://script.embuary.helper/?info=getseasonal&amp;list=starwars&amp;limit=15&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(05-04,05-05) + Window.IsVisible(1120)">plugin://script.embuary.helper/?info=getseasonal&amp;list=starwars&amp;type=movie&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(05-04,05-05) + Window.IsVisible(1121)">plugin://script.embuary.helper/?info=getseasonal&amp;list=starwars&amp;type=tvshow&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(12-01,12-27) + Window.IsVisible(home)">plugin://script.embuary.helper/?info=getseasonal&amp;list=xmas&amp;limit=15&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(12-01,12-27) + Window.IsVisible(1120)">plugin://script.embuary.helper/?info=getseasonal&amp;list=xmas&amp;type=movie&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(12-01,12-27) + Window.IsVisible(1121)">plugin://script.embuary.helper/?info=getseasonal&amp;list=xmas&amp;type=tvshow&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(10-30,11-01) + Window.IsVisible(home)">plugin://script.embuary.helper/?info=getseasonal&amp;list=horror&amp;limit=15&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(10-30,11-01) + Window.IsVisible(1120)">plugin://script.embuary.helper/?info=getseasonal&amp;list=horror&amp;type=movie&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Skin.HasSetting(HideSeasonalWidgets) + System.Date(10-30,11-01) + Window.IsVisible(1121)">plugin://script.embuary.helper/?info=getseasonal&amp;list=horror&amp;type=tvshow&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<!-- Widget count -->
	<variable name="PosterWidgetLimit">
		<value condition="!String.IsEmpty(Skin.String(poster_widget_limit)) + !Integer.IsGreater(Skin.String(poster_widget_limit),25) + !Integer.IsEqual(Skin.String(poster_widget_limit),0)">$INFO[Skin.String(poster_widget_limit)]</value>
		<value>25</value>
	</variable>
	<variable name="SquareWidgetLimit">
		<value condition="!String.IsEmpty(Skin.String(square_widget_limit)) + !Integer.IsGreater(Skin.String(square_widget_limit),25) + !Integer.IsEqual(Skin.String(square_widget_limit),0)">$INFO[Skin.String(square_widget_limit)]</value>
		<value>25</value>
	</variable>
	<variable name="WideWidgetLimit">
		<value condition="!String.IsEmpty(Skin.String(wide_widget_limit)) + !Integer.IsGreater(Skin.String(wide_widget_limit),25) + !Integer.IsEqual(Skin.String(wide_widget_limit),0)">$INFO[Skin.String(wide_widget_limit)]</value>
		<value>25</value>
	</variable>
	<!-- Color theme -->
	<variable name="AccentColorLabel">
		<value condition="!String.IsEmpty(Skin.String(color_accent)) + !String.IsEqual(Skin.String(color_accent),None)">$INFO[Skin.String(color_accent),,       ]</value>
		<value>$LOCALIZE[571]       </value>
	</variable>
	<variable name="PlayerAccentColorLabel">
		<value condition="!String.IsEmpty(Skin.String(color_player_accent)) + !String.IsEqual(Skin.String(color_player_accent),None)">$INFO[Skin.String(color_player_accent),,       ]</value>
		<value>$LOCALIZE[571]       </value>
	</variable>
	<variable name="ThumbFallbackColorLabel">
		<value condition="!String.IsEmpty(Skin.String(color_thumb_fallback)) + !String.IsEqual(Skin.String(color_thumb_fallback),None)">$INFO[Skin.String(color_thumb_fallback),,       ]</value>
		<value>$LOCALIZE[571]       </value>
	</variable>
	<variable name="ButtonAccentColorLabel">
		<value condition="!String.IsEmpty(Skin.String(button_focus_accent)) + !String.IsEqual(Skin.String(button_focus_accent),None)">$INFO[Skin.String(button_focus_accent),,       ]</value>
		<value>$LOCALIZE[571]       </value>
	</variable>
	<variable name="AccentColor">
		<value condition="!String.IsEmpty(Skin.String(color_accent)) + !String.IsEqual(Skin.String(color_accent),None)">$INFO[Skin.String(color_accent)]</value>
		<value>accent</value>
	</variable>
	<variable name="PlayerAccentColor">
		<value condition="!String.IsEmpty(Skin.String(color_player_accent)) + !String.IsEqual(Skin.String(color_player_accent),None)">$INFO[Skin.String(color_player_accent)]</value>
		<value>player_osd_color</value>
	</variable>
	<variable name="ThumbFallbackColor">
		<value condition="!String.IsEmpty(Skin.String(color_thumb_fallback)) + !String.IsEqual(Skin.String(color_thumb_fallback),None)">$INFO[Skin.String(color_thumb_fallback)]</value>
		<value>thumb_background_fallback</value>
	</variable>
	<variable name="ButtonAccentColor">
		<value condition="!String.IsEmpty(Skin.String(button_focus_accent)) + !String.IsEqual(Skin.String(button_focus_accent),None)">$INFO[Skin.String(button_focus_accent)]</value>
		<value>accent</value>
	</variable>
	<variable name="ThumbBackgroundColor">
		<value condition="Window.IsVisible(videobookmarks)">thumb_background_player</value>
		<value condition="Window.IsVisible(pvrosdchannels)">thumb_background_player</value>
		<value>thumb_background</value>
	</variable>
	<variable name="SkinTheme">
		<value condition="!String.IsEqual(Skin.CurrentColourTheme,SKINDEFAULT) + !String.StartsWith(Skin.CurrentColourTheme,Default)">$INFO[Skin.CurrentColourTheme]</value>
		<value>Default</value>
	</variable>
	<variable name="CurrentColorLabel">
		<value condition="!String.IsEmpty(Window.Property(colorstring)) + !String.IsEqual(Window.Property(colorstring),None)">$LOCALIZE[31265]$INFO[Window.Property(colorstring), #]</value>
		<value>$LOCALIZE[31305]</value>
	</variable>
	<!-- Menu & widget vars -->
	<variable name="MainMenuMovieHubIcon">
		<value condition="Library.HasContent(movies)">DefaultVideo.png</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.0.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.0.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.0.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.1.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.1.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.1.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.2.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.2.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.2.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.3.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.3.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.3.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.4.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.4.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.4.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.5.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.5.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.5.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.6.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.6.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.6.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.7.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.7.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.7.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.8.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.8.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.8.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.9.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.9.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.9.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.10.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.10.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.10.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.11.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.11.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.11.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.12.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.12.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.12.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.13.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.13.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.13.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.14.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.14.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.14.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.15.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.15.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.15.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.16.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.16.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.16.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.17.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.17.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.17.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.18.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.18.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.18.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.19.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.19.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.19.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.20.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.20.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.20.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.21.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.21.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.21.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.22.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.22.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.22.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.23.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.23.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.23.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.24.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.24.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.24.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.25.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.25.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.25.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.26.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.26.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.26.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.27.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.27.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.27.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.28.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.28.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.28.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.29.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.29.type),movies)">$INFO[Window(home).Property(plugin.video.embycon-view_item.29.thumb)]</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="MainMenuTVShowHubIcon">
		<value condition="Library.HasContent(tvshows)">DefaultVideo.png</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.0.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.0.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.0.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.1.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.1.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.1.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.2.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.2.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.2.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.3.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.3.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.3.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.4.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.4.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.4.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.5.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.5.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.5.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.6.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.6.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.6.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.7.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.7.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.7.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.8.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.8.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.8.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.9.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.9.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.9.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.10.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.10.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.10.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.11.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.11.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.11.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.12.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.12.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.12.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.13.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.13.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.13.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.14.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.14.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.14.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.15.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.15.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.15.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.16.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.16.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.16.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.17.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.17.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.17.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.18.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.18.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.18.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.19.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.19.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.19.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.20.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.20.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.20.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.21.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.21.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.21.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.22.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.22.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.22.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.23.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.23.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.23.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.24.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.24.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.24.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.25.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.25.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.25.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.26.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.26.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.26.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.27.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.27.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.27.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.28.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.28.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.28.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.29.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.29.type),tvshows)">$INFO[Window(home).Property(plugin.video.embycon-view_item.29.thumb)]</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="MainMenuMusicHubIcon">
		<value condition="Library.HasContent(music)">DefaultMusic.png</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.0.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.0.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.0.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.1.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.1.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.1.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.2.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.2.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.2.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.3.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.3.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.3.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.4.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.4.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.4.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.5.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.5.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.5.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.6.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.6.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.6.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.7.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.7.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.7.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.8.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.8.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.8.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.9.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.9.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.9.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.10.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.10.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.10.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.11.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.11.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.11.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.12.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.12.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.12.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.13.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.13.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.13.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.14.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.14.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.14.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.15.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.15.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.15.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.16.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.16.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.16.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.17.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.17.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.17.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.18.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.18.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.18.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.19.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.19.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.19.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.20.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.20.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.20.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.21.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.21.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.21.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.22.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.22.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.22.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.23.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.23.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.23.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.24.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.24.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.24.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.25.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.25.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.25.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.26.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.26.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.26.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.27.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.27.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.27.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.28.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.28.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.28.thumb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-view_item.29.thumb)) + String.IsEqual(Window(home).Property(plugin.video.embycon-view_item.29.type),music)">$INFO[Window(home).Property(plugin.video.embycon-view_item.29.thumb)]</value>
		<value>DefaultMusic.png</value>
	</variable>
	<variable name="MainMenuFallbackIcon">
		<value condition="String.Contains(ListItem.Property(defaultID),embuary_emby) | String.Contains(ListItem.Property(list),plugin.video.emby)">DefaultEmby.png</value>
		<value condition="String.Contains(ListItem.Property(list),library://video) | String.Contains(ListItem.Property(list),videodb://)">DefaultVideo.png</value>
		<value condition="String.Contains(ListItem.Property(list),library://music) | String.Contains(ListItem.Property(list),musicdb://)">DefaultMusic.png</value>
		<value condition="String.Contains(ListItem.Property(path),RunAddOn) | String.Contains(ListItem.Property(path),RunScript) | String.Contains(ListItem.Property(list),addons://)">DefaultAddon.png</value>
		<value condition="String.Contains(ListItem.Property(path),ActivateWindow) + String.Contains(ListItem.Property(path),Pictures)">DefaultPicture.png</value>
		<value condition="String.Contains(ListItem.Property(path),ActivateWindow)">DefaultFolder.png</value>
		<value condition="String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value>DefaultShortcut.png</value>
	</variable>
	<variable name="SkinshortcutsGroup">
		<value condition="String.IsEqual(Window.Property(groupname),mainmenu)">$LOCALIZE[31261]</value>
		<value condition="String.IsEqual(Window.Property(groupname),moviehub)">$LOCALIZE[31173]</value>
		<value condition="String.IsEqual(Window.Property(groupname),tvshowhub)">$LOCALIZE[31172]</value>
		<value condition="String.IsEqual(Window.Property(groupname),musichub)">$LOCALIZE[31174]</value>
	</variable>
	<variable name="SkinshortcutsLabel">
		<value condition="!String.IsEmpty(ListItem.Label)">$INFO[ListItem.Label]</value>
		<value condition="!String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
		<value>$LOCALIZE[31159]</value>
	</variable>
	<variable name="SkinshortcutsIcon">
		<value condition="String.Contains(ListItem.Property(defaultID),embuary_emby)">DefaultEmby.png</value>
		<value condition="String.Contains(ListItem.Property(list),library://video) | String.Contains(ListItem.Property(list),videodb://)">DefaultVideo.png</value>
		<value condition="String.Contains(ListItem.Property(list),library://music) | String.Contains(ListItem.Property(list),musicdb://)">DefaultMusic.png</value>
		<value condition="String.Contains(ListItem.Property(path),RunAddOn) | String.Contains(ListItem.Property(path),RunScript) | String.Contains(ListItem.Property(list),addons://)">DefaultAddon.png</value>
		<value condition="String.Contains(ListItem.Property(path),ActivateWindow) + String.Contains(ListItem.Property(path),Pictures)">DefaultPicture.png</value>
		<value condition="String.StartsWith(ListItem.Property(path),ActivateWindow)">DefaultFolder.png</value>
		<value condition="String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value>DefaultShortcut.png</value>
	</variable>
	<variable name="SkinShortcutsIconAR">
		<value condition="String.IsEqual(Container(211).ListItem.property(aspectRatio),keep)">$LOCALIZE[31311]</value>
		<value condition="String.IsEqual(Container(211).ListItem.property(aspectRatio),scale)">$LOCALIZE[31309]</value>
		<value condition="String.IsEqual(Container(211).ListItem.property(aspectRatio),stretch)">$LOCALIZE[31310]</value>
	</variable>
	<variable name="SkinshortcutsHideIcon">
		<value condition="!String.IsEqual(Container(211).ListItem.Property(skinshortcuts-disabled),True)"></value>
		<value></value>
	</variable>
	<variable name="PositionselectorHeadline">
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),HomeWidgets)">$LOCALIZE[10000]</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),MovieHubWidgets)">$LOCALIZE[31173]</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),TVShowHubWidgets)">$LOCALIZE[31172]</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),MusicHubWidgets)">$LOCALIZE[31174]</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyMovieHubWidgets)">$LOCALIZE[31173] ($LOCALIZE[31181])</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyTVShowHubWidgets)">$LOCALIZE[31172] ($LOCALIZE[31181])</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyConMovieHubWidgets)">$LOCALIZE[31173] ($LOCALIZE[31208])</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyConTVShowHubWidgets)">$LOCALIZE[31172] ($LOCALIZE[31208])</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyConMusicHubWidgets)">$LOCALIZE[31174] ($LOCALIZE[31208])</value>
	</variable>
	<variable name="PositionselectorGroup">
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),HomeWidgets)">home</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),MovieHubWidgets)">moviehub</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),TVShowHubWidgets)">tvshowhub</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),MusicHubWidgets)">musichub</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyMovieHubWidgets)">embymoviehub</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyTVShowHubWidgets)">embytvshowhub</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyConMovieHubWidgets)">embyconmoviehub</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyConTVShowHubWidgets)">embycontvshowhub</value>
		<value condition="String.IsEqual(Window(home).Property(SelectorContent),EmbyConMusicHubWidgets)">embyconmusichub</value>
	</variable>
	<!-- Search -->
	<variable name="EmbyCon.SearchMovies">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?item_type=Movie&amp;mode=NEW_SEARCH&amp;query=$INFO[Skin.String(CustomSearchTerm)]</value>
	</variable>
	<variable name="Local.SearchMovies">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(movies)">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Skin.String(CustomSearchTerm)]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</value>
	</variable>
	<variable name="Local.SearchActorMovies">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(movies)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22actor%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[Skin.String(CustomSearchTerm)]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
	</variable>
	<variable name="EmbyCon.SearchActorMovies">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon) + !String.IsEmpty(Skin.String(CustomSearchEmbyID))">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26IncludeItemTypes%3DMovie%26Recursive%3Dtrue%26Fields%3D%7Bfield_filters%7D%26ImageTypeLimit%3D1%26format%3Djson%26PersonIds%3D$INFO[Skin.String(CustomSearchEmbyID)]</value>
	</variable>
	<variable name="Local.SearchDirectorMovies">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(movies)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22director%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[Skin.String(CustomSearchTerm)]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
	</variable>
	<variable name="EmbyCon.SearchShows">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?item_type=Series&amp;mode=NEW_SEARCH&amp;query=$INFO[Skin.String(CustomSearchTerm)]</value>
	</variable>
	<variable name="EmbyCon.SearchPerson">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon) + String.IsEmpty(Skin.String(CustomSearchEmbyID))">plugin://plugin.video.embycon/?mode=NEW_SEARCH&amp;item_type=Person&amp;query=$INFO[Skin.String(CustomSearchTerm)]</value>
	</variable>
	<variable name="Local.SearchShows">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(tvshows)">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Skin.String(CustomSearchTerm)]%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</value>
	</variable>
	<variable name="Local.SearchActorShows">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(tvshows)">videodb://tvshows/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22actor%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[Skin.String(CustomSearchTerm)]%22%5d%7d%5d%7d%2c%22type%22%3a%22tvshows%22%7d</value>
	</variable>
	<variable name="EmbyCon.SearchActorShows">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon) + !String.IsEmpty(Skin.String(CustomSearchEmbyID))">plugin://plugin.video.embycon/?media_type=tvshows&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26Fields%3D%7Bfield_filters%7D%26Recursive%3Dtrue%26IncludeItemTypes%3DSeries%26ImageTypeLimit%3D1%26format%3Djson%26PersonIds%3D$INFO[Skin.String(CustomSearchEmbyID)]</value>
	</variable>
	<variable name="EmbyCon.SearchEpisodes">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?item_type=Episode&amp;mode=NEW_SEARCH&amp;query=$INFO[Skin.String(CustomSearchTerm)]</value>
	</variable>
	<variable name="Local.SearchEpisodes">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(tvshows)">videodb://tvshows/titles/-1/-1/-1/-1/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Skin.String(CustomSearchTerm)]%22%5D%7D%5D%7D%2C%22type%22%3A%22episodes%22%7D</value>
	</variable>
	<variable name="Local.SearchActorEpisodes">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(tvshows)">videodb://tvshows/titles/-1/-1/-1/-1/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22actor%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[Skin.String(CustomSearchTerm)]%22%5d%7d%5d%7d%2c%22type%22%3a%22episodes%22%7d</value>
	</variable>
	<variable name="EmbyCon.SearchActorEpisodes">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon) + !String.IsEmpty(Skin.String(CustomSearchEmbyID))">plugin://plugin.video.embycon/?media_type=Episode&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26IncludeItemTypes%3DEpisode%26Recursive%3Dtrue%26Fields%3D%7Bfield_filters%7D%26ImageTypeLimit%3D1%26format%3Djson%26PersonIds%3D$INFO[Skin.String(CustomSearchEmbyID)]</value>
	</variable>
	<variable name="Local.SearchMusicVideos">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(musicvideos)">videodb://musicvideos/titles/?xsp=%7b%22order%22%3a%7b%22direction%22%3a%22ascending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22sorttitle%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22title%22%2c%22operator%22%3a%22contains%22%2c%22value%22%3a%5b%22$INFO[Skin.String(CustomSearchTerm)]%22%5d%7d%5d%7d%2c%22type%22%3a%22musicvideos%22%7d</value>
	</variable>
	<variable name="Local.SearchArtists">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(music)">musicdb://artists/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22artist%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22artist%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Skin.String(CustomSearchTerm)]%22%5D%7D%5D%7D%2C%22type%22%3A%22artists%22%7D</value>
	</variable>
	<variable name="Local.SearchAlbums">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(music)">musicdb://albums/?xsp=%7b%22order%22%3a%7b%22direction%22%3a%22ascending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22album%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22album%22%2c%22operator%22%3a%22contains%22%2c%22value%22%3a%5b%22$INFO[Skin.String(CustomSearchTerm)]%22%5d%7d%5d%7d%2c%22type%22%3a%22albums%22%7d</value>
	</variable>
	<variable name="EmbyCon.SearchAlbums">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?item_type=musicalbum&amp;mode=NEW_SEARCH&amp;query=$INFO[Skin.String(CustomSearchTerm)]</value>
	</variable>
	<variable name="Local.SearchSongs">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + Library.HasContent(music)">musicdb://songs/?xsp=%7b%22order%22%3a%7b%22direction%22%3a%22ascending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22artist%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22title%22%2c%22operator%22%3a%22contains%22%2c%22value%22%3a%5b%22$INFO[Skin.String(CustomSearchTerm)]%22%5d%7d%5d%7d%2c%22type%22%3a%22songs%22%7d</value>
	</variable>
	<variable name="EmbyCon.SearchMusic">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm)) + System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?item_type=audio&amp;mode=NEW_SEARCH&amp;query=$INFO[Skin.String(CustomSearchTerm)]</value>
	</variable>
	<!-- Emby Fav sources -->
	<variable name="Emby.FavMovies">
		<value condition="System.HasAddon(plugin.video.emby) + String.StartsWith(System.AddonVersion(plugin.video.emby),3.0)">library://video/emby_Favorite movies.xml</value>
		<value condition="System.HasAddon(plugin.video.emby)">library://video/emby_Favoritemovies.xml</value>
	</variable>
	<variable name="Emby.FavShows">
		<value condition="System.HasAddon(plugin.video.emby) + String.StartsWith(System.AddonVersion(plugin.video.emby),3.0)">library://video/emby_Favorite tvshows.xml</value>
		<value condition="System.HasAddon(plugin.video.emby)">library://video/emby_Favoritetvshows.xml</value>
	</variable>
	<variable name="Emby.FavEpisodes">
		<value condition="System.HasAddon(plugin.video.emby) + String.StartsWith(System.AddonVersion(plugin.video.emby),3.0)">library://video/emby_Favorite episodes.xml</value>
		<value condition="System.HasAddon(plugin.video.emby)">library://video/emby_Favoriteepisodes.xml</value>
	</variable>
	<!-- EmbyCon sources -->
	<variable name="EmbyCon.FavMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fFields%3d%7bfield_filters%7d%26Recursive%3dtrue%26Filters%3dIsFavorite%26IncludeItemTypes%3dMovie%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.FavTVShows">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=tvshows&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fFields%3d%7bfield_filters%7d%26Recursive%3dtrue%26Filters%3dIsFavorite%26IncludeItemTypes%3dSeries%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.FavEpisodes">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26amp%3BSortOrder%3DAscending%26amp%3BFilters%3DIsFavorite%26amp%3BRecursive%3Dtrue%26amp%3BFields%3DPrimaryImageAspectRatio%2CBasicSyncInfo%26amp%3BCollapseBoxSetItems%3Dfalse%26amp%3BExcludeLocationTypes%3DVirtual%26amp%3BEnableTotalRecordCount%3Dfalse%26amp%3BLimit%3D100%26amp%3BIncludeItemTypes%3DEpisode&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.FavArtists">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=MusicArtists&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FArtists%3FSortBy%3DSortName%26SortOrder%3DAscending%26Filters%3DIsFavorite%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26CollapseBoxSetItems%3Dfalse%26ExcludeLocationTypes%3DVirtual%26EnableTotalRecordCount%3Dfalse%26Limit%3D20%26userId%3D%7Buserid%7D&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.FavAlbums">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=MusicAlbums&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26Filters%3DIsFavorite%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26CollapseBoxSetItems%3Dfalse%26ExcludeLocationTypes%3DVirtual%26EnableTotalRecordCount%3Dfalse%26Limit%3D20%26IncludeItemTypes%3DMusicAlbum&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.FavSongs">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Music&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26Filters%3DIsFavorite%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26CollapseBoxSetItems%3Dfalse%26ExcludeLocationTypes%3DVirtual%26EnableTotalRecordCount%3Dfalse%26Limit%3D20%26IncludeItemTypes%3DAudio&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.InProgressMedia">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Video&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DDatePlayed%2CSortName%26SortOrder%3DDescending%26IncludeItemTypes%3DMovie%2CEpisode%26Limit%3D50%26Recursive%3Dtrue%26Fields%3D%7Bfield_filters%7D%26Filters%3DIsResumable%26ImageTypeLimit%3D1%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.NextUp">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;use_cache=false&amp;name_format=Episode%7cepisode_name_format&amp;url=%7bserver%7d%2femby%2fShows%2fNextUp%2f%3fUserid%3d%7buserid%7d%26Limit%3d%7bItemLimit%7d%26Recursive%3dtrue%26Fields%3d%7bfield_filters%7d%26Filters%3dIsUnplayed%2cIsNotFolder%26IsVirtualUnaired%3dfalse%26IsMissing%3dFalse%26IncludeItemTypes%3dEpisode%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.NewMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%2FLatest%3FLimit%3D%7BItemLimit%7D%26Recursive%3Dtrue%26GroupItems%3Dtrue%26SortBy%3DDateCreated%26Fields%3D%7Bfield_filters%7D%26SortOrder%3DDescending%26Filters%3D%7BIsUnplayed%7D%26IncludeItemTypes%3DMovie%26ImageTypeLimit%3D1%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.NewEpisodes">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;use_cache=false&amp;name_format=Episode%7cepisode_name_format&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%2fLatest%3fLimit%3d%7bItemLimit%7d%26Recursive%3dtrue%26GroupItems%3dtrue%26SortBy%3dDateCreated%26Fields%3d%7bfield_filters%7d%26SortOrder%3dDescending%26Filters%3d%7bIsUnplayed%7d%26IsVirtualUnaired%3dfalse%26IsMissing%3dFalse%26IncludeItemTypes%3dEpisode%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.NewAlbums">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=MusicAlbums&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%2FLatest%3FIncludeItemTypes%3DAudio%26Limit%3D24%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%252CBackdrop%252CBanner%252CThumb%26EnableTotalRecordCount%3Dfalse&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.InProgressMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fLimit%3d%7bItemLimit%7d%26Recursive%3dtrue%26Fields%3d%7bfield_filters%7d%26Filters%3dIsResumable%26IncludeItemTypes%3dMovie%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.MovieGenres">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GENRES&amp;item_type=movie&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.RecommendedMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DCommunityRating%252CSortName%26SortOrder%3DDescending%26IncludeItemTypes%3DMovie%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CMediaSourceCount%252CBasicSyncInfo%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%252CBackdrop%252CBanner%252CThumb%26StartIndex%3D0%26Limit%3D100%26Filters%3DIsUnPlayed&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.SimilarMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7bserver%7d%2femby%2fMovies%2fRecommendations%3fuserId%3d%7buserid%7d%26categoryLimit%3d1%26ItemLimit%3d%7bItemLimit%7d%26format%3djson%26ImageTypeLimit%3d1%26Fields%3d%7bfield_filters%7d%26IsMissing%3dFalse&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.InProgressShows">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;use_cache=false&amp;name_format=Episode%7cepisode_name_format&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fLimit%3d%7bItemLimit%7d%26Recursive%3dtrue%26Fields%3d%7bfield_filters%7d%26Filters%3dIsResumable%26IncludeItemTypes%3dEpisode%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.TVShowGenres">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GENRES&amp;item_type=tvshow&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.RecommendedShows">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=tvshows&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fIsVirtualUnaired%3dfalse%26IsMissing%3dFalse%26Fields%3d%7bfield_filters%7d%26Filters%3dIsUnplayed%26Recursive%3dtrue%26IncludeItemTypes%3dSeries%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<variable name="EmbyCon.OftenPlayedSongs">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Music&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DPlayCount%26SortOrder%3DDescending%26IncludeItemTypes%3DAudio%26Limit%3D12%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CAudioInfo%26Filters%3DIsPlayed%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%252CBackdrop%252CBanner%252CThumb%26EnableTotalRecordCount%3Dfalse&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
	</variable>
	<!-- Embcon/Native DB vars -->
	<variable name="View_Cast_Content">
		<value condition="!String.IsEmpty(Container.Pluginname) + !String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon)"></value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + Container.Content(seasons) + ListItem.IsParentFolder">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[ListItem(1).Property(id)]</value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[ListItem.Property(id)]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.DBID) + !String.IsEqual(ListItem.DBID,0)">plugin://script.embuary.helper?info=getcast&amp;type=movie&amp;dbid=$INFO[ListItem.DBID]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + String.IsEqual(ListItem.DBID,0)">plugin://script.embuary.helper?info=getcast&amp;type=movie&amp;title='$ESCINFO[ListItem.Title]'</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.DBID) + !String.IsEqual(ListItem.DBID,0)">plugin://script.embuary.helper?info=getcast&amp;type=tvshow&amp;dbid=$INFO[ListItem.DBID]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + String.IsEqual(ListItem.DBID,0)">plugin://script.embuary.helper?info=getcast&amp;type=tvshow&amp;title='$ESCINFO[ListItem.TVShowTitle]'</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,season)] + !String.IsEmpty(ListItem.DBID)">plugin://script.embuary.helper?info=getcast&amp;type=tvshow&amp;title='$ESCINFO[ListItem.TVShowTitle]'</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem(1).DBID)">plugin://script.embuary.helper?info=getcast&amp;type=tvshow&amp;title='$ESCINFO[ListItem(1).TVShowTitle]'</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem(2).DBID)">plugin://script.embuary.helper?info=getcast&amp;type=tvshow&amp;title='$ESCINFO[ListItem(2).TVShowTitle]'</value>
	</variable>
	<variable name="View54_NextUp_Content">
		<value condition="!String.IsEmpty(Container.Pluginname) + !String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon)"></value>
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEmpty(ListItemAbsolute(0).Property(series_id))">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FuserId%3D%7Buserid%7D%26Limit%3D%7BItemLimit%7D%26Filters%3D%7Bfield_filters%7D%26format%3Djson%26ImageTypeLimit%3D1%26IsMissing%3DFalse%26SeriesId%3D$INFO[ListItemAbsolute(0).Property(series_id)]</value>
		<value condition="Container.Content(seasons) + Integer.IsGreater(Window(home).Property(tvshow.watchedepisodes),0) + Integer.IsGreater(Window(home).Property(tvshow.unwatchedepisodes),0)">videodb://inprogresstvshows/$INFO[Window(home).Property(tvshow.dbid)]/-2/?tvshowid=$INFO[Window(home).Property(tvshow.dbid)]</value>
	</variable>
	<variable name="InfoDialog_NextUp_Content">
		<value condition="!String.IsEmpty(Container.Pluginname) + !String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon)"></value>
		<value condition="Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FuserId%3D%7Buserid%7D%26Limit%3D%7BItemLimit%7D%26Filters%3D%7Bfield_filters%7D%26format%3Djson%26ImageTypeLimit%3D1%26IsMissing%3DFalse%26SeriesId%3D$INFO[ListItem.Property(id)]</value>
		<value condition="Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0) + !String.IsEmpty(ListItem.DBID)">videodb://inprogresstvshows/$INFO[ListItem.DBID]/-2/?tvshowid=$INFO[ListItem.DBID]</value>
	</variable>
	<variable name="InfoDialog_MoreLikeThis_Content">
		<value condition="!String.IsEmpty(Container.Pluginname) + !String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon)"></value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Movies&amp;url=%7Bserver%7D%2Femby%2FItems%2F$INFO[ListItem.Property(id)]%2FSimilar%3FuserId%3D%7Buserid%7D%26Limit%3D%7BItemLimit%7D%26format%3Djson%26ImageTypeLimit%3D1%26IsMissing%3DFalse%26Filters%3D%7Bfield_filters%7D</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.DBID)">plugin://script.embuary.helper/?info=getsimilar&amp;dbid=$INFO[ListItem.DBID]&amp;type=movie</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.DBID)">plugin://script.embuary.helper/?info=getsimilar&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow</value>
	</variable>
	<variable name="InfoDialog_Season_Content_Headline">
		<value condition="String.StartsWith(ListItem.Episode,S) | ListItem.Property(IsSpecial)">$LOCALIZE[31307]</value>
		<value>$LOCALIZE[31259] $INFO[ListItem.Season]</value>
	</variable>
	<variable name="InfoDialog_Season_Content">
		<value condition="!String.IsEmpty(Container.Pluginname) + !String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon)"></value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEqual(ListItem.DBType,episode)">plugin://plugin.video.embycon/?media_type=tvshows&amp;mode=GET_CONTENT&amp;use_cache=false&amp;url=%7Bserver%7D%2F%2Femby%2FShows%2F$INFO[ListItem.Property(id)]%2FSeasons%3FuserId%3D%7Buserid%7D%26Fields%3DItemCounts%252CPrimaryImageAspectRatio%252CBasicSyncInfo%252CCanDelete%252CMediaSourceCount</value>
		<value condition="!String.IsEmpty(ListItem.DBID) + !String.IsEqual(ListItem.DBType,episode)">plugin://script.embuary.helper/?info=getseasons&amp;dbid=$INFO[ListItem.DBID]&amp;allseasons=false</value>
		<value condition="!String.IsEmpty(ListItem.DBID)">plugin://script.embuary.helper/?info=getseasons&amp;title=$INFO[ListItem.TVShowTitle]&amp;allseasons=false</value>
	</variable>
	<!-- Embcon widget vars -->
	<variable name="EmbyConLabel">
		<value condition="!Skin.HasSetting(HideEmbyConLabel)"> [COLOR text_sublabel](EmbyCon)[/COLOR]</value>
	</variable>
	<variable name="RecentEpisodes_Mainlabel">
		<value>$INFO[ListItem.TVShowTitle]</value>
	</variable>
	<variable name="RecentEpisodes_Sublabel">
		<value condition="String.IsEqual(ListItem.DBType,episode)">$VAR[ListItemSeasonEpisode]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>
	<variable name="HeaderCustomDeviceName">
		<value condition="Skin.HasSetting(CustomDeviceName) + !String.IsEmpty(Skin.String(CustomDeviceName_label))">$INFO[Skin.String(CustomDeviceName_label)]</value>
		<value>embuary</value>
	</variable>
	<variable name="View59Headline">
		<value condition="String.Contains(Container.Folderpath,plugin.video.embycon) + [String.Contains(Container.Folderpath,media_type=season) | String.Contains(Container.Folderpath,media_type=series)] + !Container.HasParent">$INFO[Container.ListItemAbsolute(0).TvShowTitle]</value>
		<value condition="String.Contains(Container.Folderpath,plugin.video.embycon) + [String.Contains(Container.Folderpath,media_type=season) | String.Contains(Container.Folderpath,media_type=series)] + Container.HasParent">$INFO[Container.ListItemAbsolute(1).TvShowTitle]</value>
		<value condition="String.IsEmpty(Container.ShowTitle)">$LOCALIZE[20360]</value>
		<value condition="!String.IsEqual(Container.Foldername,Container.ShowTitle) + String.IsEqual(Container.Foldername,$LOCALIZE[20366])">$INFO[Container.ShowTitle] - $LOCALIZE[20360]</value>
		<value condition="!String.IsEqual(Container.Foldername,Container.ShowTitle)">$INFO[Container.ShowTitle]$INFO[Container.Foldername, - ]</value>
		<value condition="String.IsEqual(Container.Foldername,Container.ShowTitle)">$INFO[Container.ShowTitle] - $LOCALIZE[20360]</value>
		<value>$INFO[Container.Foldername]</value>
	</variable>
	<variable name="ContainerContentPrefix">
		<value condition="Window.IsVisible(script-globalsearch.xml) | Window.IsVisible(script-globalsearch-main.xml)">Globalsearch - </value>
		<value condition="[String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon) | Window.IsVisible(1131)] + !Skin.HasSetting(HideEmbyConLabel)">EmbyCon - </value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://plugin.video.emby/) | Window.IsVisible(1130)">Emby - </value>
	</variable>
	<variable name="EpisodesSpecialsHeadline">
		<value condition="String.StartsWith(ListItem.Episode,S) | ListItem.Property(IsSpecial)">$LOCALIZE[20381]</value>
		<value>$LOCALIZE[20360]</value>
	</variable>
	<variable name="ContainerContent">
		<value condition="Window.IsVisible(dialogpvrinfo.xml)">$LOCALIZE[19047]</value>
		<value condition="Window.IsVisible(addoninformation)">$LOCALIZE[24003]</value>
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(ListItem.DBType,album)">$LOCALIZE[10523]</value>
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(ListItem.DBType,artist)">$LOCALIZE[21891]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,tvshow)">$LOCALIZE[20351]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,movie)">$LOCALIZE[10524]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,episode)">$LOCALIZE[20352]</value>
		<value condition="Window.IsVisible(favourites)">$LOCALIZE[1036]</value>
		<value condition="Window.IsVisible(script-globalsearch.xml) | Window.IsVisible(script-globalsearch-main.xml)">$LOCALIZE[283]</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://plugin.video.emby/) + String.Contains(Container.FolderPath,type=playlists)">$LOCALIZE[136]</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://plugin.video.emby/) + String.Contains(Container.FolderPath,type=homevideos)">$LOCALIZE[31187]</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://plugin.video.emby/) + String.Contains(Container.FolderPath,type=books)">$LOCALIZE[31262]</value>
		<value condition="Window.IsVisible(1114)">$LOCALIZE[135]</value>
		<value condition="Window.IsVisible(1115)">$LOCALIZE[283]</value>
		<value condition="Window.IsVisible(1130)">$INFO[Control.GetLabel(199),, ]$LOCALIZE[31253]</value>
		<value condition="Window.IsVisible(1131)">$INFO[Control.GetLabel(199),, ]$LOCALIZE[31253]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies/genres/)">$INFO[Container.Foldername]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows/genres/)">$INFO[Container.Foldername]</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://script.skin.helper.widgets/?action=browsegenres)">$LOCALIZE[135]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide2.xml)">$LOCALIZE[31154]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml)">$LOCALIZE[31154]</value>
		<value condition="Window.IsVisible(tvtimerrules)">$LOCALIZE[19138]</value>
		<value condition="Window.IsVisible(tvtimers)">$LOCALIZE[19040]</value>
		<value condition="Window.IsVisible(subtitlesearch)">$LOCALIZE[287]</value>
		<value condition="Window.IsVisible(pictures)">$LOCALIZE[1213]</value>
		<value condition="Window.IsVisible(EventLog.xml)">$LOCALIZE[31108]</value>
		<value condition="Window.IsVisible(musicplaylisteditor)">$LOCALIZE[10503]</value>
		<value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
		<value condition="Window.IsVisible(smartplaylisteditor)">$LOCALIZE[10136]</value>
		<value condition="Window.IsVisible(DialogPVRChannelManager.xml)">$LOCALIZE[19199]</value>
		<value condition="Window.IsVisible(pvrgroupmanager)">$LOCALIZE[19048]</value>
		<value condition="Window.IsVisible(skinsettings)">$LOCALIZE[31058]</value>
		<value condition="Window.IsVisible(filemanager)">$LOCALIZE[7]</value>
		<value condition="Window.IsVisible(musicplaylist)">$LOCALIZE[10500]</value>
		<value condition="Window.IsVisible(videoplaylist)">$LOCALIZE[10028]</value>
		<value condition="Window.IsVisible(videobookmarks)">$LOCALIZE[298]</value>
		<value condition="Window.IsVisible(systeminfo)">$LOCALIZE[138]</value>
		<value condition="Window.IsVisible(profiles)">$LOCALIZE[10130]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(livetv)">$LOCALIZE[19166]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(movies)">$LOCALIZE[10524]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(episodes)">$LOCALIZE[20352]</value>
		<value condition="Window.IsVisible(DialogAddonSettings.xml)">$INFO[Control.GetLabel(2)]</value>
		<value condition="Window.IsVisible(SettingsCategory.xml)">$LOCALIZE[5]: $INFO[Control.GetLabel(2)]</value>
		<value condition="Window.IsVisible(Settings.xml)">$LOCALIZE[5]</value>
		<value condition="Window.IsVisible(1120)">$LOCALIZE[31173]</value>
		<value condition="Window.IsVisible(1121)">$LOCALIZE[31172]</value>
		<value condition="Window.IsVisible(1122)">$LOCALIZE[31174]</value>
		<value condition="Window.IsVisible(1123)">$LOCALIZE[31251]</value>
		<value condition="Window.IsVisible(1124)">$LOCALIZE[31252]</value>
		<value condition="!String.IsEmpty(Container.ShowTitle)">$INFO[Container.ShowTitle]</value>
		<value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[19069]</value>
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[19142]</value>
		<value condition="String.StartsWith(Container.Folderpath,androidapp://)">$LOCALIZE[20244]</value>
		<value condition="!String.IsEmpty(Container.Foldername) + String.StartsWith(Container.Folderpath,plugin://) + !String.StartsWith(Container.Folderpath,plugin://plugin.video.emby)">$INFO[Container.Foldername]</value>
		<value condition="String.StartsWith(Container.Folderpath,videodb://movies/sets/)">$INFO[Container.Foldername]</value>
		<value condition="Container.Content(sets)">$LOCALIZE[31169]</value>
		<value condition="Container.Content(movies)">$LOCALIZE[342]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(seasons)">$LOCALIZE[33054]</value>
		<value condition="Container.Content(artists)">$LOCALIZE[133]</value>
		<value condition="Container.Content(songs)">$LOCALIZE[134]</value>
		<value condition="Container.Content(albums)">$LOCALIZE[132]</value>
		<value condition="Container.Content(episodes)">$LOCALIZE[20360]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies)">$LOCALIZE[342]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="String.StartsWith(Container.FolderPath,musicdb://)">$LOCALIZE[2]</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://plugin.video.emby/) + Window.IsVisible(mymusicnav.xml)">$LOCALIZE[292]</value>
		<value condition="Window.IsVisible(mymusicnav.xml)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(myvideonav.xml)">$LOCALIZE[3]</value>
		<value condition="Window.IsVisible(games)">$LOCALIZE[10821]</value>
		<value>$INFO[Container.Foldername]</value>
	</variable>
	<variable name="ContainerCountLabel">
		<value condition="Window.IsVisible(script-globalsearch.xml)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(seasons) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(episodes) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="String.StartsWith(Container.FolderPath,pvr://) + !Window.IsVisible(dialogpvrinfo.xml)">$INFO[Container.NumItems]</value>
		<value condition="Window.IsVisible(mypvrguide.xml) + !Window.IsVisible(dialogpvrinfo.xml)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(sets) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(movies) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(tvshows) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(albums) + !Window.IsVisible(musicinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(songs) + !Window.IsVisible(musicinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(artists) + !Window.IsVisible(musicinformation)">$INFO[Container.NumItems]</value>
	</variable>
	<!-- background -->
	<variable name="BackgroundSource">
		<!-- global static -->
		<value condition="Skin.HasSetting(ShowStaticBackgroundImage) + Skin.HasSetting(ShowStaticBackgroundImageGlobally) + !String.IsEmpty(Skin.String(StaticBackgroundImage))">$INFO[Skin.String(StaticBackgroundImage)]</value>
		<!-- based on listitems -->
		<value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)">$INFO[Container(750).ListItemAbsolute(0).Icon]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(207)">$INFO[Container(207).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(208)">$INFO[Container(208).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(209)">$INFO[Container(209).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(210)">$INFO[Container(210).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(211)">$INFO[Container(211).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(212)">$INFO[Container(212).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(213)">$INFO[Container(213).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(214)">$INFO[Container(214).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(215)">$INFO[Container(215).ListItem.Property(Fanart)]</value>
		<value condition="!String.IsEmpty(Window.Property(background))">$INFO[Window.Property(background)]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + !String.IsEmpty(Container(2003).ListItem.Icon) + !Container.OnNext + !Container.OnPrevious">$INFO[Container(2003).ListItem.Icon]</value>
		<value condition="[Window.IsMedia | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<!-- static for non listitems -->
		<value condition="Skin.HasSetting(ShowStaticBackgroundImage) + !String.IsEmpty(Skin.String(StaticBackgroundImage))">$INFO[Skin.String(StaticBackgroundImage)]</value>
		<!-- non listitem fanarts -->
		<value condition="String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon) + !String.IsEmpty(Window(home).Property(plugin.video.embycon-random-gb))">$INFO[Window(home).Property(plugin.video.embycon-random-gb)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(EmbuaryBackground))">$INFO[Window(home).Property(EmbuaryBackground)]</value>
		<value>$INFO[Window(home).Property(plugin.video.embycon-random-gb)]</value>
	</variable>
	<variable name="FakeButtonAddonInfo13">
		<value condition="String.EndsWith(Control.GetLabel(13),(*))">$LOCALIZE[19074]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PartyModeButton">
		<value condition="MusicPartyMode.Enabled">$LOCALIZE[588]</value>
		<value>$LOCALIZE[589]</value>
	</variable>
	<variable name="ListItemClearlogo">
		<value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)">icons/misc/tmdb.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(Container.ShowTitle) + !String.IsEmpty(ListItem(1).Art(tvshow.clearlogo))">$INFO[ListItem(1).Art(tvshow.clearlogo)]</value>
	</variable>
	<variable name="GlobalSearchIconTVShows">
		<value condition="!String.IsEmpty(ListItem.Property(art(clearart)))">$INFO[ListItem.Property(art(landscape))]</value>
		<value>ListItem.Art(fanart)</value>
	</variable>
	<variable name="IconBanner">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
	</variable>
	<variable name="IconLandscape">
		<value condition="Window.IsVisible(videobookmarks) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<!-- pvr -->
		<value condition="!String.IsEmpty(ListItem.EpgEventIcon)">$INFO[ListItem.EpgEventIcon]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<!-- episodes -->
		<value condition="Window.IsVisible(1115) + String.IsEqual(ListItem.DBType,episode) + !String.StartsWith(ListItem.Art(thumb),Default)">$VAR[IconEpisodeThumb]</value>
		<value condition="[Window.IsVisible(movieinformation) | Window.IsVisible(favourites)] + [String.IsEqual(ListItem.DBType,episode) | !String.IsEmpty(ListItem.Episode)] + !String.StartsWith(ListItem.Art(thumb),Default)">$VAR[IconEpisodeThumb]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + Window.IsMedia + !String.StartsWith(ListItem.Art(thumb),Default)">$VAR[IconEpisodeThumb]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<!-- tvshows -->
		<value condition="[String.IsEqual(ListItem.DBType,season) | Container.Content(seasons)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(season.landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,season) | Container.Content(seasons)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<!-- movies -->
		<value condition="[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,set) | Container.Content(movies)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,set) | Container.Content(movies)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<!-- other -->
		<value condition="[Container.Content(videos) | String.IsEqual(ListItem.DBType,video)] + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape)) + [!String.IsEmpty(ListItem.DBType) | ListItem.IsFolder | String.StartsWith(ListItem.Icon,Default) | String.StartsWith(ListItem.Path,plugin://) | Window.IsVisible(addonbrowser) | Window.IsVisible(programs) | Container.Content(addons)]">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart)) + [!String.IsEmpty(ListItem.DBType) | ListItem.IsFolder | String.StartsWith(ListItem.Icon,Default) | String.StartsWith(ListItem.Path,plugin://) | Window.IsVisible(addonbrowser) | Window.IsVisible(programs) | Container.Content(addons)]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
		<value condition="!String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconEpisodeThumb">
		<value condition="String.IsEqual(ListItem.Art(thumb),OverlaySpoiler.png)">special://skin/extras/themes/$VAR[SkinTheme]/unwatched.jpg</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconListView">
		<value condition="Window.IsVisible(MyPVRRecordings.xml) + !String.IsEqual(ListItem.ActualIcon,ListItem.Icon)">$INFO[ListItem.ActualIcon]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconPoster">
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster)) + String.IsEqual(ListItem.DBType,season) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + String.IsEqual(ListItem.Label,All)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconSquare">
		<value condition="Window.IsVisible(MyPVRRecordings.xml) + !String.IsEqual(ListItem.ActualIcon,ListItem.Icon)">$INFO[ListItem.ActualIcon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb)) + !String.StartsWith(ListItem.Art(thumb),Default)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="PVRWidgetMainListLabel">
		<value condition="!String.IsEmpty(ListItem.Property(IsDummy))">$INFO[ListItem.Label2]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Channelname)">$INFO[ListItem.Channelname]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="ThumbMainListLabel">
		<value condition="Window.IsVisible(music) + !String.IsEmpty(ListItem.AlbumArtist)">$INFO[ListItem.AlbumArtist]</value>
		<value condition="Window.IsVisible(music) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value>$VAR[MainListLabel]</value>
	</variable>
	<variable name="ThumbSubListLabel">
		<value condition="Window.IsVisible(music) + !String.IsEmpty(ListItem.Album)">$INFO[ListItem.Album]</value>
		<value condition="Window.IsVisible(music) + !String.IsEmpty(ListItem.Artist)">$LOCALIZE[557]</value>
		<value>$VAR[SubListLabel]</value>
	</variable>
	<variable name="MainListLabel">
		<value condition="Window.IsVisible(DialogPVRChannelsOSD.xml)">$INFO[ListItem.ChannelName]$INFO[ListItem.Title, - ]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) + [String.IsEqual(ListItem.Title,ListItem.Label) | String.IsEmpty(ListItem.Title)]">$INFO[ListItem.Label]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) + !String.IsEmpty(ListItem.Title) + !String.IsEqual(Container.Viewmode,$LOCALIZE[537]) + !String.IsEqual(Container.Viewmode,$LOCALIZE[31199])">$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime,,: ]$INFO[ListItem.Title]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml)">$LOCALIZE[19055]</value>
		<value condition="String.IsEqual(ListItem.DBType,season) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + String.IsEqual(ListItem.Label,All)">$LOCALIZE[20366]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml)">$INFO[ListItem.Property(NextDate),, - ]$INFO[ListItem.Label]$INFO[ListItem.Property(ShortTime), (,)]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide2.xml)">$INFO[ListItem.Label]$INFO[ListItem.Property(ShortTime), (,)]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$VAR[ListItemSeasonEpisode]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.Label]</value>
		<value condition="Container.Content(songs) + String.StartsWith(Container.Folderpath,musicdb://songs/)">$INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs) + Integer.IsGreater(ListItem.Tracknumber,0) + !String.IsEmpty(ListItem.title)">$INFO[ListItem.Tracknumber,,. ]$INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs) + !String.IsEmpty(ListItem.title)">$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,song) + !String.IsEmpty(ListItem.title)">$INFO[ListItem.Tracknumber,,. ]$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Addonname)">$INFO[ListItem.Addonname]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="SubListLabel">
		<value condition="Window.IsVisible(DialogPVRChannelsOSD.xml)">$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml)">$INFO[ListItem.Property(NextSeasonNumber),S,]$INFO[ListItem.Property(NextEpisodeNumber),:E]$INFO[ListItem.Property(NextTitle), - ]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide2.xml)">$INFO[ListItem.Property(NextSeasonNumber),S,]$INFO[ListItem.Property(NextEpisodeNumber),:E]$INFO[ListItem.Property(NextTitle), - ]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://) + ![String.IsEqual(ListItem.Title,ListItem.Label) | String.IsEmpty(ListItem.Title)]">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,set)">[CAPITALIZE]$LOCALIZE[31189][/CAPITALIZE]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.AlbumArtist)">$INFO[ListItem.AlbumArtist]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEqual(ListItem.DBType,artist)">$LOCALIZE[557]</value>
		<value condition="Window.IsVisible(addonbrowser)">$INFO[ListItem.AddonType]</value>
		<value condition="Container.Content(images) + !String.IsEqual(ListItem.size,0 B)">$INFO[ListItem.size]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(albums) + !String.IsEmpty(ListItem.AlbumArtist)">$INFO[ListItem.AlbumArtist]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(tvshow)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(movie)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(season)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Container.Content(episode)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Container.Content(actors)">$LOCALIZE[20337]</value>
		<value condition="Container.Content(directors)">$LOCALIZE[20339]</value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.audio.prime_music) + String.Contains(ListItem.Filenameandpath,playTrack)">$INFO[ListItem.Artist]</value>
	</variable>
	<variable name="RightListLabel">
		<value condition="Window.IsVisible(addonbrowser) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
		<value condition="Window.IsVisible(addonbrowser) + !String.IsEmpty(ListItem.AddonVersion)">$INFO[ListItem.AddonVersion]</value>
		<value condition="!String.IsEmpty(ListItem.Duration)">$VAR[DurationMinutes]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20453]]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Duration]</value>
		<value condition="Window.IsVisible(MyPics.xml) + !String.IsEmpty(ListItem.Date)">$INFO[ListItem.Date]</value>
		<value condition="ListItem.IsFolder + !String.IsEqual(ListItem.Label,$LOCALIZE[35250])">$LOCALIZE[19076]</value>
	</variable>
	<variable name="RightListLabel2">
		<value condition="Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(TotalSeasons))">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36905]]</value>
		<value condition="!String.IsEmpty(ListItem.Duration) + !String.IsEmpty(ListItem.EndTimeResume)">$INFO[ListItem.EndTimeResume,$LOCALIZE[31037] ]</value>
		<value condition="!String.IsEmpty(ListItem.Duration) + !String.IsEmpty(ListItem.EndTime)">$INFO[ListItem.EndTime,$LOCALIZE[31037] ]</value>
		<value condition="Window.IsVisible(MyPics.xml) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="VisibleContainer">
		<value condition="Control.IsVisible(50)">50</value>
		<value condition="Control.IsVisible(51)">51</value>
		<value condition="Control.IsVisible(52)">52</value>
		<value condition="Control.IsVisible(53)">53</value>
		<value condition="Control.IsVisible(54)">54</value>
		<value condition="Control.IsVisible(55)">55</value>
	</variable>
	<variable name="ListItemResolution">
		<value condition="String.IsEqual(ListItem.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,720)">720p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,480)">480p</value>
		<value>$INFO[ListItem.VideoResolution]</value>
	</variable>
	<variable name="GuideListItemEpisodeName">
		<value condition="!String.IsEmpty(ListItem.EpisodeName) | !String.IsEmpty(ListItem.Episode)">$VAR[ListItemSeasonEpisode]$INFO[ListItem.EpisodeName]</value>
	</variable>
	<variable name="ListItemEpisodeName">
		<value condition="String.StartsWith(ListItem.Path,pvr://) + [!String.IsEmpty(ListItem.EpisodeName) | !String.IsEmpty(ListItem.Episode)]">$VAR[ListItemSeasonEpisode]$INFO[ListItem.EpisodeName]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !Window.IsVisible(pvrguideinfo) + !Control.IsVisible(57)">$LOCALIZE[515]: $INFO[ListItem.Genre]</value>
		<value condition="ListItem.IsFolder">$LOCALIZE[19076]</value>
		<value>[COLOR text_sublabel]$LOCALIZE[31156][/COLOR]</value>
	</variable>
	<variable name="PlayerEpisodeName">
		<value condition="Pvr.IsPlayingRadio + !String.StartsWith(MusicPlayer.Title,pvr) + !String.IsEqual(MusicPlayer.Artist,MusicPlayer.Channelname)">$INFO[MusicPlayer.Artist,, - ]$INFO[MusicPlayer.Title]</value>
		<value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Album)">$INFO[MusicPlayer.Album,$LOCALIZE[558]: ]$INFO[MusicPlayer.Year, (,)]</value>
		<value condition="Player.HasVideo + String.StartsWith(Player.Filenameandpath,pvr://) + [!String.IsEmpty(VideoPlayer.EpisodeName) | !String.IsEmpty(VideoPlayer.Episode)]">$VAR[PlayerSeasonEpisode]$INFO[VideoPlayer.EpisodeName]</value>
		<value condition="Player.HasVideo + !Window.IsVisible(fullscreeninfo) + !String.IsEmpty(VideoPlayer.Genre)">$LOCALIZE[515]: $INFO[VideoPlayer.Genre]</value>
		<value>[COLOR text_sublabel]$LOCALIZE[31156][/COLOR]</value>
	</variable>
	<variable name="PlayerDiscArt">
		<value condition="!String.IsEmpty(Container(2000).ListItem.Art(discart))">$INFO[Container(2000).ListItem.Art(discart)]</value>
		<value>common/white.jpg</value>
	</variable>
	<variable name="PlayerResolution">
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,720)">720p</value>
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,480)">480p</value>
		<value>$INFO[VideoPlayer.VideoResolution]</value>
	</variable>
	<variable name="PlayerTimeRemaining">
		<value condition="Integer.IsGreater(Player.TimeRemaining,59)">$INFO[Player.TimeRemaining]</value>
		<value>$INFO[Player.TimeRemaining(ss)] $LOCALIZE[31077]</value>
	</variable>
	<variable name="PlayerTime">
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventElapsedTime]</value>
		<value condition="Integer.IsGreater(Player.Duration(h),0)">$INFO[Player.Time(h:mm:ss)]</value>
		<value>$INFO[Player.Time(mm:ss)]</value>
	</variable>
	<variable name="PlayerDuration">
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventDuration]</value>
		<value condition="Integer.IsGreater(Player.Duration(h),0)">$INFO[Player.Duration(h:mm:ss)]</value>
		<value>$INFO[Player.Duration(mm:ss)]</value>
	</variable>
	<variable name="PlayerFinishTime">
		<value condition="!String.Contains(Player.Art(thumb),KodiCinemaMode) + VideoPlayer.HasEpg + !String.IsEmpty(PVR.EpgEventFinishTime)">$INFO[PVR.EpgEventFinishTime]</value>
		<value condition="!String.Contains(Player.Art(thumb),KodiCinemaMode) + !VideoPlayer.HasEpg + !String.IsEmpty(VideoPlayer.FinishTime)">$INFO[VideoPlayer.FinishTime]</value>
	</variable>
	<variable name="PlayerPlayPauseLabel">
		<value condition="Player.Paused">$LOCALIZE[31096]</value>
		<value>$LOCALIZE[31095]</value>
	</variable>
	<variable name="PlayerRecordingLabel">
		<value condition="PVR.IsRecordingPlayingChannel">$LOCALIZE[19059]</value>
		<value>$LOCALIZE[264]</value>
	</variable>
	<variable name="DurationMinutes">
		<value condition="String.IsEqual(ListItem.DBtype,song)">$INFO[ListItem.Duration]</value>
		<value condition="Integer.IsGreater(ListItem.Duration(mins),1)">$INFO[ListItem.Duration(mins)] $LOCALIZE[31089]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),1)">$INFO[ListItem.Duration(mins)] $LOCALIZE[31090]</value>
		<value>$INFO[ListItem.Duration(secs),, $LOCALIZE[31077]]</value>
	</variable>
	<variable name="PVRPlayerDuration">
		<value condition="Integer.IsGreater(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31089]</value>
		<value condition="Integer.IsEqual(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31090]</value>
		<value>$INFO[PVR.EpgEventDuration(secs),, $LOCALIZE[31077]]</value>
	</variable>
	<variable name="PlayerDurationMinutes">
		<value condition="Player.HasAudio">$INFO[Player.Duration]</value>
		<value condition="VideoPlayer.HasEpg + Integer.IsGreater(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31089]</value>
		<value condition="VideoPlayer.HasEpg + Integer.IsEqual(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31090]</value>
		<value condition="Integer.IsGreater(Player.Duration(mins),1)">$INFO[Player.Duration(mins)] $LOCALIZE[31089]</value>
		<value condition="Integer.IsEqual(Player.Duration(mins),1)">$INFO[Player.Duration(mins)] $LOCALIZE[31090]</value>
		<value>$INFO[Player.Duration(secs),, $LOCALIZE[31077]]</value>
	</variable>
	<variable name="ListItemAudioChannels">
		<value condition="Integer.IsEqual(ListItem.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,2)">2.0</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,4)">4.0</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,5)">5.0</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,6)">5.1</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,7)">6.1</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,8)">7.1</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,10)">9.1</value>
		<value>$INFO[ListItem.AudioChannels, $LOCALIZE[10127]]</value>
	</variable>
	<variable name="ListItemAudio">
		<value condition="String.Contains(ListItem.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="String.Contains(ListItem.AudioCodec,dca) | String.Contains(ListItem.AudioCodec,dts)">DTS</value>
		<value condition="String.Contains(ListItem.AudioCodec,truehd)">TrueHD</value>
		<value condition="String.Contains(ListItem.AudioCodec,eac3)">Dolby+</value>
		<value condition="String.Contains(ListItem.AudioCodec,ac3)">AC3</value>
		<value condition="String.Contains(ListItem.AudioCodec,mp3)">MP3</value>
		<value condition="String.Contains(ListItem.AudioCodec,mp2)">MP2</value>
		<value condition="String.Contains(ListItem.AudioCodec,mp1)">MP1</value>
		<value condition="String.Contains(ListItem.AudioCodec,vorbis)">Vorbis</value>
		<value condition="String.Contains(ListItem.AudioCodec,aac)">AAC</value>
		<value condition="String.Contains(ListItem.AudioCodec,wmav2)">WMA</value>
		<value condition="String.Contains(ListItem.AudioCodec,wmapro)">WMA Pro</value>
		<value condition="String.Contains(ListItem.AudioCodec,pcm)">PCM</value>
		<value condition="String.Contains(ListItem.AudioCodec,cook)">Cook</value>
		<value>$INFO[ListItem.AudioCodec]</value>
	</variable>
	<variable name="PlayerAudioChannels">
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,2)">2.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,4)">4.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,5)">5.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,6)">5.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,7)">6.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,8)">7.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,10)">9.1</value>
		<value>$INFO[VideoPlayer.AudioChannels, $LOCALIZE[10127]]</value>
	</variable>
	<variable name="PlayerAudio">
		<value condition="String.Contains(VideoPlayer.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,dca) | String.Contains(VideoPlayer.AudioCodec,dts)">DTS</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,truehd)">TrueHD</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,eac3)">Dolby+</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,ac3)">AC3</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,mp3)">MP3</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,mp2)">MP2</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,mp1)">MP1</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,vorbis)">Vorbis</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,aac)">AAC</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,wmav2)">WMA</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,wmapro)">WMA Pro</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,pcm)">PCM</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,cook)">Cook</value>
		<value>$INFO[VideoPlayer.AudioCodec]</value>
	</variable>
	<variable name="VideoInfoButton8">
		<value condition="String.IsEqual(ListItem.DBType,season) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + String.IsEqual(ListItem.Label,All)">$LOCALIZE[31011]</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20366])">$LOCALIZE[31011]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$LOCALIZE[31013]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow)">$LOCALIZE[31011]</value>
		<value condition="String.IsEqual(ListItem.DBType,set)">$LOCALIZE[1024]</value>
		<value condition="ListItem.IsResumable">$LOCALIZE[13404]</value>
		<value condition="Integer.IsGreater(ListItem.PlayCount,0)">$LOCALIZE[31009]</value>
		<value condition="ListItem.IsFolder">$LOCALIZE[1024]</value>
		<value>$LOCALIZE[31010]</value>
	</variable>
	<variable name="PVRInfoButton8">
		<value condition="Window.IsVisible(pvrrecordinginfo)">$LOCALIZE[31010]</value>
		<value>$LOCALIZE[19687]</value>
	</variable>
	<variable name="TinyInfoDialogHeadline">
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + !String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml)">$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.AlbumArtist,, - ]$INFO[ListItem.Album]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>
	<variable name="TinyInfoDialogPlot">
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Season,S,:]$INFO[VideoPlayer.Episode,E, [CR][CR]]$VAR[PlayerDurationMinutes,$LOCALIZE[180]: ,[CR][CR]]$INFO[VideoPlayer.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,Episode)">$VAR[ListItemSeasonEpisode]$INFO[ListItem.Title,,[CR][CR]]$VAR[DurationMinutes,$LOCALIZE[180]: ,[CR][CR]]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$VAR[DurationMinutes,$LOCALIZE[180]: ,[CR][CR]]$INFO[ListItem.Artist]$INFO[ListItem.Album, - ,[CR][CR]]$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="String.IsEqual(ListItem.DBType,musicvideo)">$VAR[DurationMinutes,$LOCALIZE[180]: ]</value>
		<value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value>$LOCALIZE[19055]</value>
	</variable>
	<variable name="TinyGlobalSearchPlot">
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Plot))">$INFO[Container(100).ListItem.Property(Plot)]</value>
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Artist_Description))">$INFO[Container(100).ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Album_Description))">$INFO[Container(100).ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Comment))">$INFO[Container(100).ListItem.Property(Comment)]</value>
	</variable>
	<variable name="BoxSetItems">
		<value></value>
	</variable>
	<variable name="ListViewPlot">
		<value condition="String.IsEqual(ListItem.DBType,set)">$INFO[ListItem.Plot,,[CR][CR]]$INFO[Container(2001).ListItemAbsolute(0).Label,$LOCALIZE[31192]:[CR]]$INFO[Container(2001).ListItemAbsolute(0).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(1).Label]$INFO[Container(2001).ListItemAbsolute(1).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(2).Label]$INFO[Container(2001).ListItemAbsolute(2).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(3).Label]$INFO[Container(2001).ListItemAbsolute(3).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(4).Label]$INFO[Container(2001).ListItemAbsolute(4).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(5).Label]$INFO[Container(2001).ListItemAbsolute(5).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(6).Label]$INFO[Container(2001).ListItemAbsolute(6).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(7).Label]$INFO[Container(2001).ListItemAbsolute(7).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(8).Label]$INFO[Container(2001).ListItemAbsolute(8).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(9).Label]$INFO[Container(2001).ListItemAbsolute(9).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(10).Label]$INFO[Container(2001).ListItemAbsolute(10).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(11).Label]$INFO[Container(2001).ListItemAbsolute(11).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(12).Label]$INFO[Container(2001).ListItemAbsolute(12).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(13).Label]$INFO[Container(2001).ListItemAbsolute(13).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(14).Label]$INFO[Container(2001).ListItemAbsolute(14).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(15).Label]$INFO[Container(2001).ListItemAbsolute(15).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(16).Label]$INFO[Container(2001).ListItemAbsolute(16).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(17).Label]$INFO[Container(2001).ListItemAbsolute(17).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(18).Label]$INFO[Container(2001).ListItemAbsolute(18).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(19).Label]$INFO[Container(2001).ListItemAbsolute(19).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(20).Label]$INFO[Container(2001).ListItemAbsolute(20).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(21).Label]$INFO[Container(2001).ListItemAbsolute(21).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(22).Label]$INFO[Container(2001).ListItemAbsolute(22).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(23).Label]$INFO[Container(2001).ListItemAbsolute(23).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(24).Label]$INFO[Container(2001).ListItemAbsolute(24).Year, (,)[CR]]$INFO[Container(2001).ListItemAbsolute(25).Label]$INFO[Container(2001).ListItemAbsolute(25).Year, (,)[CR]]</value>
		<value condition="Window.IsVisible(tvrecordings)">$INFO[ListItem.Plot]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
		<value>$INFO[ListItem.Tagline,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="SetViewPlot">
		<value condition="String.IsEqual(ListItem.DBType,set)">$INFO[ListItem.Plot,,[CR][CR]]$INFO[Container(2001).ListItemAbsolute(0).Label,$LOCALIZE[31192]: ]$INFO[Container(2001).ListItemAbsolute(0).Year, (,)]$INFO[Container(2001).ListItemAbsolute(1).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(1).Year, (,)]$INFO[Container(2001).ListItemAbsolute(2).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(2).Year, (,)]$INFO[Container(2001).ListItemAbsolute(3).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(3).Year, (,)]$INFO[Container(2001).ListItemAbsolute(4).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(4).Year, (,)]$INFO[Container(2001).ListItemAbsolute(5).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(5).Year, (,)]$INFO[Container(2001).ListItemAbsolute(6).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(6).Year, (,)]$INFO[Container(2001).ListItemAbsolute(7).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(7).Year, (,)]$INFO[Container(2001).ListItemAbsolute(8).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(8).Year, (,)]$INFO[Container(2001).ListItemAbsolute(9).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(9).Year, (,)]$INFO[Container(2001).ListItemAbsolute(10).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(10).Year, (,)]$INFO[Container(2001).ListItemAbsolute(11).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(11).Year, (,)]$INFO[Container(2001).ListItemAbsolute(12).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(12).Year, (,)]$INFO[Container(2001).ListItemAbsolute(13).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(13).Year, (,)]$INFO[Container(2001).ListItemAbsolute(14).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(14).Year, (,)]$INFO[Container(2001).ListItemAbsolute(15).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(15).Year, (,)]$INFO[Container(2001).ListItemAbsolute(16).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(16).Year, (,)]$INFO[Container(2001).ListItemAbsolute(17).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(17).Year, (,)]$INFO[Container(2001).ListItemAbsolute(18).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(18).Year, (,)]$INFO[Container(2001).ListItemAbsolute(19).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(19).Year, (,)]$INFO[Container(2001).ListItemAbsolute(20).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(20).Year, (,)]$INFO[Container(2001).ListItemAbsolute(21).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(21).Year, (,)]$INFO[Container(2001).ListItemAbsolute(22).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(22).Year, (,)]$INFO[Container(2001).ListItemAbsolute(23).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(23).Year, (,)]$INFO[Container(2001).ListItemAbsolute(24).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(24).Year, (,)]$INFO[Container(2001).ListItemAbsolute(25).Label,  /  ]$INFO[Container(2001).ListItemAbsolute(25).Year, (,)]</value>
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Tagline,[B],[/B][CR]]$INFO[ListItem.Plot]</value>
		<value>$LOCALIZE[19055]</value>
	</variable>
	<variable name="ArtistInfoPlot">
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value>$LOCALIZE[19055]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording + ListItem.HasTimerSchedule">icons/pvr/icon_timer.png</value>
		<value condition="ListItem.IsRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/icon_timer_error.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/icon_record_error.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/icon_timer_conflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/icon_timer.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/icon_recording.png</value>
	</variable>
	<variable name="VolumeIconCircle">
		<value condition="Player.Muted">0</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,10)">$INFO[Control.GetLabel(404)]</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,9)">9</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,8)">8</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,7)">7</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,6)">6</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,5)">5</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,4)">4</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,3)">3</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,2)">2</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,1)">1</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,0)">0</value>
	</variable>
	<variable name="VolumeIcon">
		<value condition="Player.Muted"></value>
		<value condition="Integer.IsGreater(player.volume,75)"></value>
		<value condition="Integer.IsGreater(player.volume,25)"></value>
		<value condition="!Integer.IsGreater(player.volume,25)"></value>
	</variable>
	<variable name="VolumeDetails">
		<value condition="!Player.Muted + Integer.IsGreaterOrEqual(player.volume,10)">$INFO[Control.GetLabel(404),,%]</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,9)">9%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,8)">8%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,7)">7%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,6)">6%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,5)">5%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,4)">4%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,3)">3%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,2)">2%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,1)">1%</value>
		<value>$LOCALIZE[31043]</value>
	</variable>
	<variable name="ExtendedProgressCircle">
		<value condition="String.IsEqual(Control.GetLabel(32),100)">100</value>
		<value condition="String.IsEqual(Control.GetLabel(32),99)">99</value>
		<value condition="String.IsEqual(Control.GetLabel(32),98)">98</value>
		<value condition="String.IsEqual(Control.GetLabel(32),97)">97</value>
		<value condition="String.IsEqual(Control.GetLabel(32),96)">96</value>
		<value condition="String.IsEqual(Control.GetLabel(32),95)">95</value>
		<value condition="String.IsEqual(Control.GetLabel(32),94)">94</value>
		<value condition="String.IsEqual(Control.GetLabel(32),93)">93</value>
		<value condition="String.IsEqual(Control.GetLabel(32),92)">92</value>
		<value condition="String.IsEqual(Control.GetLabel(32),91)">91</value>
		<value condition="String.IsEqual(Control.GetLabel(32),90)">90</value>
		<value condition="String.IsEqual(Control.GetLabel(32),89)">89</value>
		<value condition="String.IsEqual(Control.GetLabel(32),88)">88</value>
		<value condition="String.IsEqual(Control.GetLabel(32),87)">87</value>
		<value condition="String.IsEqual(Control.GetLabel(32),86)">86</value>
		<value condition="String.IsEqual(Control.GetLabel(32),85)">85</value>
		<value condition="String.IsEqual(Control.GetLabel(32),84)">84</value>
		<value condition="String.IsEqual(Control.GetLabel(32),83)">83</value>
		<value condition="String.IsEqual(Control.GetLabel(32),82)">82</value>
		<value condition="String.IsEqual(Control.GetLabel(32),81)">81</value>
		<value condition="String.IsEqual(Control.GetLabel(32),80)">80</value>
		<value condition="String.IsEqual(Control.GetLabel(32),79)">79</value>
		<value condition="String.IsEqual(Control.GetLabel(32),78)">78</value>
		<value condition="String.IsEqual(Control.GetLabel(32),77)">77</value>
		<value condition="String.IsEqual(Control.GetLabel(32),76)">76</value>
		<value condition="String.IsEqual(Control.GetLabel(32),75)">75</value>
		<value condition="String.IsEqual(Control.GetLabel(32),74)">74</value>
		<value condition="String.IsEqual(Control.GetLabel(32),73)">73</value>
		<value condition="String.IsEqual(Control.GetLabel(32),72)">72</value>
		<value condition="String.IsEqual(Control.GetLabel(32),71)">71</value>
		<value condition="String.IsEqual(Control.GetLabel(32),70)">70</value>
		<value condition="String.IsEqual(Control.GetLabel(32),69)">69</value>
		<value condition="String.IsEqual(Control.GetLabel(32),68)">68</value>
		<value condition="String.IsEqual(Control.GetLabel(32),67)">67</value>
		<value condition="String.IsEqual(Control.GetLabel(32),66)">66</value>
		<value condition="String.IsEqual(Control.GetLabel(32),65)">65</value>
		<value condition="String.IsEqual(Control.GetLabel(32),64)">64</value>
		<value condition="String.IsEqual(Control.GetLabel(32),63)">63</value>
		<value condition="String.IsEqual(Control.GetLabel(32),62)">62</value>
		<value condition="String.IsEqual(Control.GetLabel(32),61)">61</value>
		<value condition="String.IsEqual(Control.GetLabel(32),60)">60</value>
		<value condition="String.IsEqual(Control.GetLabel(32),59)">59</value>
		<value condition="String.IsEqual(Control.GetLabel(32),58)">58</value>
		<value condition="String.IsEqual(Control.GetLabel(32),57)">57</value>
		<value condition="String.IsEqual(Control.GetLabel(32),56)">56</value>
		<value condition="String.IsEqual(Control.GetLabel(32),55)">55</value>
		<value condition="String.IsEqual(Control.GetLabel(32),54)">54</value>
		<value condition="String.IsEqual(Control.GetLabel(32),53)">53</value>
		<value condition="String.IsEqual(Control.GetLabel(32),52)">52</value>
		<value condition="String.IsEqual(Control.GetLabel(32),51)">51</value>
		<value condition="String.IsEqual(Control.GetLabel(32),50)">50</value>
		<value condition="String.IsEqual(Control.GetLabel(32),49)">49</value>
		<value condition="String.IsEqual(Control.GetLabel(32),48)">48</value>
		<value condition="String.IsEqual(Control.GetLabel(32),47)">47</value>
		<value condition="String.IsEqual(Control.GetLabel(32),46)">46</value>
		<value condition="String.IsEqual(Control.GetLabel(32),45)">45</value>
		<value condition="String.IsEqual(Control.GetLabel(32),44)">44</value>
		<value condition="String.IsEqual(Control.GetLabel(32),43)">43</value>
		<value condition="String.IsEqual(Control.GetLabel(32),42)">42</value>
		<value condition="String.IsEqual(Control.GetLabel(32),41)">41</value>
		<value condition="String.IsEqual(Control.GetLabel(32),40)">40</value>
		<value condition="String.IsEqual(Control.GetLabel(32),39)">39</value>
		<value condition="String.IsEqual(Control.GetLabel(32),38)">38</value>
		<value condition="String.IsEqual(Control.GetLabel(32),37)">37</value>
		<value condition="String.IsEqual(Control.GetLabel(32),36)">36</value>
		<value condition="String.IsEqual(Control.GetLabel(32),35)">35</value>
		<value condition="String.IsEqual(Control.GetLabel(32),34)">34</value>
		<value condition="String.IsEqual(Control.GetLabel(32),33)">33</value>
		<value condition="String.IsEqual(Control.GetLabel(32),32)">32</value>
		<value condition="String.IsEqual(Control.GetLabel(32),31)">31</value>
		<value condition="String.IsEqual(Control.GetLabel(32),30)">30</value>
		<value condition="String.IsEqual(Control.GetLabel(32),29)">29</value>
		<value condition="String.IsEqual(Control.GetLabel(32),28)">28</value>
		<value condition="String.IsEqual(Control.GetLabel(32),27)">27</value>
		<value condition="String.IsEqual(Control.GetLabel(32),26)">26</value>
		<value condition="String.IsEqual(Control.GetLabel(32),25)">25</value>
		<value condition="String.IsEqual(Control.GetLabel(32),24)">24</value>
		<value condition="String.IsEqual(Control.GetLabel(32),23)">23</value>
		<value condition="String.IsEqual(Control.GetLabel(32),22)">22</value>
		<value condition="String.IsEqual(Control.GetLabel(32),21)">21</value>
		<value condition="String.IsEqual(Control.GetLabel(32),20)">20</value>
		<value condition="String.IsEqual(Control.GetLabel(32),19)">19</value>
		<value condition="String.IsEqual(Control.GetLabel(32),18)">18</value>
		<value condition="String.IsEqual(Control.GetLabel(32),17)">17</value>
		<value condition="String.IsEqual(Control.GetLabel(32),16)">16</value>
		<value condition="String.IsEqual(Control.GetLabel(32),15)">15</value>
		<value condition="String.IsEqual(Control.GetLabel(32),14)">14</value>
		<value condition="String.IsEqual(Control.GetLabel(32),13)">13</value>
		<value condition="String.IsEqual(Control.GetLabel(32),12)">12</value>
		<value condition="String.IsEqual(Control.GetLabel(32),11)">11</value>
		<value condition="String.IsEqual(Control.GetLabel(32),10)">10</value>
		<value condition="String.EndsWith(Control.GetLabel(32),9)">9</value>
		<value condition="String.EndsWith(Control.GetLabel(32),8)">8</value>
		<value condition="String.EndsWith(Control.GetLabel(32),7)">7</value>
		<value condition="String.EndsWith(Control.GetLabel(32),6)">6</value>
		<value condition="String.EndsWith(Control.GetLabel(32),5)">5</value>
		<value condition="String.EndsWith(Control.GetLabel(32),4)">4</value>
		<value condition="String.EndsWith(Control.GetLabel(32),3)">3</value>
		<value condition="String.EndsWith(Control.GetLabel(32),2)">2</value>
		<value condition="String.EndsWith(Control.GetLabel(32),1)">1</value>
		<value condition="String.EndsWith(Control.GetLabel(32),1)">1</value>
	</variable>
	<variable name="ListItemTitleLabel">
		<value condition="!String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Label)">$INFO[ListItem.Label]</value>
		<value>n/a</value>
	</variable>
	<variable name="PlayerRecordIconColor">
		<value condition="!Control.HasFocus(607) + PVR.IsRecordingPlayingChannel">red</value>
		<value condition="!Control.HasFocus(607)">white</value>
	</variable>
	<variable name="PlayerFullLabel">
		<value condition="String.IsEqual(Player.Title,emby-loading.mp4)">$LOCALIZE[20186]</value>
		<value condition="Pvr.IsPlayingRadio">$INFO[MusicPlayer.Channelname]$INFO[Player.Title, - ]</value>
		<value condition="String.Contains(Player.Art(thumb),KodiCinemaMode) + String.Contains(VideoPlayer.Title,Trailer)">$LOCALIZE[31255] - $INFO[VideoPlayer.Title]</value>
		<value condition="String.Contains(Player.Art(thumb),KodiCinemaMode)">$LOCALIZE[31255]</value>
		<value condition="String.IsEqual(VideoPlayer.Title,stream) + String.Contains(Player.Filenameandpath,/emby/videos/)">$LOCALIZE[31186]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title) + !String.Contains(MusicPlayer.Title,pvr.hts_)">$INFO[MusicPlayer.Artist,, - ]$INFO[MusicPlayer.Tracknumber,,. ]$INFO[MusicPlayer.Title]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title)">$INFO[MusicPlayer.Artist]</value>
		<value condition="VideoPlayer.Content(livetv) + String.IsEmpty(VideoPlayer.Title)">$INFO[VideoPlayer.Channelname]</value>
		<value condition="VideoPlayer.Content(livetv) + Window.IsVisible(shutdownmenu)">$INFO[VideoPlayer.Channelname]$INFO[VideoPlayer.Title, - ]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle) + [!VideoPlayer.IsFullscreen | Window.IsVisible(shutdownmenu)]">$INFO[VideoPlayer.TVShowTitle,, - ]$VAR[PlayerSeasonEpisode]$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$VAR[PlayerSeasonEpisode]$INFO[VideoPlayer.Title]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="PlayerTitleLabel">
		<value condition="String.IsEqual(Player.Title,emby-loading.mp4)">$LOCALIZE[20186]</value>
		<value condition="Pvr.IsPlayingRadio">$LOCALIZE[19021]</value>
		<value condition="String.Contains(Player.Art(thumb),KodiTrailer)">$LOCALIZE[20410]</value>
		<value condition="String.Contains(Player.Art(thumb),KodiCinemaMode)">$LOCALIZE[31255]</value>
		<value condition="String.IsEqual(VideoPlayer.Filename,stream) + String.Contains(VideoPlayer.Filenameandpath,/emby/videos/)">$LOCALIZE[31186]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title)">$INFO[MusicPlayer.Title]</value>
		<value condition="VideoPlayer.Content(livetv) | String.StartsWith(Player.Filenameandpath,pvr://)">$INFO[VideoPlayer.Channelname]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="PlayerClearlogo">
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
	</variable>
	<variable name="MusicPlayerCoverTitle">
		<value condition="!String.IsEmpty(MusicPlayer.Album)">$INFO[MusicPlayer.Album]</value>
		<value condition="!String.IsEmpty(MusicPlayer.AlbumArtist)">$INFO[MusicPlayer.AlbumArtist]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Artist)">$INFO[MusicPlayer.Artist]</value>
		<value>$INFO[MusicPlayer.Title]</value>
	</variable>
	<variable name="PlayerTimeLabels">>
		<value condition="Window.IsVisible(fullscreeninfo)">$VAR[PlayerTime]$VAR[PlayerDuration, / ]</value>
		<value>$VAR[PlayerTime]$VAR[PlayerDuration, / ]$VAR[PlayerFinishTime,  -  $LOCALIZE[31037] ]</value>
	</variable>
	<variable name="PlayerIcon">
		<value condition="!VideoPlayer.Content(livetv) + String.StartsWith(Player.Filenameandpath,pvr://) + !String.IsEmpty(Window(home).Property(Player.Channellogo))">$INFO[Window(home).Property(Player.Channellogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(Player.Icon) + !String.StartsWith(Player.Icon,default)">$INFO[Player.Icon]</value>
		<value condition="!String.IsEmpty(VideoPlayer.Cover) + !String.StartsWith(VideoPlayer.Cover,default)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Cover) + !String.StartsWith(MusicPlayer.Cover,default)">$INFO[MusicPlayer.Cover]</value>
	</variable>
	<variable name="WidePlayerIcon">
		<value condition="String.IsEqual(Player.Title,emby-loading.mp4)">icons/player/waiting.gif</value>
		<value condition="!String.StartsWith(Player.Art(thumb),special://home/addons/)">$INFO[Player.Art(thumb)]</value>
		<value condition="!String.IsEmpty(Player.Art(landscape))">$INFO[Player.Art(landscape)]</value>
		<value condition="!String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
		<value>$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="PlayerCastContent">
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-currently_playing_id))">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[Window(home).Property(plugin.video.embycon-currently_playing_id)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.DBID) + VideoPlayer.Content(episodes)">plugin://script.embuary.helper?info=getcast&amp;type=tvshow&amp;title='$ESCINFO[VideoPlayer.TVShowTitle]'</value>
		<value condition="!String.IsEmpty(VideoPlayer.DBID) + !String.IsEqual(VideoPlayer.DBID,0) + !VideoPlayer.Content(episodes)">plugin://script.embuary.helper?info=getcast&amp;type=movie&amp;dbid=$INFO[VideoPlayer.DBID]</value>
		<value condition="!String.IsEmpty(VideoPlayer.DBID) + String.IsEqual(VideoPlayer.DBID,0) + !VideoPlayer.Content(episodes)">plugin://script.embuary.helper?info=getcast&amp;type=movie&amp;title='$ESCINFO[VideoPlayer.Title]'</value>
	</variable>
	<variable name="PlayerForwardRewind">
		<value condition="Player.Forwarding4x">4x</value>
		<value condition="Player.Forwarding8x">8x</value>
		<value condition="Player.Forwarding16x">16x</value>
		<value condition="Player.Forwarding32x">32x</value>
		<value condition="Player.Rewinding4x">4x</value>
		<value condition="Player.Rewinding8x">8x</value>
		<value condition="Player.Rewinding16x">16x</value>
		<value condition="Player.Rewinding32x">32x</value>
	</variable>
	<variable name="PlayerSeekStepIcon">
		<value condition="[!String.IsEmpty(Player.SeekOffset) + !String.Contains(Player.SeekOffset,-)] | [!String.IsEmpty(Player.SeekStepSize) + !String.Contains(Player.SeekStepSize,-)]"></value>
		<value condition="[!String.IsEmpty(Player.SeekOffset) + String.Contains(Player.SeekOffset,-)] | [!String.IsEmpty(Player.SeekStepSize) + String.Contains(Player.SeekStepSize,-)]"></value>
		<value condition="!String.IsEmpty(Player.Chapter)"></value>
	</variable>
	<variable name="TopPlayerSeekStepLabel">
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset]</value>
		<value condition="!String.IsEmpty(Player.Chapter)">$INFO[Player.Chapter,$LOCALIZE[21396] ]</value>
	</variable>
	<variable name="PlayerSeekStepLabel">
		<value condition="!String.IsEmpty(PVR.EpgEventSeekTime) + VideoPlayer.HasEpg">$INFO[PVR.EpgEventSeekTime]</value>
		<value condition="!String.IsEmpty(Player.SeekNumeric)">$INFO[Player.SeekNumeric]</value>
		<value condition="!String.IsEmpty(Player.SeekTime)">$INFO[Player.SeekTime]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset]</value>
	</variable>
	<variable name="PlaylistRepeatButtonLabel">
		<value condition="Playlist.IsRepeatOne">$LOCALIZE[31053]</value>
		<value condition="Playlist.IsRepeat">$LOCALIZE[593]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlayerFanartEnabledButton">
		<value condition="!Skin.HasSetting(VisFanartDisabled)">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlayerRandomFanartEnabledButton">
		<value condition="Skin.HasSetting(VisRandomFanart)">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlaylistRepeatLabel">
		<value condition="Playlist.IsRepeatOne"></value>
		<value condition="Playlist.IsRepeat"></value>
	</variable>
	<variable name="PlaylistRepeatButtonColor">
		<value condition="Playlist.IsRepeatOne | Playlist.IsRepeat | Control.HasFocus(613)">$VAR[AccentColor]</value>
	</variable>
	<variable name="VideoHWDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
	<variable name="UserAvatar">
		<value condition="!String.IsEmpty(Window(Home).Property(EmbyUserImage))">$INFO[Window(Home).Property(EmbyUserImage)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(PlexUserImage))">$INFO[Window(Home).Property(PlexUserImage)]</value>
		<value condition="!String.IsEmpty(System.ProfileThumb)">$INFO[System.ProfileThumb]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(plugin.video.embycon-userimage))">$INFO[Window(Home).Property(plugin.video.embycon-userimage)]</value>
		<value>defaultuser.png</value>
	</variable>
	<variable name="PVRLabel">
		<value condition="!Pvr.HasRadioChannels + Pvr.HasTVChannels">$LOCALIZE[31042]</value>
		<value condition="Pvr.HasRadioChannels + !Pvr.HasTVChannels">$LOCALIZE[19021]</value>
		<value>$LOCALIZE[31042] &amp; $LOCALIZE[19021]</value>
	</variable>
	<variable name="SettingHelpText">
		<value condition="ControlGroup(100).HasFocus(101)">$LOCALIZE[31106]</value>
		<value condition="ControlGroup(100).HasFocus(102)">$LOCALIZE[31229]</value>
		<value condition="ControlGroup(100).HasFocus(103)">$LOCALIZE[31105]</value>
		<value condition="ControlGroup(100).HasFocus(104)">$LOCALIZE[31329]</value>
		<value condition="ControlGroup(100).HasFocus(105)">$LOCALIZE[31147]</value>
		<value condition="ControlGroup(100).HasFocus(106)">$LOCALIZE[31328]</value>
		<value condition="ControlGroup(100).HasFocus(107)">$LOCALIZE[31275]</value>
		<value condition="ControlGroup(100).HasFocus(108)">$LOCALIZE[31296]</value>
	</variable>
	<variable name="BackgroundAlphaLabel">
		<value condition="!String.IsEmpty(Skin.String(BackgroundAlpha.label))">$INFO[Skin.String(BackgroundAlpha.label)]</value>
		<value>$LOCALIZE[31157]</value>
	</variable>
	<variable name="MusicPlayerFanart">
		<value condition="!String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
		<value>views/player/music_back.jpg</value>
	</variable>
	<variable name="ExtendedInfoFilmographyMovies">
		<value condition="Integer.IsGreater(Container(150).NumItems,1)">$INFO[Container(150).NumItems,, $LOCALIZE[342]]</value>
		<value condition="Integer.IsEqual(Container(150).NumItems,1)">$INFO[Container(150).NumItems,, $LOCALIZE[20338]]</value>
	</variable>
	<variable name="ExtendedInfoFilmographyTVShows">
		<value condition="Integer.IsGreater(Container(250).NumItems,1)">$INFO[Container(250).NumItems,, $LOCALIZE[20343]]</value>
		<value condition="Integer.IsEqual(Container(250).NumItems,1)">$INFO[Container(250).NumItems,, $LOCALIZE[20364]]</value>
	</variable>
	<variable name="ExtendedInfoFilmographyCount">
		<value condition="Integer.IsGreater(Container(150).NumItems,0) + Integer.IsGreater(Container(250).NumItems,0)">$VAR[ExtendedInfoFilmographyMovies] &amp; $VAR[ExtendedInfoFilmographyTVShows]</value>
		<value condition="Integer.IsGreater(Container(150).NumItems,0) + !Integer.IsGreater(Container(250).NumItems,0)">$VAR[ExtendedInfoFilmographyMovies]</value>
		<value condition="!Integer.IsGreater(Container(150).NumItems,0) + Integer.IsGreater(Container(250).NumItems,0)">$VAR[ExtendedInfoFilmographyTVShows]</value>
	</variable>
	<variable name="SortLetterLabel">
		<value condition="Window.IsVisible(MyPlaylist.xml)">$INFO[Container(50).CurrentItem]</value>
		<value condition="Window.IsVisible(DialogPVRChannelsOSD.xml)">$INFO[Container(11).ListItem.ChannelNumberLabel]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Episode]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Season)">$INFO[ListItem.Season]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml)">$INFO[ListItem.ChannelNumberLabel]</value>
		<value>$INFO[ListItem.SortLetter]</value>
	</variable>
	<variable name="KeyboardHinttext">
		<value condition="!String.IsEmpty(Window(home).Property(CustomSearch),home)">$LOCALIZE[19133]</value>
		<value>$INFO[Control.GetLabel(311)]</value>
	</variable>
	<variable name="SearchString">
		<value condition="!String.IsEmpty(Skin.String(CustomSearchTerm))">$INFO[Skin.String(CustomSearchTerm)]</value>
		<value>n/a</value>
	</variable>
	<variable name="SearchProvider">
		<value condition="Skin.HasSetting(UseGlobalsearch) + System.HasAddon(script.globalsearch)">$INFO[System.AddonTitle(script.globalsearch)]</value>
		<value>Embuary</value>
	</variable>
	<variable name="CastSearchProvider">
		<value condition="Skin.HasSetting(DoNotUseExtendedInfo) | !System.HasAddon(script.extendedinfo)">$LOCALIZE[31237]</value>
		<value>$INFO[System.AddonTitle(script.extendedinfo)]</value>
	</variable>
	<variable name="EpisodeListLabel">"
		<value condition="ListItem.IsParentFolder">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(Container.Foldername,$LOCALIZE[20366]) | !String.Contains(Container.Foldername,$LOCALIZE[20373])">$VAR[ListItemSeasonEpisode]$INFO[ListItem.Title]</value>
		<value condition="String.IsEmpty(Container.ShowTitle)">$INFO[ListItem.TvShowTitle,, - ]$VAR[ListItemSeasonEpisode]$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="SelectDialogIcon">
		<value condition="ListItem.IsParent | String.IsEqual(ListItem.Label,..)">DefaultFolderBack.png</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="ListItem.IsFolder">DefaultFolder.png</value>
		<value>DefaultAddon.png</value>
	</variable>
	<variable name="DownloadSubtitlesFlags">
		<value condition="!String.IsEqual(ListItem.property(sync),false) + !String.IsEqual(ListItem.property(hearing_imp),false)">[COLOR $VAR[AccentColor]]SYNC CC[/COLOR]</value>
		<value condition="!String.IsEqual(ListItem.property(sync),false)">[COLOR $VAR[AccentColor]]SYNC[/COLOR]</value>
		<value condition="!String.IsEqual(ListItem.property(hearing_imp),false)">[COLOR $VAR[AccentColor]]CC[/COLOR]</value>
	</variable>
	<variable name="ListItemSeasonEpisode">
		<value condition="String.StartsWith(ListItem.Episode,S)">$INFO[ListItem.Episode,, - ]</value>
		<value>$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, - ]</value>
	</variable>
	<variable name="PlayerSeasonEpisode">
		<value condition="String.StartsWith(VideoPlayer.Episode,S)">$INFO[VideoPlayer.Episode,, - ]</value>
		<value>$INFO[VideoPlayer.Season,S,:]$INFO[VideoPlayer.Episode,E, - ]</value>
	</variable>
	<variable name="AvailableUpdates">
		<value condition="Integer.IsEqual(Container(2000).NumItems,2)">1</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,3)">2</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,4)">3</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,5)">4</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,6)">5</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,7)">6</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,8)">7</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,9)">8</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,10)">9</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,11)">10</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,12)">11</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,13)">12</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,14)">13</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,15)">14</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,16)">15</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,17)">16</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,18)">17</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,19)">18</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,20)">19</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,21)">20</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,22)">21</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,23)">22</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,24)">23</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,25)">24</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,26)">25</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,27)">26</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,28)">27</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,29)">28</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,30)">29</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,31)">30</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,32)">31</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,33)">32</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,34)">33</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,35)">34</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,36)">35</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,37)">36</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,38)">37</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,39)">38</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,40)">39</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,41)">40</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,42)">41</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,43)">42</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,44)">43</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,45)">44</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,46)">45</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,47)">46</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,48)">47</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,49)">48</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,50)">49</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,51)">50</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,52)">51</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,53)">52</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,54)">53</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,55)">54</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,56)">55</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,57)">56</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,58)">57</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,59)">58</value>
		<value condition="Integer.IsEqual(Container(2000).NumItems,60)">59</value>
		<value condition="Integer.IsGreater(Container(2000).NumItems,60)">60&#x3C;</value>
	</variable>
	<variable name="PlaylistMainLabel">
		<value condition="!String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="PlaylistSubLabel">
		<value condition="!String.IsEmpty(ListItem.Episode)">$VAR[ListItemSeasonEpisode]$INFO[ListItem.Title]</value>
		<value condition="Window.IsVisible(musicplaylist)">$INFO[ListItem.AlbumArtist]$INFO[ListItem.Album, - ]</value>
	</variable>
	<variable name="PlaylistThumbLabel">
		<value condition="Window.IsVisible(musicplaylist)">$INFO[ListItem.AlbumArtist]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>
	<variable name="TVShowStatus">
		<value condition="String.IsEqual(ListItem.Status,Ended)">$LOCALIZE[31196]</value>
	</variable>
	<variable name="SetLastYear">
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(30).Year)">$INFO[Container(5601).ListItemAbsolute(30).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(29).Year)">$INFO[Container(5601).ListItemAbsolute(29).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(28).Year)">$INFO[Container(5601).ListItemAbsolute(28).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(27).Year)">$INFO[Container(5601).ListItemAbsolute(27).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(26).Year)">$INFO[Container(5601).ListItemAbsolute(26).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(25).Year)">$INFO[Container(5601).ListItemAbsolute(25).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(24).Year)">$INFO[Container(5601).ListItemAbsolute(24).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(23).Year)">$INFO[Container(5601).ListItemAbsolute(23).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(22).Year)">$INFO[Container(5601).ListItemAbsolute(22).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(21).Year)">$INFO[Container(5601).ListItemAbsolute(21).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(20).Year)">$INFO[Container(5601).ListItemAbsolute(20).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(19).Year)">$INFO[Container(5601).ListItemAbsolute(19).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(18).Year)">$INFO[Container(5601).ListItemAbsolute(18).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(17).Year)">$INFO[Container(5601).ListItemAbsolute(17).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(16).Year)">$INFO[Container(5601).ListItemAbsolute(16).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(15).Year)">$INFO[Container(5601).ListItemAbsolute(15).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(14).Year)">$INFO[Container(5601).ListItemAbsolute(14).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(13).Year)">$INFO[Container(5601).ListItemAbsolute(13).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(12).Year)">$INFO[Container(5601).ListItemAbsolute(12).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(11).Year)">$INFO[Container(5601).ListItemAbsolute(11).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(10).Year)">$INFO[Container(5601).ListItemAbsolute(10).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(8).Year)">$INFO[Container(5601).ListItemAbsolute(8).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(9).Year)">$INFO[Container(5601).ListItemAbsolute(9).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(7).Year)">$INFO[Container(5601).ListItemAbsolute(7).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(6).Year)">$INFO[Container(5601).ListItemAbsolute(6).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(5).Year)">$INFO[Container(5601).ListItemAbsolute(5).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(4).Year)">$INFO[Container(5601).ListItemAbsolute(4).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(3).Year)">$INFO[Container(5601).ListItemAbsolute(3).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(2).Year)">$INFO[Container(5601).ListItemAbsolute(2).Year]</value>
		<value condition="!String.IsEmpty(Container(5601).ListItemAbsolute(1).Year)">$INFO[Container(5601).ListItemAbsolute(1).Year]</value>
	</variable>
	<variable name="BackgroundOpacity">
		<value condition="String.IsEqual(Skin.String(AlphaBackground),10)">10</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),20)">20</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),30)">30</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),40)">40</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),50)">50</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),60)">60</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),70)">70</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),80)">80</value>
		<value condition="String.IsEqual(Skin.String(AlphaBackground),90)">90</value>
		<value>100</value>
	</variable>
	<variable name="GameSettingsHeadline">
		<value condition="!String.IsEmpty(Control.GetLabel(12))">$INFO[Control.GetLabel(12)]</value>
		<value condition="Window.IsVisible(GameVideoRotation)">$LOCALIZE[35227]</value>
		<value condition="Window.IsVisible(GameStretchMode)">$LOCALIZE[35233]</value>
	</variable>
	<variable name="UpNextThumb">
		<value condition="!String.IsEmpty(Window.Property(thumb))">$INFO[Window.Property(thumb)]</value>
		<value condition="!String.IsEmpty(Window.Property(landscape))">$INFO[Window.Property(landscape)]</value>
	</variable>
	<variable name="CWidgetReloadPath1">
		<value condition="String.StartsWith(Skin.String(UserWidget1_path),plugin://) + String.Contains(Skin.String(UserWidget1_path),/?)">$INFO[Skin.String(UserWidget1_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget1_path),plugin://) + !String.EndsWith(Skin.String(UserWidget1_path),/)">$INFO[Skin.String(UserWidget1_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget1_path),plugin://) + String.EndsWith(Skin.String(UserWidget1_path),/)">$INFO[Skin.String(UserWidget1_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget1_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath2">
		<value condition="String.StartsWith(Skin.String(UserWidget2_path),plugin://) + String.Contains(Skin.String(UserWidget2_path),/?)">$INFO[Skin.String(UserWidget2_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget2_path),plugin://) + !String.EndsWith(Skin.String(UserWidget2_path),/)">$INFO[Skin.String(UserWidget2_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget2_path),plugin://) + String.EndsWith(Skin.String(UserWidget2_path),/)">$INFO[Skin.String(UserWidget2_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget2_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath3">
		<value condition="String.StartsWith(Skin.String(UserWidget3_path),plugin://) + String.Contains(Skin.String(UserWidget3_path),/?)">$INFO[Skin.String(UserWidget3_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget3_path),plugin://) + !String.EndsWith(Skin.String(UserWidget3_path),/)">$INFO[Skin.String(UserWidget3_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget3_path),plugin://) + String.EndsWith(Skin.String(UserWidget3_path),/)">$INFO[Skin.String(UserWidget3_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget3_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath4">
		<value condition="String.StartsWith(Skin.String(UserWidget4_path),plugin://) + String.Contains(Skin.String(UserWidget4_path),/?)">$INFO[Skin.String(UserWidget4_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget4_path),plugin://) + !String.EndsWith(Skin.String(UserWidget4_path),/)">$INFO[Skin.String(UserWidget4_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget4_path),plugin://) + String.EndsWith(Skin.String(UserWidget4_path),/)">$INFO[Skin.String(UserWidget4_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget4_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath5">
		<value condition="String.StartsWith(Skin.String(UserWidget5_path),plugin://) + String.Contains(Skin.String(UserWidget5_path),/?)">$INFO[Skin.String(UserWidget5_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget5_path),plugin://) + !String.EndsWith(Skin.String(UserWidget5_path),/)">$INFO[Skin.String(UserWidget5_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget5_path),plugin://) + String.EndsWith(Skin.String(UserWidget5_path),/)">$INFO[Skin.String(UserWidget5_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget5_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath6">
		<value condition="String.StartsWith(Skin.String(UserWidget6_path),plugin://) + String.Contains(Skin.String(UserWidget6_path),/?)">$INFO[Skin.String(UserWidget6_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget6_path),plugin://) + !String.EndsWith(Skin.String(UserWidget6_path),/)">$INFO[Skin.String(UserWidget6_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget6_path),plugin://) + String.EndsWith(Skin.String(UserWidget6_path),/)">$INFO[Skin.String(UserWidget6_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget6_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath7">
		<value condition="String.StartsWith(Skin.String(UserWidget7_path),plugin://) + String.Contains(Skin.String(UserWidget7_path),/?)">$INFO[Skin.String(UserWidget7_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget7_path),plugin://) + !String.EndsWith(Skin.String(UserWidget7_path),/)">$INFO[Skin.String(UserWidget7_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget7_path),plugin://) + String.EndsWith(Skin.String(UserWidget7_path),/)">$INFO[Skin.String(UserWidget7_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget7_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath8">
		<value condition="String.StartsWith(Skin.String(UserWidget8_path),plugin://) + String.Contains(Skin.String(UserWidget8_path),/?)">$INFO[Skin.String(UserWidget8_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget8_path),plugin://) + !String.EndsWith(Skin.String(UserWidget8_path),/)">$INFO[Skin.String(UserWidget8_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget8_path),plugin://) + String.EndsWith(Skin.String(UserWidget8_path),/)">$INFO[Skin.String(UserWidget8_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget8_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath9">
		<value condition="String.StartsWith(Skin.String(UserWidget9_path),plugin://) + String.Contains(Skin.String(UserWidget9_path),/?)">$INFO[Skin.String(UserWidget9_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget9_path),plugin://) + !String.EndsWith(Skin.String(UserWidget9_path),/)">$INFO[Skin.String(UserWidget9_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget9_path),plugin://) + String.EndsWith(Skin.String(UserWidget9_path),/)">$INFO[Skin.String(UserWidget9_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget9_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath10">
		<value condition="String.StartsWith(Skin.String(UserWidget10_path),plugin://) + String.Contains(Skin.String(UserWidget10_path),/?)">$INFO[Skin.String(UserWidget10_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget10_path),plugin://) + !String.EndsWith(Skin.String(UserWidget10_path),/)">$INFO[Skin.String(UserWidget10_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget10_path),plugin://) + String.EndsWith(Skin.String(UserWidget10_path),/)">$INFO[Skin.String(UserWidget10_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget10_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath11">
		<value condition="String.StartsWith(Skin.String(UserWidget11_path),plugin://) + String.Contains(Skin.String(UserWidget11_path),/?)">$INFO[Skin.String(UserWidget11_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget11_path),plugin://) + !String.EndsWith(Skin.String(UserWidget11_path),/)">$INFO[Skin.String(UserWidget11_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget11_path),plugin://) + String.EndsWith(Skin.String(UserWidget11_path),/)">$INFO[Skin.String(UserWidget11_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget11_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath12">
		<value condition="String.StartsWith(Skin.String(UserWidget12_path),plugin://) + String.Contains(Skin.String(UserWidget12_path),/?)">$INFO[Skin.String(UserWidget12_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget12_path),plugin://) + !String.EndsWith(Skin.String(UserWidget12_path),/)">$INFO[Skin.String(UserWidget12_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget12_path),plugin://) + String.EndsWith(Skin.String(UserWidget12_path),/)">$INFO[Skin.String(UserWidget12_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget12_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath13">
		<value condition="String.StartsWith(Skin.String(UserWidget13_path),plugin://) + String.Contains(Skin.String(UserWidget13_path),/?)">$INFO[Skin.String(UserWidget13_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget13_path),plugin://) + !String.EndsWith(Skin.String(UserWidget13_path),/)">$INFO[Skin.String(UserWidget13_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget13_path),plugin://) + String.EndsWith(Skin.String(UserWidget13_path),/)">$INFO[Skin.String(UserWidget13_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget13_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath14">
		<value condition="String.StartsWith(Skin.String(UserWidget14_path),plugin://) + String.Contains(Skin.String(UserWidget14_path),/?)">$INFO[Skin.String(UserWidget14_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget14_path),plugin://) + !String.EndsWith(Skin.String(UserWidget14_path),/)">$INFO[Skin.String(UserWidget14_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget14_path),plugin://) + String.EndsWith(Skin.String(UserWidget14_path),/)">$INFO[Skin.String(UserWidget14_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget14_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath15">
		<value condition="String.StartsWith(Skin.String(UserWidget15_path),plugin://) + String.Contains(Skin.String(UserWidget15_path),/?)">$INFO[Skin.String(UserWidget15_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget15_path),plugin://) + !String.EndsWith(Skin.String(UserWidget15_path),/)">$INFO[Skin.String(UserWidget15_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget15_path),plugin://) + String.EndsWith(Skin.String(UserWidget15_path),/)">$INFO[Skin.String(UserWidget15_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget15_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath16">
		<value condition="String.StartsWith(Skin.String(UserWidget16_path),plugin://) + String.Contains(Skin.String(UserWidget16_path),/?)">$INFO[Skin.String(UserWidget16_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget16_path),plugin://) + !String.EndsWith(Skin.String(UserWidget16_path),/)">$INFO[Skin.String(UserWidget16_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget16_path),plugin://) + String.EndsWith(Skin.String(UserWidget16_path),/)">$INFO[Skin.String(UserWidget16_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget16_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath17">
		<value condition="String.StartsWith(Skin.String(UserWidget17_path),plugin://) + String.Contains(Skin.String(UserWidget17_path),/?)">$INFO[Skin.String(UserWidget17_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget17_path),plugin://) + !String.EndsWith(Skin.String(UserWidget17_path),/)">$INFO[Skin.String(UserWidget17_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget17_path),plugin://) + String.EndsWith(Skin.String(UserWidget17_path),/)">$INFO[Skin.String(UserWidget17_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget17_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath18">
		<value condition="String.StartsWith(Skin.String(UserWidget18_path),plugin://) + String.Contains(Skin.String(UserWidget18_path),/?)">$INFO[Skin.String(UserWidget18_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget18_path),plugin://) + !String.EndsWith(Skin.String(UserWidget18_path),/)">$INFO[Skin.String(UserWidget18_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget18_path),plugin://) + String.EndsWith(Skin.String(UserWidget18_path),/)">$INFO[Skin.String(UserWidget18_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget18_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath19">
		<value condition="String.StartsWith(Skin.String(UserWidget19_path),plugin://) + String.Contains(Skin.String(UserWidget19_path),/?)">$INFO[Skin.String(UserWidget19_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget19_path),plugin://) + !String.EndsWith(Skin.String(UserWidget19_path),/)">$INFO[Skin.String(UserWidget19_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget19_path),plugin://) + String.EndsWith(Skin.String(UserWidget19_path),/)">$INFO[Skin.String(UserWidget19_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget19_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath20">
		<value condition="String.StartsWith(Skin.String(UserWidget20_path),plugin://) + String.Contains(Skin.String(UserWidget20_path),/?)">$INFO[Skin.String(UserWidget20_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget20_path),plugin://) + !String.EndsWith(Skin.String(UserWidget20_path),/)">$INFO[Skin.String(UserWidget20_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget20_path),plugin://) + String.EndsWith(Skin.String(UserWidget20_path),/)">$INFO[Skin.String(UserWidget20_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget20_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath21">
		<value condition="String.StartsWith(Skin.String(UserWidget21_path),plugin://) + String.Contains(Skin.String(UserWidget21_path),/?)">$INFO[Skin.String(UserWidget21_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget21_path),plugin://) + !String.EndsWith(Skin.String(UserWidget21_path),/)">$INFO[Skin.String(UserWidget21_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget21_path),plugin://) + String.EndsWith(Skin.String(UserWidget21_path),/)">$INFO[Skin.String(UserWidget21_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget21_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath22">
		<value condition="String.StartsWith(Skin.String(UserWidget22_path),plugin://) + String.Contains(Skin.String(UserWidget22_path),/?)">$INFO[Skin.String(UserWidget22_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget22_path),plugin://) + !String.EndsWith(Skin.String(UserWidget22_path),/)">$INFO[Skin.String(UserWidget22_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget22_path),plugin://) + String.EndsWith(Skin.String(UserWidget22_path),/)">$INFO[Skin.String(UserWidget22_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget22_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath23">
		<value condition="String.StartsWith(Skin.String(UserWidget23_path),plugin://) + String.Contains(Skin.String(UserWidget23_path),/?)">$INFO[Skin.String(UserWidget23_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget23_path),plugin://) + !String.EndsWith(Skin.String(UserWidget23_path),/)">$INFO[Skin.String(UserWidget23_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget23_path),plugin://) + String.EndsWith(Skin.String(UserWidget23_path),/)">$INFO[Skin.String(UserWidget23_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget23_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath24">
		<value condition="String.StartsWith(Skin.String(UserWidget24_path),plugin://) + String.Contains(Skin.String(UserWidget24_path),/?)">$INFO[Skin.String(UserWidget24_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget24_path),plugin://) + !String.EndsWith(Skin.String(UserWidget24_path),/)">$INFO[Skin.String(UserWidget24_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget24_path),plugin://) + String.EndsWith(Skin.String(UserWidget24_path),/)">$INFO[Skin.String(UserWidget24_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget24_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath25">
		<value condition="String.StartsWith(Skin.String(UserWidget25_path),plugin://) + String.Contains(Skin.String(UserWidget25_path),/?)">$INFO[Skin.String(UserWidget25_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget25_path),plugin://) + !String.EndsWith(Skin.String(UserWidget25_path),/)">$INFO[Skin.String(UserWidget25_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget25_path),plugin://) + String.EndsWith(Skin.String(UserWidget25_path),/)">$INFO[Skin.String(UserWidget25_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget25_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath26">
		<value condition="String.StartsWith(Skin.String(UserWidget26_path),plugin://) + String.Contains(Skin.String(UserWidget26_path),/?)">$INFO[Skin.String(UserWidget26_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget26_path),plugin://) + !String.EndsWith(Skin.String(UserWidget26_path),/)">$INFO[Skin.String(UserWidget26_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget26_path),plugin://) + String.EndsWith(Skin.String(UserWidget26_path),/)">$INFO[Skin.String(UserWidget26_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget26_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath27">
		<value condition="String.StartsWith(Skin.String(UserWidget27_path),plugin://) + String.Contains(Skin.String(UserWidget27_path),/?)">$INFO[Skin.String(UserWidget27_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget27_path),plugin://) + !String.EndsWith(Skin.String(UserWidget27_path),/)">$INFO[Skin.String(UserWidget27_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget27_path),plugin://) + String.EndsWith(Skin.String(UserWidget27_path),/)">$INFO[Skin.String(UserWidget27_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget27_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath28">
		<value condition="String.StartsWith(Skin.String(UserWidget28_path),plugin://) + String.Contains(Skin.String(UserWidget28_path),/?)">$INFO[Skin.String(UserWidget28_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget28_path),plugin://) + !String.EndsWith(Skin.String(UserWidget28_path),/)">$INFO[Skin.String(UserWidget28_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget28_path),plugin://) + String.EndsWith(Skin.String(UserWidget28_path),/)">$INFO[Skin.String(UserWidget28_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget28_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath29">
		<value condition="String.StartsWith(Skin.String(UserWidget29_path),plugin://) + String.Contains(Skin.String(UserWidget29_path),/?)">$INFO[Skin.String(UserWidget29_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget29_path),plugin://) + !String.EndsWith(Skin.String(UserWidget29_path),/)">$INFO[Skin.String(UserWidget29_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget29_path),plugin://) + String.EndsWith(Skin.String(UserWidget29_path),/)">$INFO[Skin.String(UserWidget29_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget29_path)]</value>
	</variable>
	<variable name="CWidgetReloadPath30">
		<value condition="String.StartsWith(Skin.String(UserWidget30_path),plugin://) + String.Contains(Skin.String(UserWidget30_path),/?)">$INFO[Skin.String(UserWidget30_path)]&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget30_path),plugin://) + !String.EndsWith(Skin.String(UserWidget30_path),/)">$INFO[Skin.String(UserWidget30_path)]/?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.StartsWith(Skin.String(UserWidget30_path),plugin://) + String.EndsWith(Skin.String(UserWidget30_path),/)">$INFO[Skin.String(UserWidget30_path)]?reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>$INFO[Skin.String(UserWidget30_path)]</value>
	</variable>
</includes>