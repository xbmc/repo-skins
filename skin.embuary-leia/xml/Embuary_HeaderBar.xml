<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- HeaderBar -->
	<include name="HeaderBar">
		<param name="id">10</param>
		<param name="auto_hide">true</param>
		<param name="hide_header">false</param>
		<param name="header_label">$VAR[ContainerContentPrefix]$VAR[ContainerContent]$VAR[ContainerCountLabel,[COLOR text_header_sublabel]  |  ,[/COLOR]]</param>
		<param name="content">HeaderDefault</param>
		<definition>
			<!-- Top bar -->
			<control type="group">
				<animation effect="slide" start="0,0" end="0,-80"  time="500" delay="100" condition="String.IsEmpty(Window(home).Property(ShowHeader)) + !ControlGroup(6666).HasFocus + [[Container($PARAM[id]).HasPrevious + !Integer.IsEqual(Container($PARAM[id]).CurrentItem,1) + $PARAM[auto_hide]] | [$PARAM[hide_header]]]" tween="sine" easing="inout">Conditional</animation>
				<control type="group">
					<include>Animation_ScrollbarIsVisible</include>
					<visible>!$EXP[InfoDialogActive]</visible>
					<control type="image">
						<top>0</top>
						<left>0</left>
						<right>0</right>
						<height>58</height>
						<texture>special://skin/extras/themes/$VAR[SkinTheme]/header.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>true</visible>
					</control>
				</control>
				<control type="image">
					<top>0</top>
					<left>0</left>
					<right>0</right>
					<height>68</height>
					<texture colordiffuse="header_shadow" border="2">common/gradient.png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>$EXP[InfoDialogActive]</visible>
					<animation effect="slide" start="0,0" end="-8,0"  time="0" condition="Control.IsVisible(17)">Conditional</animation>
				</control>
				<control type="grouplist">
					<left>10</left>
					<height>58</height>
					<width>1920</width>
					<top>0</top>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<control type="label">
						<font>Material24</font>
						<label></label>
						<include content="HeaderButton">
							<param name="align" value="false"/>
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<visible>!Window.IsVisible(loginscreen) + !Window.Is(home)</visible>
					</control>
					<control type="label">
						<font>Material24</font>
						<label></label>
						<include content="HeaderButton">
							<param name="align" value="false"/>
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<visible>!Window.IsVisible(loginscreen)</visible>
					</control>
					<control type="image">
						<animation effect="slide" end="0,19" time="0" condition="true">Conditional</animation>
						<height>20</height>
						<width>20</width>
						<texture colordiffuse="$VAR[AccentColor]">common/embuary_sign.png</texture>
						<aspectratio aligny="center">keep</aspectratio>
						<visible>Window.Is(home) | Window.IsVisible(loginscreen)</visible>
					</control>
					<control type="label">
						<animation effect="slide" end="-5,20" time="0" condition="true">Conditional</animation>
						<height>17</height>
						<width>auto</width>
						<font>med17</font>
						<include content="HeaderButton">
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<label>$VAR[HeaderCustomDeviceName]</label>
						<aligny>center</aligny>
						<aspectratio>keep</aspectratio>
						<visible>Window.Is(home) | Window.IsVisible(loginscreen)</visible>
					</control>
					<control type="label">
						<label>$PARAM[header_label]</label>
						<include content="HeaderButton">
							<param name="color" value="text_header_mainlabel"/>
						</include>
					</control>
				</control>
				<control type="grouplist" id="6666">
					<visible>!Window.IsVisible(loginscreen) + !$EXP[InfoDialogActive]</visible>
					<centerleft>50%</centerleft>
					<height>58</height>
					<width>1300</width>
					<top>0</top>
					<align>center</align>
					<orientation>horizontal</orientation>
					<itemgap>35</itemgap>
					<ondown>SetFocus($PARAM[id])</ondown>
					<onleft>900</onleft>
					<onright>noop</onright>
					<include>$PARAM[content]</include>
				</control>
				<control type="grouplist">
					<include>Animation_ScrollbarIsVisible</include>
					<top>0</top>
					<height>58</height>
					<width>400</width>
					<right>12</right>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<align>right</align>
					<control type="image">
						<animation effect="slide" end="0,18" time="0" condition="true">Conditional</animation>
						<animation effect="fade" start="20" time="500" condition="true" pulse="true">Conditional</animation>
						<height>58</height>
						<width>71</width>
						<bordersize>18</bordersize>
						<texture>special://home/addons/plugin.video.emby/icon.png</texture>
						<aspectratio align="left">keep</aspectratio>
						<colordiffuse>$VAR[AccentColor]</colordiffuse>
						<visible>!String.IsEmpty(Window(Home).Property(emby_sync))</visible>
					</control>
					<control type="label">
						<font>Material24</font>
						<label></label>
						<include content="HeaderButton">
							<param name="align" value="false"/>
							<param name="color" value="$VAR[AccentColor]"/>
						</include>
						<visible>[Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(videos) | Container.Content(files) | Container.Content(episodes)] + !String.IsEqual(control.getlabel(10),$LOCALIZE[16100]) + Window.IsVisible(MyVideoNav.xml) + Control.IsEnabled(10) + !String.IsEmpty(Control.getLabel(10))</visible>
					</control>
					<control type="label">
						<font>Material24</font>
						<label></label>
						<include content="HeaderButton">
							<param name="align" value="false"/>
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<visible>Player.HasMedia + !Player.HasGame + !Player.Paused</visible>
					</control>
					<control type="label">
						<font>Material24</font>
						<label></label>
						<include content="HeaderButton">
							<param name="align" value="false"/>
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<visible>Player.HasMedia + !Player.HasGame + Player.Paused</visible>
					</control>
					<control type="label">
						<visible>Player.HasMedia + !Player.HasGame</visible>
						<width>0</width>
					</control>
					<control type="label">
						<font>Material24</font>
						<label></label>
						<include content="HeaderButton">
							<param name="align" value="false"/>
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<visible>Player.Muted</visible>
					</control>
					<control type="label">
						<visible>Player.Muted</visible>
						<width>0</width>
					</control>
					<control type="label">
						<include content="HeaderButton">
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<label>$INFO[Weather.Temperature]</label>
						<visible>!Skin.HasSetting(HideHeaderWeather) + !String.IsEmpty(Weather.Temperature) + !String.Contains(Weather.Temperature,$LOCALIZE[503]) + !String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched</visible>
					</control>
					<control type="image">
						<animation effect="slide" end="0,10" time="0" condition="true">Conditional</animation>
						<height>38</height>
						<width>43</width>
						<texture colordiffuse="text_header_mainlabel">$INFO[Weather.fanartcode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
						<aspectratio scalediffuse="false" align="left">stretch</aspectratio>
						<visible>!Skin.HasSetting(HideHeaderWeather) + !String.IsEmpty(Weather.Temperature) + !String.Contains(Weather.Temperature,$LOCALIZE[503]) + !String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched</visible>
					</control>
					<control type="label">
						<include content="HeaderButton">
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<label>$INFO[System.Time]</label>
					</control>
					<control type="group">
						<visible>!Window.IsVisible(loginscreen)</visible>
						<animation effect="slide" end="0,10" time="0" condition="true">Conditional</animation>
						<height>38</height>
						<width>38</width>
						<control type="image">
							<height>38</height>
							<width>38</width>
							<texture colordiffuse="thumb_background_fallback_secondary">common/avatar_diffuse.png</texture>
						</control>
						<control type="image">
							<height>38</height>
							<width>38</width>
							<texture diffuse="common/avatar_diffuse.png">$VAR[UserAvatar]</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
						</control>
					</control>
				</control>
			</control>
			<!-- Currently playing -->
			<control type="group">
				<visible>[
					Window.IsVisible(home)
					| Window.IsVisible(1120)
					| Window.IsVisible(1121)
					| Window.IsVisible(1122)
					| Window.IsVisible(1123)
					| Window.IsVisible(1124)
					| Window.IsVisible(1125)
					| Window.IsVisible(1130)
					| Window.IsVisible(1131)
					| Window.IsVisible(1114)
					| Window.IsVisible(script-NextAired-TVGuide.xml)
					| Window.IsVisible(script-NextAired-TVGuide2.xml)
					| Window.IsVisible(script-globalsearch-main.xml)
					| Window.IsVisible(MyPVRGuide.xml)
					| Window.IsVisible(settings)
					| Window.IsVisible(favourites)
					]
					+ Player.HasMedia
					+ !Player.HasGame
					+ !Window.IsVisible(extendedprogressdialog)
					+ !Window.IsVisible(fullscreeninfo)
					+ !Window.IsVisible(fullscreenvideo)
					+ !Window.IsVisible(visualisation)
					+ !Window.IsVisible(addonsettings)
					+ !$EXP[InfoDialogActive]
				</visible>
				<animation effect="slide" start="0,0" end="0,58"  time="500" tween="sine" easing="inout">Hidden</animation>
				<animation effect="slide" start="0,58" end="0,0"  time="500" tween="sine" easing="inout">Visible</animation>
				<animation effect="slide" start="0,0" end="0,80"  time="500" delay="100" condition="!ControlGroup(6666).HasFocus + [[Container($PARAM[id]).HasPrevious + !Integer.IsEqual(Container($PARAM[id]).CurrentItem,1) + $PARAM[auto_hide]] | [$PARAM[hide_header]]]" tween="sine" easing="inout">Conditional</animation>
				<control type="image">
					<height>61</height>
					<bottom>0</bottom>
					<left>0</left>
					<right>0</right>
					<texture colordiffuse="footerbar">common/white.jpg</texture>
					<aspectratio>stretch</aspectratio>
					<visible>false</visible>
				</control>
				<control type="image">
					<height>58</height>
					<bottom>0</bottom>
					<left>0</left>
					<right>0</right>
					<texture>special://skin/extras/themes/$VAR[SkinTheme]/header.png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>true</visible>
				</control>
				<control type="grouplist">
					<left>12</left>
					<height>58</height>
					<width>1920</width>
					<bottom>0</bottom>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<control type="image">
						<animation effect="slide" end="0,10" time="0" condition="true">Conditional</animation>
						<height>38</height>
						<width>28</width>
						<texture>$VAR[PlayerIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))</visible>
					</control>
					<control type="image">
						<animation effect="slide" end="0,10" time="0" condition="true">Conditional</animation>
						<height>38</height>
						<width>58</width>
						<texture>$VAR[PlayerIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster))</visible>
					</control>
					<control type="label">
						<include content="HeaderButton">
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<label>$VAR[PlayerFullLabel]</label>
						<visible>Player.HasMedia</visible>
					</control>
				</control>
				<control type="grouplist">
					<include>Animation_ScrollbarIsVisible</include>
					<bottom>0</bottom>
					<height>58</height>
					<width>400</width>
					<right>13</right>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<align>right</align>
					<control type="label">
						<include content="HeaderButton">
							<param name="color" value="text_header_mainlabel"/>
						</include>
						<label>$VAR[PlayerTimeLabels]</label>
					</control>
				</control>
				<control type="progress">
					<bottom>56</bottom>
					<left>0</left>
					<right>0</right>
					<height>3</height>
					<reveal>true</reveal>
					<info>Player.Progress</info>
					<texturebg colordiffuse="grey">common/white.jpg</texturebg>
					<lefttexture></lefttexture>
					<midtexture colordiffuse="$VAR[PlayerAccentColor]">common/white.jpg</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<visible>Player.HasMedia + !VideoPlayer.HasEpg</visible>
				</control>
				<control type="progress">
					<bottom>56</bottom>
					<left>0</left>
					<right>0</right>
					<height>3</height>
					<reveal>true</reveal>
					<info>PVR.EpgEventProgress</info>
					<texturebg colordiffuse="grey">common/white.jpg</texturebg>
					<lefttexture></lefttexture>
					<midtexture colordiffuse="$VAR[PlayerAccentColor]">common/white.jpg</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<visible>Player.HasMedia + VideoPlayer.HasEpg</visible>
				</control>
			</control>
			<!-- ScrollLetter -->
			<include condition="Window.IsMedia + !$EXP[InfoDialogActive]">ScrollSortLetter</include>
		</definition>
	</include>
	<!-- Defaults -->
	<include name="HeaderDefault">
		<control type="button" id="6600">
			<include>HeaderButton</include>
			<label>$LOCALIZE[31000]</label>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>ActivateWindow(home)</onclick>
			<visible>!Window.Is(home)</visible>
		</control>
		<control type="button" id="6602">
			<include>HeaderButton</include>
			<label>$LOCALIZE[31180]</label>
			<onclick>ActivateWindow(videos,library://video/movies/titles.xml/,return)</onclick>
			<visible>[
				String.IsEqual(Container.FolderPath,library://video/movies/)
				| String.StartsWith(Container.FolderPath,videodb://movies/sets)
				| [String.IsEqual(Container(102).ListItem.DBType,movie) + !String.StartsWith(Container(102).ListItem.FolderPath,plugin) + Window.IsVisible(1114)]
				]
				+ Library.HasContent(Movies)
				+ !Window.IsVisible(favourites)
				+ !$EXP[IsPlugin]
			</visible>
		</control>
		<control type="button" id="6614">
			<include>HeaderButton</include>
			<label>$LOCALIZE[31179]</label>
			<onclick>ActivateWindow(videos,library://video/tvshows/titles.xml/,return)</onclick>
			<visible>[
				String.IsEqual(Container.FolderPath,library://video/tvshows/) | [String.IsEqual(Container(102).LIstItem.DBType,tvshow) + !String.StartsWith(Container(102).ListItem.FolderPath,plugin) + Window.IsVisible(1114)] | Window.IsVisible(script-NextAired-TVGuide.xml)
				]
				+ Library.HasContent(tvshows)
				+ !Window.IsVisible(favourites)
			</visible>
		</control>
		<control type="button" id="6603">
			<include>HeaderButton</include>
			<label>$LOCALIZE[31169]</label>
			<onclick condition="!Window.IsActive(videos)">ActivateWindow(videos,library://video/movies/sets.xml/,return)</onclick>
			<onclick condition="Window.IsActive(videos)">Container.Update(library://video/movies/sets.xml/)</onclick>
			<visible>[
				String.IsEqual(Container.FolderPath,library://video/movies/)
				| String.StartsWith(Container.FolderPath,videodb://movies/titles)
				| String.StartsWith(Container.FolderPath,videodb://movies/sets)
				| [String.IsEqual(Container(102).LIstItem.DBType,movie) + !String.StartsWith(Container(102).ListItem.FolderPath,plugin) + Window.IsVisible(1114)]
				]
				+ Library.HasContent(MovieSets)
				+ !Container.Content(sets)
				+ !Window.IsVisible(favourites)
				+ !$EXP[IsPlugin]
			</visible>
		</control>
		<control type="button" id="6613">
			<include>HeaderButton</include>
			<label>$LOCALIZE[135]</label>
			<onclick condition="String.IsEqual(Container.FolderPath,library://video/movies/) | Container.Content(movies) | Container.Content(sets)">SetProperty(ListGenres,videodb://movies/genres,home)</onclick>
			<onclick condition="String.IsEqual(Container.FolderPath,library://video/tvshows/) | Container.Content(tvshows) | Window.IsVisible(script-NextAired-TVGuide.xml)">SetProperty(ListGenres,videodb://tvshows/genres,home)</onclick>
			<onclick>ActivateWindow(1114)</onclick>
			<visible>[
				String.IsEqual(Container.FolderPath,library://video/movies/)
				| String.IsEqual(Container.FolderPath,library://video/tvshows/)
				| Container.Content(movies)
				| Container.Content(tvshows)
				| Container.Content(sets)
				| Window.IsVisible(script-NextAired-TVGuide.xml)
				]
				+ !Window.IsVisible(1114)
				+ !Window.IsVisible(favourites)
				+ !$EXP[IsPlugin]
			</visible>
		</control>
		<control type="button" id="6615">
			<include>HeaderButton</include>
			<label>$LOCALIZE[31154]</label>
			<onclick>RunScript(script.tv.show.next.aired)</onclick>
			<visible>[
				String.IsEqual(Container.FolderPath,library://video/tvshows/)
				| Container.Content(tvshows)
				| [String.IsEqual(Container(102).LIstItem.DBType,tvshow) + !String.StartsWith(Container(102).ListItem.FolderPath,plugin) + Window.IsVisible(1114)]
				]
				+ System.HasAddon(script.tv.show.next.aired)
				+ !$EXP[IsPlugin]
			</visible>
		</control>
		<control type="button" id="6616">
			<include>HeaderButton</include>
			<label>$LOCALIZE[133]</label>
			<onclick>ActivateWindow(music,musicdb://artists/,return)</onclick>
			<visible>!String.IsEqual(Container.FolderPath,musicdb://artists)
				+ Window.IsVisible(mymusicnav.xml)
				+ Library.HasContent(music)
				+ String.IsEmpty(Container.PluginName)
			</visible>
		</control>
		<control type="button" id="6617">
			<include>HeaderButton</include>
			<label>$LOCALIZE[132]</label>
			<onclick>ActivateWindow(music,musicdb://albums/,return)</onclick>
			<visible>!String.IsEqual(Container.FolderPath,musicdb://albums/)
				+ Window.IsVisible(mymusicnav.xml)
				+ Library.HasContent(music)
				+ String.IsEmpty(Container.PluginName)
			</visible>
		</control>
		<control type="button" id="6618">
			<include>HeaderButton</include>
			<label>$LOCALIZE[134]</label>
			<onclick>ActivateWindow(music,musicdb://songs/,return)</onclick>
			<visible>!String.IsEqual(Container.FolderPath,musicdb://songs/)
				+ Window.IsVisible(mymusicnav.xml)
				+ Library.HasContent(music)
				+ String.IsEmpty(Container.PluginName)
			</visible>
		</control>
		<control type="button" id="6619">
			<include>HeaderButton</include>
			<label>$LOCALIZE[136]</label>
			<onclick>ActivateWindow(music,special://musicplaylists/,return)</onclick>
			<visible>!String.IsEqual(Container.FolderPath,special://musicplaylists/)
				+ Window.IsVisible(mymusicnav.xml)
				+ Library.HasContent(music)
				+ String.IsEmpty(Container.PluginName)
			</visible>
		</control>
		<control type="button" id="6601">
			<include>HeaderButton</include>
			<label>$LOCALIZE[1036]</label>
			<onclick>ActivateWindow(favourites)</onclick>
			<visible>!Window.Is(favourites)</visible>
		</control>
		<control type="button" id="6604">
			<include>HeaderButton</include>
			<label>$LOCALIZE[137]</label>
			<include>search_action</include>
			<visible>!Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch.xml) + !Window.IsVisible(1115)</visible>
		</control>
		<control type="button" id="6606">
			<include>HeaderButton</include>
			<label>$LOCALIZE[19141]: $INFO[Control.GetLabel(29)]</label>
			<onclick>SendClick(28)</onclick>
			<visible>[Window.IsVisible(MyPVRChannels.xml)]</visible>
		</control>
		<control type="button" id="6608">
			<include>HeaderButton</include>
			<width>auto</width>
			<textcolor>panel_textcolor</textcolor>
			<focusedcolor>$VAR[AccentColor]</focusedcolor>
			<label>$LOCALIZE[31111]</label>
			<onclick>SetFocus(4000)</onclick>
			<visible>Window.IsVisible(weather) + !Skin.HasSetting(KioskMode)</visible>
		</control>
		<control type="button" id="6609">
			<font>Material24</font>
			<label></label>
			<include content="HeaderButton">
				<param name="align" value="false"/>
			</include>
			<onclick>SetFocus(4000)</onclick>
			<visible>[
				Window.IsVisible(videos)
				| Window.IsVisible(music)
				| Window.IsVisible(MyPVRChannels.xml)
				| Window.IsVisible(MyPVRrecordings.xml)
				| Window.IsVisible(MyPVRTimers.xml)
				| Window.IsVisible(MyPVRSearch.xml)
				| Window.IsVisible(programs)
				| Window.IsVisible(pictures)
				| Window.IsVisible(addonbrowser)
				| Window.IsVisible(eventlog)
				]
				+ !Window.IsVisible(1114)
				+ !Skin.HasSetting(KioskMode)
				+ !Window.IsVisible(favourites)
			</visible>
		</control>
		<control type="button" id="6610">
			<font>Material24</font>
			<label></label>
			<include content="HeaderButton">
				<param name="align" value="false"/>
			</include>
			<onclick>SetFocus(4100)</onclick>
			<visible>Integer.IsGreater(Container(4100).NumItems,1) + !Skin.HasSetting(KioskMode)</visible>
		</control>
		<control type="button" id="6611">
			<font>Material22</font>
			<label></label>
			<include content="HeaderButton">
				<param name="align" value="false"/>
			</include>
			<onclick>ActivateWindow(playercontrols)</onclick>
			<visible>[Player.HasMedia + !Player.HasGame] | System.HasMediaAudioCD | System.HasMediaDVD</visible>
		</control>
		<control type="button" id="6612">
			<font>Material24</font>
			<label></label>
			<include content="HeaderButton">
				<param name="align" value="false"/>
			</include>
			<onclick condition="Integer.IsGreater(Playlist.Length(video),1) + !Integer.IsGreater(Playlist.Length(music),1)">ActivateWindow(videoplaylist)</onclick>
			<onclick condition="!Integer.IsGreater(Playlist.Length(video),1) + Integer.IsGreater(Playlist.Length(music),1)">ActivateWindow(musicplaylist)</onclick>
			<visible>[
				[!VideoPlayer.Content(livetv) + Integer.IsGreater(Playlist.Length(video),1)]
				| Integer.IsGreater(Playlist.Length(music),1)
				]
				+ !Window.IsVisible(MyPlaylist.xml)
			</visible>
		</control>
		<control type="button" id="6620">
			<font>Material24</font>
			<label></label>
			<include content="HeaderButton">
				<param name="align" value="false"/>
			</include>
			<onclick>fullscreen</onclick>
			<visible>Player.HasMedia</visible>
		</control>
	</include>
	<!-- Globalsearch -->
	<include name="HeaderGlobalsearch">
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="0"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="1"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="2"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="3"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="4"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="5"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="6"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="7"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="8"/>
		</include>
		<include content="HeaderGlobalsearchItem">
			<param name="id" value="9"/>
		</include>
	</include>
	<include name="HeaderGlobalsearchItem">
		<definition>
			<control type="label">
				<scroll>true</scroll>
				<label>$INFO[Container(9000).ListItemPosition($PARAM[id]).Label]</label>
				<textcolor>$VAR[AccentColor]</textcolor>
				<include>HeaderButton</include>
				<visible>Control.HasFocus(9000) + Container(9000).Position($PARAM[id]) + !String.IsEmpty(Container(9000).ListItemPosition($PARAM[id]).Label)</visible>
			</control>
			<control type="label">
				<scroll>true</scroll>
				<label>$INFO[Container(9000).ListItemPosition($PARAM[id]).Label]</label>
				<textcolor>selected</textcolor>
				<include>HeaderButton</include>
				<visible>!Control.HasFocus(9000) + Container(9000).Position($PARAM[id]) + !String.IsEmpty(Container(9000).ListItemPosition($PARAM[id]).Label)</visible>
			</control>
			<control type="label">
				<scroll>false</scroll>
				<include>HeaderButton</include>
				<label>$INFO[Container(9000).ListItemPosition($PARAM[id]).Label]</label>
				<visible>!Container(9000).Position($PARAM[id]) + !String.IsEmpty(Container(9000).ListItemPosition($PARAM[id]).Label)</visible>
			</control>
		</definition>
	</include>
</includes>