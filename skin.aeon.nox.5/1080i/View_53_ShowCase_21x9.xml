<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_53_ShowCase">
		<control type="group">
			<visible>Control.IsVisible(53)</visible>
			<top>-20</top>
			<include>ViewAnimation</include>
			<control type="group">
				<camera x="1280" y="810" />
				<control type="group" id="6001">
					<left>375</left>
					<top>570</top>
					<visible>Container.OnNext</visible>
					<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>-390</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-10).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-10</include>
					</control>
					<control type="group">
						<left>-255</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-9).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-9</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-8).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-8</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>2040</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(9).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2505" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem9</include>
					</control>
					<control type="group">
						<left>1905</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(8).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2370" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem8</include>
					</control>
					<control type="group">
						<left>1770</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2235" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>825</left>
							<visible>Container.OnNext</visible>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay-1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6002">
					<left>375</left>
					<top>570</top>
					<visible>Container.OnPrevious</visible>
					<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1905</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(10).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="2370" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem10</include>
					</control>
					<control type="group">
						<left>1770</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(9).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2235" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem9</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(8).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem8</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>-525</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-9).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-675" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-9</include>
					</control>
					<control type="group">
						<left>-390</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-8).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-8</include>
					</control>
					<control type="group">
						<left>-255</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>690</left>
							<visible>Container.OnPrevious</visible>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6000">
					<left>375</left>
					<top>570</top>
					<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002)</visible>
					<control type="group">
						<left>-390</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-9).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-9</include>
					</control>
					<control type="group">
						<left>-255</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-8).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-8</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>1905</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(9).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2370" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem9</include>
					</control>
					<control type="group">
						<left>1770</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(8).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2235" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem8</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<left>758</left>
						<animation effect="rotatey" center="0" start="1" end="1" time="0" condition="true">Conditional</animation>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<include>MovieShowCaseItem0</include>
					</control>
				</control>
			</control>
			<include condition="Skin.HasSetting(HorizontalListNav)">scmfixed</include>
			<include condition="!Skin.HasSetting(HorizontalListNav)">scmwrap</include>
			<control type="scrollbar" id="5361">
				<left>110</left>
				<top>984</top>
				<width>2320</width>
				<height>12</height>
				<onup>53</onup>
				<ondown>615</ondown>
				<texturesliderbackground />
				<texturesliderbar border="6,0,6,0">scrollbar/texturesliderbar_hor.png</texturesliderbar>
				<texturesliderbarfocus border="6,0,6,0">scrollbar/texturesliderbarfocus_hor.png</texturesliderbarfocus>
				<textureslidernib />
				<textureslidernibfocus />
				<showonepage>false</showonepage>
				<orientation>horizontal</orientation>
				<animation effect="fade" start="100" end="0" time="500" delay="500" condition="!Control.HasFocus(5361) + !Container.Scrolling">Conditional</animation>
			</control>
		</control>
	</include>
	<include name="ShowCaseInfoPanel">
		<control type="group" id="12000">
			<visible>!String.IsEmpty(Control.GetLabel(4420)) + Control.IsVisible(4420) + !ListItem.IsParentFolder</visible>
			<animation effect="slide" start="0,-1200" end="0,0" time="720" tween="cubic">VisibleChange</animation>
			<animation effect="slide" start="0,-1200" end="0,0" time="720" tween="cubic">WindowOpen</animation>
			<animation effect="slide" end="0,-1200" start="0,0" time="720" tween="cubic">WindowClose</animation>
			<animation effect="slide" start="0,0" end="0,20" time="720" tween="cubic" condition="Control.IsVisible(52)">Conditional</animation>
			<top>50</top>
			<control type="image">
				<description>background image</description>
				<left>65</left>
				<top>834</top>
				<width>2422</width>
				<height>734</height>
				<texture border="40">panel_reflect.png</texture>
			</control>
			<control type="image">
				<description>background image</description>
				<left>65</left>
				<top>130</top>
				<width>2422</width>
				<height>734</height>
				<texture border="40">listpanel_back.png</texture>
			</control>
			<control type="group">
				<visible>String.IsEqual(Control.GetLabel(4420),1)</visible>
				<include>SettingsFadeAnimation</include>
				<control type="grouplist">
					<left>96</left>
					<top>162</top>
					<control type="button">
						<label>$VAR[InfoPanelLabel1Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="button">
						<label>$VAR[InfoPanelLabel2Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
				</control>
				<control type="image">
					<left>597</left>
					<top>162</top>
					<width>2</width>
					<height>179</height>
					<texture border="1">separator3.png</texture>
				</control>
				<control type="grouplist">
					<left>600</left>
					<top>162</top>
					<control type="button">
						<label>$VAR[InfoPanelLabel3Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="group">
						<control type="button">
							<label>$VAR[InfoPanelLabel4Var]</label>
							<width>251</width>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
						<control type="image">
							<left>251</left>
							<width>2</width>
							<height>88</height>
							<texture border="1">separator3.png</texture>
						</control>
						<control type="button">
							<label>$VAR[InfoPanelLabel5Var]</label>
							<left>251</left>
							<width>250</width>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
					</control>
				</control>
				<control type="image">
					<left>1098</left>
					<top>162</top>
					<width>2</width>
					<height>179</height>
					<texture border="1">separator3.png</texture>
				</control>
				<control type="grouplist">
					<left>1101</left>
					<top>162</top>
					<control type="button">
						<label>[COLOR labelheader]$LOCALIZE[574]:[/COLOR][CR]$INFO[ListItem.Country]$INFO[Window(Home).Property(NextAired.Country)]</label>
						<width>714</width>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="group">
						<control type="button">
							<width>357</width>
							<label>[COLOR labelheader]$LOCALIZE[570]:[/COLOR][CR]$INFO[ListItem.DateAdded]</label>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
						<control type="image">
							<left>357</left>
							<width>2</width>
							<height>88</height>
							<texture border="1">separator3.png</texture>
						</control>
						<control type="button">
							<label>[COLOR labelheader]$LOCALIZE[568]:[/COLOR][CR]$INFO[ListItem.LastPlayed]</label>
							<left>357</left>
							<width>357</width>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
					</control>
				</control>
				<control type="textbox">
					<label>$VAR[VideoPlotVar]</label>
					<top>342</top>
					<left>111</left>
					<width>1690</width>
					<height>180</height>
					<font>font14_textbox2</font>
					<pagecontrol>62</pagecontrol>
					<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll) + !Control.HasFocus(62)</autoscroll>
					<include>ShowCaseInfoPanelButtonsValues</include>
				</control>
				<control type="scrollbar" id="62">
					<top>342</top>
					<left>1800</left>
					<width>14</width>
					<height>180</height>
					<onup>SetProperty(MediaMenu,True,home)</onup>
					<onup>SetFocus(9050)</onup>
					<onleft>50</onleft>
					<onright>50</onright>
					<ondown>50</ondown>
					<texturesliderbackground>scrollbar/texturesliderbackground3.png</texturesliderbackground>
					<texturesliderbar colordiffuse="55ffffff" border="1">scrollbar/texturesliderbar3.png</texturesliderbar>
					<texturesliderbarfocus border="1">scrollbar/texturesliderbar3.png</texturesliderbarfocus>
					<showonepage>false</showonepage>
					<orientation>vertical</orientation>
				</control>
				<control type="image">
					<left>96</left>
					<top>464</top>
					<width>1720</width>
					<height>60</height>
					<texture border="1">separator2.png</texture>
				</control>
				<control type="image">
					<left>1816</left>
					<top>162</top>
					<width>640</width>
					<height>360</height>
					<fadetime>200</fadetime>
					<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
					<bordertexture border="1,1,2,1">thumbs/panel_border.png</bordertexture>
					<bordersize>1,1,2,1</bordersize>
				</control>
				<control type="image">
					<left>1816</left>
					<top>162</top>
					<width>640</width>
					<height>360</height>
					<texture>black.png</texture>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="videowindow">
					<left>1816</left>
					<top>162</top>
					<width>640</width>
					<height>360</height>
					<visible>Player.HasVideo</visible>
				</control>
			</control>
			<control type="group">
				<visible>String.IsEqual(Control.GetLabel(4420),2)</visible>
				<include>SettingsFadeAnimation</include>
				<control type="grouplist">
					<left>96</left>
					<top>162</top>
					<control type="button">
						<label>$VAR[InfoPanelLabel1Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="button">
						<label>$VAR[InfoPanelLabel2Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="button">
						<label>$VAR[InfoPanelLabel3Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="group">
						<control type="button">
							<label>$VAR[InfoPanelLabel4Var]</label>
							<width>251</width>
							<height>92</height>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
						<control type="image">
							<left>251</left>
							<width>2</width>
							<height>90</height>
							<texture border="1">separator3.png</texture>
						</control>
						<control type="button">
							<label>$VAR[InfoPanelLabel5Var]</label>
							<left>251</left>
							<width>250</width>
							<height>92</height>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
					</control>
				</control>
				<control type="image">
					<left>597</left>
					<top>162</top>
					<width>2</width>
					<height>359</height>
					<texture border="1">separator3.png</texture>
				</control>
				<control type="textbox">
					<left>641</left>
					<label>$INFO[ListItem.Plot]</label>
					<label>$VAR[VideoPlotVar]</label>
					<top>162</top>
					<width>1515</width>
					<height>354</height>
					<font>font14_textbox</font>
					<pagecontrol>62</pagecontrol>
					<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll) + !Control.HasFocus(62)</autoscroll>
					<include>ShowCaseInfoPanelButtonsValues</include>
				</control>
				<control type="scrollbar" id="62">
					<top>162</top>
					<left>2202</left>
					<width>14</width>
					<height>360</height>
					<onup>SetProperty(MediaMenu,True,home)</onup>
					<onup>SetFocus(9050)</onup>
					<onleft>50</onleft>
					<onright>50</onright>
					<ondown>50</ondown>
					<texturesliderbackground>scrollbar/texturesliderbackground3.png</texturesliderbackground>
					<texturesliderbar colordiffuse="55ffffff" border="1">scrollbar/texturesliderbar3.png</texturesliderbar>
					<texturesliderbarfocus border="1">scrollbar/texturesliderbar3.png</texturesliderbarfocus>
					<showonepage>false</showonepage>
					<orientation>vertical</orientation>
				</control>
				<control type="image">
					<left>596</left>
					<top>464</top>
					<width>1620</width>
					<height>60</height>
					<texture border="1">separator2.png</texture>
				</control>
				<control type="image">
					<left>1816</left>
					<top>162</top>
					<width>640</width>
					<height>360</height>
					<fadetime>200</fadetime>
					<aspectratio align="right">keep</aspectratio>
					<texture background="true">$VAR[PosterThumbVar]</texture>
					<bordertexture border="1,1,2,1">thumbs/panel_border.png</bordertexture>
					<bordersize>1,1,2,1</bordersize>
				</control>
			</control>
		</control>
	</include>
	<include name="scmfixed">
		<control type="fixedlist" id="53">
			<include>contents53list</include>
		</control>
	</include>
	<include name="scmwrap">
		<control type="wraplist" id="53">
			<include>contents53list</include>
		</control>
	</include>
	<include name="contents53list">
		<left>-69</left>
		<top>540</top>
		<width>2698</width>
		<height>525</height>
		<onleft>53</onleft>
		<onright>53</onright>
		<onup>62</onup>
		<ondown>5361</ondown>
		<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos) | Container.Content(seasons) | Container.Content(genres) | Container.Content(sets)</visible>
		<viewtype label="31077">bigwrap</viewtype>
		<pagecontrol>5361</pagecontrol>
		<scrolltime tween="quadratic">300</scrolltime>
		<focusposition>3</focusposition>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<itemlayout height="525" width="260" />
		<focusedlayout height="525" width="260" />
	</include>
	<include name="MovieShowcaseThumb">
		<left>-4</left>
		<top>-16</top>
		<width>304</width>
		<height>436</height>
		<align>center</align>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<fadetime>0</fadetime>
		<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowcaseThumbReflection">
		<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
		<fadetime>0</fadetime>
		<left>16</left>
		<top>400</top>
		<width>264</width>
		<height>396</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
	</include>
	<include name="WatchedOverlayShowCase">
		<left>180</left>
		<top>-16</top>
		<width>120</width>
		<height>120</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowCaseItem-10">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-10Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-10</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-10Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-9">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-9Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-9</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-9Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>97</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-8">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-8Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-8</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-8Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>104</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-7">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-7</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>111</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-6">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-6</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>121</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-5">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-5</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>131</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-4">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-4</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>145</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-3">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-3</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>160</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-2">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-2</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>179</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-1">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay-1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>180</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem0">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay0Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon0</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem1">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>86</left>
			<width>192</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay2Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>102</left>
			<width>177</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay3Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>121</left>
			<width>158</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay4Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>136</left>
			<width>144</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay5Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>148</left>
			<width>133</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay6Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>158</left>
			<width>122</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay7Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>167</left>
			<width>113</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem8">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem8Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay8Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem8Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>175</left>
			<width>105</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem9">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem9Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay9Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem9Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>183</left>
			<width>98</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem10">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem10Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay10Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem10Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<variable name="ShowcaseItem-10Var">
		<value condition="!String.IsEmpty(ListItem(-10).Art(poster))">$INFO[ListItem(-10).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-10).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-10).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-9Var">
		<value condition="!String.IsEmpty(ListItem(-9).Art(poster))">$INFO[ListItem(-9).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-9).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-9).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-8Var">
		<value condition="!String.IsEmpty(ListItem(-8).Art(poster))">$INFO[ListItem(-8).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-8).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-8).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-7Var">
		<value condition="!String.IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="!String.IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-1Var">
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem0Var">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="!String.IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="!String.IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="!String.IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(8).Icon]</value>
	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="!String.IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(9).Icon]</value>
	</variable>
	<variable name="ShowcaseItem10Var">
		<value condition="!String.IsEmpty(ListItem(10).Art(poster))">$INFO[ListItem(10).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(10).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(10).Icon]</value>
	</variable>
	<variable name="IconOverlay-1Var">
		<value condition="ListItem(-1).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(-1).Overlay]</value>
	</variable>
	<variable name="IconOverlay0Var">
		<value condition="ListItem.IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem.Overlay]</value>
	</variable>
	<variable name="IconOverlay1Var">
		<value condition="ListItem(1).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(1).Overlay]</value>
	</variable>
	<variable name="IconOverlay2Var">
		<value condition="ListItem(2).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(2).Overlay]</value>
	</variable>
	<variable name="IconOverlay3Var">
		<value condition="ListItem(3).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(3).Overlay]</value>
	</variable>
	<variable name="IconOverlay4Var">
		<value condition="ListItem(4).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(4).Overlay]</value>
	</variable>
	<variable name="IconOverlay5Var">
		<value condition="ListItem(5).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(5).Overlay]</value>
	</variable>
	<variable name="IconOverlay6Var">
		<value condition="ListItem(6).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(6).Overlay]</value>
	</variable>
	<variable name="IconOverlay7Var">
		<value condition="ListItem(7).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(7).Overlay]</value>
	</variable>
	<variable name="IconOverlay8Var">
		<value condition="ListItem(8).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(8).Overlay]</value>
	</variable>
	<variable name="IconOverlay9Var">
		<value condition="ListItem(9).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(9).Overlay]</value>
	</variable>
	<variable name="IconOverlay10Var">
		<value condition="ListItem(10).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(10).Overlay]</value>
	</variable>
	<include name="UnwatchedIconCircle">
		<control type="image">
			<width>36</width>
			<height>36</height>
			<aspectratio>keep</aspectratio>
			<texture>circle.png</texture>
		</control>
	</include>
	<include name="UnwatchedIconVars">
		<top>2</top>
		<width>36</width>
		<height>36</height>
		<align>center</align>
		<aligny>top</aligny>
		<font>font10</font>
		<textcolor>FF000000</textcolor>
		<scroll>false</scroll>
	</include>
	<include name="UnwatchedIcon">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon0">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-2">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-2).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-3">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-3).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-4">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-4).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-5">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-5).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-6">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-6).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-7">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-7).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-8">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-8).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-8).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-9">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-9).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-9).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-10">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem(-10).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-10).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
</includes>