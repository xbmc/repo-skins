<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_509_MyFlix">
		<control type="group">
			<visible>Control.IsVisible(509)</visible>
			<include>ViewAnimation</include>
			<control type="label" id="4447">
				<description>MyFlix Open Case Movies</description>
				<label>$LOCALIZE[31966]</label>
				<include>HiddenObject</include>
				<include condition="!String.IsEmpty(Skin.String(MyFlix.Delay))">MyFlixDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Skin.HasSetting(Enable.MyFlix.OpenCase) + !ListItem.IsCollection + Container.Content(movies)</visible>
			</control>
			<control type="label" id="4448">
				<description>MyFlix Open Case Sets</description>
				<label>$LOCALIZE[31966]</label>
				<include>HiddenObject</include>
				<include condition="!String.IsEmpty(Skin.String(MyFlix.Delay))">MyFlixDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Skin.HasSetting(Enable.MyFlix.OpenCase) + ListItem.IsCollection</visible>
			</control>
			<control type="group">
				<animation effect="slide" start="0" end="0,140" condition="[Container.Content(movies) + Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | [Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)]">Conditional</animation>
				<control type="group">
					<animation effect="slide" end="0,320" condition="Skin.HasSetting(Disable.MyFlixInfo)">Conditional</animation>
					<control type="image" id="50999">
						<left>22</left>
						<top>40</top>
						<width>526</width>
						<height>204</height>
						<aspectratio align="left" aligny="center">keep</aspectratio>
						<texture background="true">$VAR[ArtworkLogoVar]</texture>
						<visible>[Container.Content(movies) | Container.Content(sets)] + Skin.HasSetting(Enable.MyFlix.MovieLogo) | [Container.Content(tvshows) | Container.Content(episodes)] + Skin.HasSetting(Enable.MyFlix.TVLogo)</visible>
					</control>
					<control type="group">
						<top>75</top>
						<animation effect="slide" start="0" end="0,60" condition="[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(Enable.MyFlix.MovieLogo) | Container.Content(tvshows) + !Skin.HasSetting(Enable.MyFlix.TVLogo)">Conditional</animation>
						<control type="group">
							<visible>!Control.IsVisible(50999) | String.IsEmpty(Control.GetLabel(50999))</visible>
							<left>25</left>
							<control type="label">
								<left>4</left>
								<top>4</top>
								<height>124</height>
								<font>font_musicviz</font>
								<textcolor>shadow</textcolor>
								<label>$VAR[MyFlixTitleLabelVar]</label>
							</control>
							<control type="label">
								<height>124</height>
								<font>font_musicviz</font>
								<shadowcolor>shadow</shadowcolor>
								<label>$VAR[MyFlixTitleLabelVar]</label>
							</control>
						</control>
					</control>
				</control>
				<control type="group">
					<left>10</left>
					<top>280</top>
					<width>1000</width>
					<height>270</height>
					<include>VisibleFadeAnimation</include>
					<visible>!Skin.HasSetting(Disable.MyFlixInfo)</visible>
					<animation effect="slide" start="0" end="0,-40" condition="Container.Content(tvshows) | Container.Content(episodes)">Conditional</animation>
					<control type="group">
						<control type="image">
							<left>17</left>
							<top>-35</top>
							<width>65</width>
							<height>30</height>
							<texture colordiffuse="grey">logos/imdb.png</texture>
							<visible>!String.IsEmpty(ListItem.Top250)</visible>
						</control>
						<control type="Label">
							<left>90</left>
							<top>-42</top>
							<width>125</width>
							<height>45</height>
							<label>[B]$INFO[ListItem.Top250,#][/B]</label>
							<font>font14</font>
							<shadowcolor>shadow</shadowcolor>
							<textcolor>grey</textcolor>
							<visible>!String.IsEmpty(ListItem.Top250)</visible>
						</control>
					</control>
					<control type="group">
						<visible>Container.Content(movies) + !ListItem.IsCollection</visible>
						<control type="grouplist">
							<control type="label">
								<width>800</width>
								<height>45</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[20339]: [/COLOR]$INFO[ListItem.Director]</label>
								<visible>!String.IsEmpty(ListItem.Director)</visible>
							</control>
							<control type="label">
								<width>800</width>
								<height>45</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[515]: [/COLOR]$INFO[ListItem.Genre]</label>
								<visible>!String.IsEmpty(ListItem.Genre)</visible>
							</control>
							<control type="label">
								<width>1000</width>
								<height>45</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Year,, • ]$INFO[ListItem.RatingAndVotes,, • ]$INFO[ListItem.Duration(mins),,m]$INFO[ListItem.Endtime, • $LOCALIZE[19127]: ,]</label>
								<visible>!Skin.HasSetting(Enable.HourMinuteDuration)</visible>
							</control>
							<control type="label">
								<width>1000</width>
								<height>45</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Year,, • ]$INFO[ListItem.RatingAndVotes,, • ]$VAR[ItemDurationVar]$INFO[ListItem.Endtime, • $LOCALIZE[31393]: ,]</label>
								<visible>Skin.HasSetting(Enable.HourMinuteDuration)</visible>
							</control>
						</control>
						<control type="textbox">
							<left>15</left>
							<top>150</top>
							<width>800</width>
							<height>130</height>
							<font>font15</font>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<label>[COLOR $VAR[ThemeLabelColor]]$INFO[ListItem.Tagline,,[CR]][/COLOR]$VAR[VideoPlotVar]</label>
							<autoscroll delay="3000" time="3000" repeat="4000">true</autoscroll>
						</control>
					</control>
					<control type="group">
						<visible>ListItem.IsCollection + ![Container.OnNext | Container.OnPrevious]</visible>
						<animation effect="fade" time="140" delay="100">Visible</animation>
						<control type="grouplist">
							<control type="label">
								<width>800</width>
								<height>45</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[20339]: [/COLOR]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Director)]</label>
								<visible>!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Director))</visible>
							</control>
							<control type="label">
								<width>800</width>
								<height>45</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[515]: [/COLOR]$VAR[MovieSetGenreVar]</label>
								<visible>!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Genre)) | !String.IsEmpty(Container(4500).ListItem(0).Genre)</visible>
							</control>
							<control type="label">
								<width>1000</width>
								<height>45</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[Container(4500).ListItem(0).Year]$INFO[Container(4500).ListItem(-1).Year, - ]$INFO[Container(4500).NumItems, • , $LOCALIZE[342]]$INFO[ListItem.RatingAndVotes, • ]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Runtime), • , $LOCALIZE[12391]]</label>
							</control>
						</control>
						<control type="textbox">
							<left>15</left>
							<top>150</top>
							<width>800</width>
							<height>130</height>
							<font>font15</font>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<label>$VAR[VideoPlotVar]</label>
							<autoscroll delay="3000" time="3000" repeat="4000">true</autoscroll>
						</control>
					</control>
					<control type="grouplist">
						<visible>[Container.Content(tvshows) | Container.Content(seasons)] + !Skin.HasSetting(Disable.NextAired) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Status))</visible>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[126]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Status)]</label>
						</control>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>$VAR[TMDbHelperNextAiredLabelVar]</label>
							<visible>!Skin.HasSetting(Disable.NextAired)</visible>
						</control>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[515]: [/COLOR]$INFO[ListItem.Genre]</label>
							<visible>!String.IsEmpty(ListItem.Genre)</visible>
						</control>
					</control>
					<control type="grouplist">
						<visible>[Container.Content(tvshows) | Container.Content(seasons)] + [Skin.HasSetting(Disable.NextAired) | String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Status))]</visible>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[563]: [/COLOR]$INFO[ListItem.RatingAndVotes]</label>
						</control>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[31452]: [/COLOR]$INFO[ListItem.Premiered]</label>
						</control>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[515]: [/COLOR]$INFO[ListItem.Genre]</label>
							<visible>!String.IsEmpty(ListItem.Genre)</visible>
						</control>
					</control>
					<control type="grouplist">
						<visible>Container.Content(episodes)</visible>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[20359]: [/COLOR]$VAR[FloorLabelVar]</label>
							<include>DefaultButtonsValues</include>
						</control>
						<control type="label">
							<height>45</height>
							<width>650</width>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[2050]: [/COLOR]$INFO[ListItem.Duration(mins),, $LOCALIZE[12391]]</label>
							<visible>!String.IsEmpty(ListItem.Duration) + !Skin.HasSetting(Enable.HourMinuteDuration)</visible>
						</control>
						<control type="label">
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[126]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Status)]</label>
							<visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Status))</visible>
						</control>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[31010]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),S]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),E]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Name)]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired), (,)]</label>
							<visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired)) + !Skin.HasSetting(Disable.NextAired)</visible>
						</control>
						<control type="label">
							<width>800</width>
							<height>45</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[31011]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired.Season),S]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired.Episode),E,  -]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired.Name)]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired), (,)]</label>
							<visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Last_Aired)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</visible>
						</control>
						<control type="label">
							<height>45</height>
							<width>650</width>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<include>DefaultButtonsValues</include>
							<label>$INFO[ListItem.Premiered,, • ]$INFO[ListItem.RatingAndVotes,, • ]$VAR[ItemDurationVar]</label>
						</control>
					</control>
					<control type="textbox">
						<left>15</left>
						<top>90</top>
						<width>800</width>
						<height>210</height>
						<font>font15</font>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<label>$VAR[VideoPlotVar]</label>
						<autoscroll delay="3000" time="2500" repeat="4000">true</autoscroll>
						<animation effect="slide" start="0" end="0,45" condition="Container.Content(tvshows)">Conditional</animation>
						<animation effect="slide" start="0" end="0,155" condition="Container.Content(episodes)">Conditional</animation>
						<visible>Container.Content(tvshows) | Container.Content(episodes)</visible>
					</control>
				</control>
			</control>
			<control type="fixedlist" id="509">
				<top>518</top>
				<width>1920</width>
				<height>600</height>
				<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(episodes)</visible>
				<onleft>509</onleft>
				<onright>509</onright>
				<onup>SetProperty(MediaMenu,True,Home)</onup>
				<onup>SetFocus(9050)</onup>
				<ondown condition="Control.IsVisible(50960)">50960</ondown>
				<ondown condition="!Control.IsVisible(50960)">4400</ondown>
				<viewtype label="$LOCALIZE[31244]">bigwrap</viewtype>
				<pagecontrol>50960</pagecontrol>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<itemlayout height="525" width="271" condition="[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets) | [Container.Content(tvshows) + !Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
					<control type="image">
						<include>FlixNoCaseVars</include>
						<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
					</control>
					<control type="image">
						<include>FlixNoClearCaseVars</include>
						<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
					</control>
					<include>FlixPoster</include>
					<include>FlixPosterOverlay</include>
					<control type="image">
						<left>10</left>
						<top>75</top>
						<width>268</width>
						<height>390</height>
						<texture border="1">black.png</texture>
						<colordiffuse>$VAR[MyFlixDimmerVar]</colordiffuse>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<include>FlixCaseVars</include>
						<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
					</control>
					<include>FlixPosterReflection</include>
					<include>FlixPosterCaseReflection</include>
				</itemlayout>
				<focusedlayout height="525" width="271" condition="[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets) | [Container.Content(tvshows) + !Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
					<control type="group">
						<visible>[[Container.Content(movies) | Container.Content(sets)] + Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)] | [[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(Enable.MyFlix.OpenCase)] | Container.Content(tvshows)</visible>
						<control type="image">
							<include>FlixNoCaseVars</include>
							<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
						</control>
						<control type="image">
							<include>FlixNoClearCaseVars</include>
							<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
						</control>
						<include>FlixPoster</include>
						<control type="image">
							<include>FlixCaseVars</include>
							<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
						</control>
						<include>FlixPosterOverlay</include>
						<include>FlixPosterReflection</include>
						<include>FlixPosterCaseReflection</include>
					</control>
				</focusedlayout>
				<itemlayout height="270" width="480" condition="[Container.Content(movies) + Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | [Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
					<include>FlixLandscape</include>
					<control type="image">
						<left>410</left>
						<top>217</top>
						<width>40</width>
						<height>40</height>
						<texture>$VAR[OverlayVar]</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
						<visible>[!String.IsEmpty(Skin.String(509.Movies.DisableOverlay)) + Container.Content(movies)] | [!String.IsEmpty(Skin.String(509.Sets.DisableOverlay)) + Container.Content(sets)] | [!String.IsEmpty(Skin.String(509.TV.DisableOverlay)) + Container.Content(tvshows)]</visible>
					</control>
					<control type="image">
						<left>-10</left>
						<top>197</top>
						<width>480</width>
						<height>270</height>
						<texture border="1">black.png</texture>
						<colordiffuse>$VAR[MyFlixDimmerVar]</colordiffuse>
						<bordersize>20</bordersize>
					</control>
					<include>FlixLandscapeReflection</include>
				</itemlayout>
				<focusedlayout height="270" width="480" condition="[Container.Content(movies) + Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | [Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
					<include>FlixLandscape</include>
					<control type="image">
						<left>410</left>
						<top>217</top>
						<width>40</width>
						<height>40</height>
						<texture>$VAR[OverlayVar]</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
						<visible>[!String.IsEmpty(Skin.String(509.Movies.DisableOverlay)) + Container.Content(movies)] | [!String.IsEmpty(Skin.String(509.Sets.DisableOverlay)) + Container.Content(sets)] | [!String.IsEmpty(Skin.String(509.TV.DisableOverlay)) + Container.Content(tvshows)]</visible>
					</control>
					<include>FlixLandscapeReflection</include>
				</focusedlayout>
				<itemlayout height="270" width="480" condition="Container.Content(episodes)">
					<include>FlixEpisodeThumb</include>
					<control type="image">
						<left>410</left>
						<top>217</top>
						<width>40</width>
						<height>40</height>
						<texture>$VAR[OverlayVar]</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
						<visible>!String.IsEmpty(Skin.String(509.Episodes.DisableOverlay)) + Container.Content(episodes)</visible>
					</control>
					<control type="image">
						<top>197</top>
						<width>480</width>
						<height>270</height>
						<texture border="1">black.png</texture>
						<colordiffuse>$VAR[MyFlixDimmerVar]</colordiffuse>
						<bordersize>20</bordersize>
					</control>
				</itemlayout>
				<focusedlayout height="270" width="480" condition="Container.Content(episodes)">
					<include>FlixEpisodeThumb</include>
					<control type="image">
						<left>410</left>
						<top>217</top>
						<width>40</width>
						<height>40</height>
						<texture>$VAR[OverlayVar]</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
						<visible>!String.IsEmpty(Skin.String(509.Episodes.DisableOverlay)) + Container.Content(episodes)</visible>
					</control>
				</focusedlayout>
			</control>
			<control type="group">
				<top>518</top>
				<visible>[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)</visible>
				<control type="image">
					<include>FlixCaseVars</include>
					<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
				</control>
				<control type="image">
					<include>FlixNoCaseVars</include>
					<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
				</control>
				<control type="image">
					<include>FlixNoClearCaseVars</include>
					<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
				</control>
			</control>
			<control type="group">
				<left>34</left>
				<top>669</top>
				<width>215</width>
				<height>215</height>
				<visible>[[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
				<include>MyFlixRollingMovieSetDiscs</include>
			</control>
			<control type="group">
				<left>38</left>
				<top>682</top>
				<width>211</width>
				<height>211</height>
				<visible>[[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + !Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
				<animation effect="slide" end="-2,-11" condition="Skin.HasSetting(useclearcases)">Conditional</animation>
				<include>MyFlixRollingMovieSetDiscs</include>
			</control>
			<control type="group" id="7000">
				<visible>[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + [Container.OnNext | Container.OnPrevious] + Skin.HasSetting(Enable.MyFlix.OpenCase)</visible>
				<animation effect="fade" time="1000" end="0" reversible="false">Hidden</animation>
				<control type="label">
					<include>HiddenObject</include>
				</control>
			</control>
			<control type="group">
				<top>518</top>
				<visible>[[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
				<include>MyFlixModAnimation</include>
				<include>FlixPoster</include>
				<control type="image">
					<include>FlixCaseVars</include>
					<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
				</control>
				<include>FlixPosterOverlay</include>
				<include>FlixPosterReflection</include>
				<include>FlixPosterCaseReflection</include>
			</control>
		</control>
	</include>
	<include name="FlixPoster">
		<control type="image">
			<left>10</left>
			<top>75</top>
			<width>268</width>
			<height>390</height>
			<texture background="true">$VAR[PosterThumbVar]</texture>
			<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
			<bordersize>20</bordersize>
		</control>
	</include>
	<include name="FlixPosterOverlay">
		<control type="image">
			<left>218</left>
			<top>95</top>
			<width>40</width>
			<height>40</height>
			<texture>$VAR[OverlayVar]</texture>
			<aspectratio align="center" aligny="top">keep</aspectratio>
			<visible>[!String.IsEmpty(Skin.String(509.Movies.DisableOverlay)) + Container.Content(movies)] | [!String.IsEmpty(Skin.String(509.Sets.DisableOverlay)) + Container.Content(sets)] | [!String.IsEmpty(Skin.String(509.TV.DisableOverlay)) + Container.Content(tvshows)]</visible>
		</control>
	</include>
	<include name="FlixLandscape">
		<control type="image">
			<left>-10</left>
			<top>197</top>
			<width>480</width>
			<height>270</height>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem0Var]</texture>
			<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
			<bordersize>20</bordersize>
		</control>
	</include>
	<include name="FlixLandscapeReflection">
		<control type="image">
			<left>10</left>
			<top>465</top>
			<width>440</width>
			<height>270</height>
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png">$VAR[LandscapeItem0Var]</texture>
		</control>
	</include>
	<include name="FlixEpisodeThumb">
		<control type="image">
			<top>197</top>
			<width>480</width>
			<height>270</height>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[NoSpoilerIconVar]</texture>
			<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
			<bordersize>20</bordersize>
		</control>
	</include>
	<include name="FlixCaseVars">
		<left>-16</left>
		<top>60</top>
		<width>292</width>
		<height>408</height>
		<visible>Skin.HasSetting(Enable.MyFlix.Cases) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)]</visible>
	</include>
	<include name="FlixNoCaseVars">
		<left>-12</left>
		<top>89</top>
		<width>288</width>
		<height>376</height>
		<visible>!Skin.HasSetting(useclearcases) + !Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase) + [Container.Content(movies) | Container.Content(sets)] + !ListItem.IsParentFolder</visible>
	</include>
	<include name="FlixNoClearCaseVars">
		<left>-10</left>
		<top>66</top>
		<width>280</width>
		<height>394</height>
		<visible>Skin.HasSetting(useclearcases) + !Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase) + [Container.Content(movies) | Container.Content(sets)] + !ListItem.IsParentFolder</visible>
	</include>
	<include name="FlixPosterReflection">
		<control type="image">
			<left>29</left>
			<top>458</top>
			<width>228</width>
			<height>402</height>
			<texture background="true" flipy="true" diffuse="thumbs/thumb_reflect.png" colordiffuse="73FFFFFF">$VAR[PosterThumbVar]</texture>
		</control>
	</include>
	<include name="FlixPosterCaseReflection">
		<control type="image">
			<left>-18</left>
			<top>434</top>
			<width>295</width>
			<height>410</height>
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" colordiffuse="73FFFFFF">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
			<visible>Skin.HasSetting(Enable.MyFlix.Cases) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)]</visible>
		</control>
	</include>
	<include name="MyFlixRollingMovieSetDiscs">
		<control type="image">
			<texture background="true" fallback="BD.png">$INFO[ListItem(0).Art(discart)]</texture>
			<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4447)) + Control.IsVisible(4447)]" reversible="false">
				<effect type="slide" start="1900,0" end="0,0" delay="0" time="3000" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="1080" delay="0" time="3000" tween="cubic" easing="inout" />
			</animation>
			<visible>!ListItem.IsCollection</visible>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(Enable.MyFlix.OpenCase) + ListItem.IsCollection</visible>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(0).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="0" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="0" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(0).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(1).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(1).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(2).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="1000" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="1000" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(3).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="1500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="1500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(4).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="2000" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="2000" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(5).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="2500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="2500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(6).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="3000" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="3000" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(7).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4448)) + Control.IsVisible(4448)]" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="3500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="3500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))</visible>
			</control>
		</control>
	</include>
</includes>